---------------------------------------------------------
--  This code is generated by Terasic System Builder
---------------------------------------------------------
--
-- 
-- This is the top level of our project. 
--	Inputs: 
-- Outputs: 
-- Authors: 
--
---------------------------------------------------------


library ieee;
use ieee.std_logic_1164.all;

entity synth is
port
(

	CLOCK_50, MIDI_RX : in std_logic;
	I2S_BIT_CLOCK, I2S_SOUND_DATA, I2S_LEFT_RIGHT_SELECT : out std_logic;
	LED : out std_logic_vector(7 downto 0)
	
);

end synth;
--end entity;



---------------------------------------------------------
--  Structural coding
---------------------------------------------------------


architecture rtl of synth is

	component midiProcessor
		port(
			CLOCK_50, MIDI_RX : in std_logic;
			isNoteOn, noteSampleTicks, modulationValue : out std_logic
		);
	end component;

	component synthesizer
		port(
			CLOCK_50, isNoteOn : in std_logic;
			noteSampleTicks : in std_logic_vector(23 downto 0);
			modulationValue : in std_logic_vector(7 downto 0);
			i2sBitClock, i2sSoundData, i2sLeftRightSelect : out std_logic
		);
	end component;
	
	SIGNAL i2sBitClock : std_logic;
	SIGNAL i2sSoundData : std_logic;
	SIGNAL i2sLeftRightSelect : std_logic;
	
	SIGNAL isNoteOn : std_logic;
	SIGNAL noteSampleTicks : std_logic_vector(23 downto 0);
	SIGNAL modulationValue : std_logic_vector(7 downto 0);
	
begin

--	MidiProcessor : midiProcessor PORT MAP (CLOCK_50, MIDI_RX, isNoteOn, noteSampleTicks, modulationValue);
--	Synthesizer : synthesizer PORT MAP (CLOCK_50, isNoteOn, noteSampleTicks, modulationValue, i2sBitClock, i2sSoundData, i2sLeftRightSelect);
	
	process (CLOCK_50)
	begin
		if rising_edge(CLOCK_50) then
			I2S_BIT_CLOCK <= i2sBitClock;
			I2S_SOUND_DATA <= i2sSoundData;
			I2S_LEFT_RIGHT_SELECT <= i2sLeftRightSelect;

			if isNoteOn = '1' then
				LED <= noteSampleTicks(7 downto 0);
			else
				LED <= "00000000";
			end if;

		end if;
	end process;
	
end rtl;

