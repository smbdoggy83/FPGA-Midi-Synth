-- -------------------------------------------------------------
--
-- Module: iir5
-- Generated by MATLAB(R) 9.11 and Filter Design HDL Coder 3.1.10.
-- Generated on: 2022-04-26 03:01:54
-- -------------------------------------------------------------

-- -------------------------------------------------------------
-- HDL Code Generation Options:
--
-- TargetLanguage: VHDL
-- InputType: signed/unsigned
-- Name: iir5
-- TestBenchName: iir5_tb
-- TestBenchStimulus: step ramp chirp 

-- Filter Specifications:
--
-- Sample Rate     : N/A (normalized frequency)
-- Response        : Lowpass
-- Specification   : Fp,Fst,Ap,Ast
-- Passband Ripple : 1 dB
-- Stopband Edge   : 0.5
-- Stopband Atten. : 80 dB
-- Passband Edge   : 0.4
-- -------------------------------------------------------------

-- -------------------------------------------------------------
-- HDL Implementation    : Fully parallel
-- Folding Factor        : 1
-- -------------------------------------------------------------
-- Filter Settings:
--
-- Discrete-Time IIR Filter (real)
-- -------------------------------
-- Filter Structure    : Direct-Form II, Second-Order Sections
-- Number of Sections  : 4
-- Stable              : Yes
-- Linear Phase        : No
-- Arithmetic          : fixed
-- Numerator           : s24,23 -> [-1 1)
-- Denominator         : s24,14 -> [-512 512)
-- Scale Values        : s24,14 -> [-512 512)
-- Input               : s24,23 -> [-1 1)
-- Section Input       : s24,23 -> [-1 1)
-- Section Output      : s24,23 -> [-1 1)
-- Output              : s49,47 -> [-2 2)
-- State               : s16,15 -> [-1 1)
-- Numerator Prod      : s40,38 -> [-2 2)
-- Denominator Prod    : s40,29 -> [-1024 1024)
-- Numerator Accum     : s40,36 -> [-8 8)
-- Denominator Accum   : s40,27 -> [-4096 4096)
-- Round Mode          : convergent
-- Overflow Mode       : wrap
-- Cast Before Sum     : true
-- -------------------------------------------------------------



LIBRARY IEEE;
USE IEEE.std_logic_1164.all;
USE IEEE.numeric_std.ALL;

ENTITY iir5 IS
   PORT( clk                             :   IN    std_logic; 
         clk_enable                      :   IN    std_logic; 
         reset                           :   IN    std_logic; 
         filter_in                       :   IN    signed(23 DOWNTO 0); -- sfix24_En23
         filter_out                      :   OUT   signed(48 DOWNTO 0)  -- sfix49_En47
         );

END iir5;


----------------------------------------------------------------
--Module Architecture: iir5
----------------------------------------------------------------
ARCHITECTURE rtl OF iir5 IS
  -- Local Functions
  -- Type Definitions
  TYPE delay_pipeline_type IS ARRAY (NATURAL range <>) OF signed(15 DOWNTO 0); -- sfix16_En15
  -- Constants
  CONSTANT scaleconst1                    : signed(23 DOWNTO 0) := to_signed(11923, 24); -- sfix24_En14
  CONSTANT coeff_b1_section1              : signed(23 DOWNTO 0) := to_signed(8388607, 24); -- sfix24_En23
  CONSTANT coeff_b2_section1              : signed(23 DOWNTO 0) := to_signed(715068, 24); -- sfix24_En23
  CONSTANT coeff_b3_section1              : signed(23 DOWNTO 0) := to_signed(8388607, 24); -- sfix24_En23
  CONSTANT coeff_a2_section1              : signed(23 DOWNTO 0) := to_signed(-12124, 24); -- sfix24_En14
  CONSTANT coeff_a3_section1              : signed(23 DOWNTO 0) := to_signed(14106, 24); -- sfix24_En14
  CONSTANT scaleconst2                    : signed(23 DOWNTO 0) := to_signed(13582, 24); -- sfix24_En14
  CONSTANT coeff_b1_section2              : signed(23 DOWNTO 0) := to_signed(8388607, 24); -- sfix24_En23
  CONSTANT coeff_b2_section2              : signed(23 DOWNTO 0) := to_signed(5789406, 24); -- sfix24_En23
  CONSTANT coeff_b3_section2              : signed(23 DOWNTO 0) := to_signed(8388607, 24); -- sfix24_En23
  CONSTANT coeff_a2_section2              : signed(23 DOWNTO 0) := to_signed(-16998, 24); -- sfix24_En14
  CONSTANT coeff_a3_section2              : signed(23 DOWNTO 0) := to_signed(11571, 24); -- sfix24_En14
  CONSTANT scaleconst3                    : signed(23 DOWNTO 0) := to_signed(22108, 24); -- sfix24_En14
  CONSTANT coeff_b1_section3              : signed(23 DOWNTO 0) := to_signed(8388607, 24); -- sfix24_En23
  CONSTANT coeff_b2_section3              : signed(23 DOWNTO 0) := to_signed(8388607, 24); -- sfix24_En23
  CONSTANT coeff_b3_section3              : signed(23 DOWNTO 0) := to_signed(8388607, 24); -- sfix24_En23
  CONSTANT coeff_a2_section3              : signed(23 DOWNTO 0) := to_signed(-22511, 24); -- sfix24_En14
  CONSTANT coeff_a3_section3              : signed(23 DOWNTO 0) := to_signed(8898, 24); -- sfix24_En14
  CONSTANT scaleconst4                    : signed(23 DOWNTO 0) := to_signed(78, 24); -- sfix24_En14
  CONSTANT coeff_b1_section4              : signed(23 DOWNTO 0) := to_signed(8388607, 24); -- sfix24_En23
  CONSTANT coeff_b2_section4              : signed(23 DOWNTO 0) := to_signed(-1111593, 24); -- sfix24_En23
  CONSTANT coeff_b3_section4              : signed(23 DOWNTO 0) := to_signed(8388607, 24); -- sfix24_En23
  CONSTANT coeff_a2_section4              : signed(23 DOWNTO 0) := to_signed(-9966, 24); -- sfix24_En14
  CONSTANT coeff_a3_section4              : signed(23 DOWNTO 0) := to_signed(15737, 24); -- sfix24_En14
  -- Signals
  SIGNAL input_register                   : signed(23 DOWNTO 0); -- sfix24_En23
  SIGNAL scale1                           : signed(47 DOWNTO 0); -- sfix48_En37
  SIGNAL scaletypeconvert1                : signed(23 DOWNTO 0); -- sfix24_En23
  -- Section 1 Signals 
  SIGNAL a1sum1                           : signed(39 DOWNTO 0); -- sfix40_En27
  SIGNAL a2sum1                           : signed(39 DOWNTO 0); -- sfix40_En27
  SIGNAL b1sum1                           : signed(39 DOWNTO 0); -- sfix40_En36
  SIGNAL b2sum1                           : signed(39 DOWNTO 0); -- sfix40_En36
  SIGNAL typeconvert1                     : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section1                   : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL inputconv1                       : signed(39 DOWNTO 0); -- sfix40_En27
  SIGNAL a2mul1                           : signed(39 DOWNTO 0); -- sfix40_En29
  SIGNAL a3mul1                           : signed(39 DOWNTO 0); -- sfix40_En29
  SIGNAL b1mul1                           : signed(39 DOWNTO 0); -- sfix40_En38
  SIGNAL b2mul1                           : signed(39 DOWNTO 0); -- sfix40_En38
  SIGNAL b3mul1                           : signed(39 DOWNTO 0); -- sfix40_En38
  SIGNAL sub_cast                         : signed(39 DOWNTO 0); -- sfix40_En27
  SIGNAL sub_cast_1                       : signed(39 DOWNTO 0); -- sfix40_En27
  SIGNAL sub_temp                         : signed(40 DOWNTO 0); -- sfix41_En27
  SIGNAL sub_cast_2                       : signed(39 DOWNTO 0); -- sfix40_En27
  SIGNAL sub_cast_3                       : signed(39 DOWNTO 0); -- sfix40_En27
  SIGNAL sub_temp_1                       : signed(40 DOWNTO 0); -- sfix41_En27
  SIGNAL b1multypeconvert1                : signed(39 DOWNTO 0); -- sfix40_En36
  SIGNAL add_cast                         : signed(39 DOWNTO 0); -- sfix40_En36
  SIGNAL add_cast_1                       : signed(39 DOWNTO 0); -- sfix40_En36
  SIGNAL add_temp                         : signed(40 DOWNTO 0); -- sfix41_En36
  SIGNAL add_cast_2                       : signed(39 DOWNTO 0); -- sfix40_En36
  SIGNAL add_cast_3                       : signed(39 DOWNTO 0); -- sfix40_En36
  SIGNAL add_temp_1                       : signed(40 DOWNTO 0); -- sfix41_En36
  SIGNAL section_result1                  : signed(23 DOWNTO 0); -- sfix24_En23
  SIGNAL scale2                           : signed(47 DOWNTO 0); -- sfix48_En37
  SIGNAL scaletypeconvert2                : signed(23 DOWNTO 0); -- sfix24_En23
  -- Section 2 Signals 
  SIGNAL a1sum2                           : signed(39 DOWNTO 0); -- sfix40_En27
  SIGNAL a2sum2                           : signed(39 DOWNTO 0); -- sfix40_En27
  SIGNAL b1sum2                           : signed(39 DOWNTO 0); -- sfix40_En36
  SIGNAL b2sum2                           : signed(39 DOWNTO 0); -- sfix40_En36
  SIGNAL typeconvert2                     : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section2                   : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL inputconv2                       : signed(39 DOWNTO 0); -- sfix40_En27
  SIGNAL a2mul2                           : signed(39 DOWNTO 0); -- sfix40_En29
  SIGNAL a3mul2                           : signed(39 DOWNTO 0); -- sfix40_En29
  SIGNAL b1mul2                           : signed(39 DOWNTO 0); -- sfix40_En38
  SIGNAL b2mul2                           : signed(39 DOWNTO 0); -- sfix40_En38
  SIGNAL b3mul2                           : signed(39 DOWNTO 0); -- sfix40_En38
  SIGNAL sub_cast_4                       : signed(39 DOWNTO 0); -- sfix40_En27
  SIGNAL sub_cast_5                       : signed(39 DOWNTO 0); -- sfix40_En27
  SIGNAL sub_temp_2                       : signed(40 DOWNTO 0); -- sfix41_En27
  SIGNAL sub_cast_6                       : signed(39 DOWNTO 0); -- sfix40_En27
  SIGNAL sub_cast_7                       : signed(39 DOWNTO 0); -- sfix40_En27
  SIGNAL sub_temp_3                       : signed(40 DOWNTO 0); -- sfix41_En27
  SIGNAL b1multypeconvert2                : signed(39 DOWNTO 0); -- sfix40_En36
  SIGNAL add_cast_4                       : signed(39 DOWNTO 0); -- sfix40_En36
  SIGNAL add_cast_5                       : signed(39 DOWNTO 0); -- sfix40_En36
  SIGNAL add_temp_2                       : signed(40 DOWNTO 0); -- sfix41_En36
  SIGNAL add_cast_6                       : signed(39 DOWNTO 0); -- sfix40_En36
  SIGNAL add_cast_7                       : signed(39 DOWNTO 0); -- sfix40_En36
  SIGNAL add_temp_3                       : signed(40 DOWNTO 0); -- sfix41_En36
  SIGNAL section_result2                  : signed(23 DOWNTO 0); -- sfix24_En23
  SIGNAL scale3                           : signed(47 DOWNTO 0); -- sfix48_En37
  SIGNAL scaletypeconvert3                : signed(23 DOWNTO 0); -- sfix24_En23
  -- Section 3 Signals 
  SIGNAL a1sum3                           : signed(39 DOWNTO 0); -- sfix40_En27
  SIGNAL a2sum3                           : signed(39 DOWNTO 0); -- sfix40_En27
  SIGNAL b1sum3                           : signed(39 DOWNTO 0); -- sfix40_En36
  SIGNAL b2sum3                           : signed(39 DOWNTO 0); -- sfix40_En36
  SIGNAL typeconvert3                     : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section3                   : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL inputconv3                       : signed(39 DOWNTO 0); -- sfix40_En27
  SIGNAL a2mul3                           : signed(39 DOWNTO 0); -- sfix40_En29
  SIGNAL a3mul3                           : signed(39 DOWNTO 0); -- sfix40_En29
  SIGNAL b1mul3                           : signed(39 DOWNTO 0); -- sfix40_En38
  SIGNAL b2mul3                           : signed(39 DOWNTO 0); -- sfix40_En38
  SIGNAL b3mul3                           : signed(39 DOWNTO 0); -- sfix40_En38
  SIGNAL sub_cast_8                       : signed(39 DOWNTO 0); -- sfix40_En27
  SIGNAL sub_cast_9                       : signed(39 DOWNTO 0); -- sfix40_En27
  SIGNAL sub_temp_4                       : signed(40 DOWNTO 0); -- sfix41_En27
  SIGNAL sub_cast_10                      : signed(39 DOWNTO 0); -- sfix40_En27
  SIGNAL sub_cast_11                      : signed(39 DOWNTO 0); -- sfix40_En27
  SIGNAL sub_temp_5                       : signed(40 DOWNTO 0); -- sfix41_En27
  SIGNAL b1multypeconvert3                : signed(39 DOWNTO 0); -- sfix40_En36
  SIGNAL add_cast_8                       : signed(39 DOWNTO 0); -- sfix40_En36
  SIGNAL add_cast_9                       : signed(39 DOWNTO 0); -- sfix40_En36
  SIGNAL add_temp_4                       : signed(40 DOWNTO 0); -- sfix41_En36
  SIGNAL add_cast_10                      : signed(39 DOWNTO 0); -- sfix40_En36
  SIGNAL add_cast_11                      : signed(39 DOWNTO 0); -- sfix40_En36
  SIGNAL add_temp_5                       : signed(40 DOWNTO 0); -- sfix41_En36
  SIGNAL section_result3                  : signed(23 DOWNTO 0); -- sfix24_En23
  SIGNAL scale4                           : signed(47 DOWNTO 0); -- sfix48_En37
  SIGNAL scaletypeconvert4                : signed(23 DOWNTO 0); -- sfix24_En23
  -- Section 4 Signals 
  SIGNAL a1sum4                           : signed(39 DOWNTO 0); -- sfix40_En27
  SIGNAL a2sum4                           : signed(39 DOWNTO 0); -- sfix40_En27
  SIGNAL b1sum4                           : signed(39 DOWNTO 0); -- sfix40_En36
  SIGNAL b2sum4                           : signed(39 DOWNTO 0); -- sfix40_En36
  SIGNAL typeconvert4                     : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section4                   : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL inputconv4                       : signed(39 DOWNTO 0); -- sfix40_En27
  SIGNAL a2mul4                           : signed(39 DOWNTO 0); -- sfix40_En29
  SIGNAL a3mul4                           : signed(39 DOWNTO 0); -- sfix40_En29
  SIGNAL b1mul4                           : signed(39 DOWNTO 0); -- sfix40_En38
  SIGNAL b2mul4                           : signed(39 DOWNTO 0); -- sfix40_En38
  SIGNAL b3mul4                           : signed(39 DOWNTO 0); -- sfix40_En38
  SIGNAL sub_cast_12                      : signed(39 DOWNTO 0); -- sfix40_En27
  SIGNAL sub_cast_13                      : signed(39 DOWNTO 0); -- sfix40_En27
  SIGNAL sub_temp_6                       : signed(40 DOWNTO 0); -- sfix41_En27
  SIGNAL sub_cast_14                      : signed(39 DOWNTO 0); -- sfix40_En27
  SIGNAL sub_cast_15                      : signed(39 DOWNTO 0); -- sfix40_En27
  SIGNAL sub_temp_7                       : signed(40 DOWNTO 0); -- sfix41_En27
  SIGNAL b1multypeconvert4                : signed(39 DOWNTO 0); -- sfix40_En36
  SIGNAL add_cast_12                      : signed(39 DOWNTO 0); -- sfix40_En36
  SIGNAL add_cast_13                      : signed(39 DOWNTO 0); -- sfix40_En36
  SIGNAL add_temp_6                       : signed(40 DOWNTO 0); -- sfix41_En36
  SIGNAL add_cast_14                      : signed(39 DOWNTO 0); -- sfix40_En36
  SIGNAL add_cast_15                      : signed(39 DOWNTO 0); -- sfix40_En36
  SIGNAL add_temp_7                       : signed(40 DOWNTO 0); -- sfix41_En36
  SIGNAL output_typeconvert               : signed(48 DOWNTO 0); -- sfix49_En47
  SIGNAL output_register                  : signed(48 DOWNTO 0); -- sfix49_En47


BEGIN

  -- Block Statements
  input_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      input_register <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        input_register <= filter_in;
      END IF;
    END IF; 
  END PROCESS input_reg_process;

  scale1 <= input_register * scaleconst1;

  scaletypeconvert1 <= resize(shift_right(scale1(37 DOWNTO 0) + ( "0" & (scale1(14) & NOT scale1(14) & NOT scale1(14) & NOT scale1(14) & NOT scale1(14) & NOT scale1(14) & NOT scale1(14) & NOT scale1(14) & NOT scale1(14) & NOT scale1(14) & NOT scale1(14) & NOT scale1(14) & NOT scale1(14) & NOT scale1(14))), 14), 24);

  --   ------------------ Section 1 ------------------

  typeconvert1 <= resize(shift_right(a1sum1(27 DOWNTO 0) + ( "0" & (a1sum1(12) & NOT a1sum1(12) & NOT a1sum1(12) & NOT a1sum1(12) & NOT a1sum1(12) & NOT a1sum1(12) & NOT a1sum1(12) & NOT a1sum1(12) & NOT a1sum1(12) & NOT a1sum1(12) & NOT a1sum1(12) & NOT a1sum1(12))), 12), 16);

  delay_process_section1 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section1 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_section1(1) <= delay_section1(0);
        delay_section1(0) <= typeconvert1;
      END IF;
    END IF;
  END PROCESS delay_process_section1;

  inputconv1 <= resize(scaletypeconvert1(23 DOWNTO 0) & '0' & '0' & '0' & '0', 40);

  a2mul1 <= delay_section1(0) * coeff_a2_section1;

  a3mul1 <= delay_section1(1) * coeff_a3_section1;

  b1mul1 <= typeconvert1 * coeff_b1_section1;

  b2mul1 <= delay_section1(0) * coeff_b2_section1;

  b3mul1 <= delay_section1(1) * coeff_b3_section1;

  sub_cast <= inputconv1;
  sub_cast_1 <= resize(shift_right(a2mul1(39) & a2mul1(39 DOWNTO 0) + ( "0" & (a2mul1(2) & NOT a2mul1(2))), 2), 40);
  sub_temp <= resize(sub_cast, 41) - resize(sub_cast_1, 41);
  a2sum1 <= sub_temp(39 DOWNTO 0);

  sub_cast_2 <= a2sum1;
  sub_cast_3 <= resize(shift_right(a3mul1(39) & a3mul1(39 DOWNTO 0) + ( "0" & (a3mul1(2) & NOT a3mul1(2))), 2), 40);
  sub_temp_1 <= resize(sub_cast_2, 41) - resize(sub_cast_3, 41);
  a1sum1 <= sub_temp_1(39 DOWNTO 0);

  b1multypeconvert1 <= resize(shift_right(b1mul1(39) & b1mul1(39 DOWNTO 0) + ( "0" & (b1mul1(2) & NOT b1mul1(2))), 2), 40);

  add_cast <= b1multypeconvert1;
  add_cast_1 <= resize(shift_right(b2mul1(39) & b2mul1(39 DOWNTO 0) + ( "0" & (b2mul1(2) & NOT b2mul1(2))), 2), 40);
  add_temp <= resize(add_cast, 41) + resize(add_cast_1, 41);
  b2sum1 <= add_temp(39 DOWNTO 0);

  add_cast_2 <= b2sum1;
  add_cast_3 <= resize(shift_right(b3mul1(39) & b3mul1(39 DOWNTO 0) + ( "0" & (b3mul1(2) & NOT b3mul1(2))), 2), 40);
  add_temp_1 <= resize(add_cast_2, 41) + resize(add_cast_3, 41);
  b1sum1 <= add_temp_1(39 DOWNTO 0);

  section_result1 <= resize(shift_right(b1sum1(36 DOWNTO 0) + ( "0" & (b1sum1(13) & NOT b1sum1(13) & NOT b1sum1(13) & NOT b1sum1(13) & NOT b1sum1(13) & NOT b1sum1(13) & NOT b1sum1(13) & NOT b1sum1(13) & NOT b1sum1(13) & NOT b1sum1(13) & NOT b1sum1(13) & NOT b1sum1(13) & NOT b1sum1(13))), 13), 24);

  scale2 <= section_result1 * scaleconst2;

  scaletypeconvert2 <= resize(shift_right(scale2(37 DOWNTO 0) + ( "0" & (scale2(14) & NOT scale2(14) & NOT scale2(14) & NOT scale2(14) & NOT scale2(14) & NOT scale2(14) & NOT scale2(14) & NOT scale2(14) & NOT scale2(14) & NOT scale2(14) & NOT scale2(14) & NOT scale2(14) & NOT scale2(14) & NOT scale2(14))), 14), 24);

  --   ------------------ Section 2 ------------------

  typeconvert2 <= resize(shift_right(a1sum2(27 DOWNTO 0) + ( "0" & (a1sum2(12) & NOT a1sum2(12) & NOT a1sum2(12) & NOT a1sum2(12) & NOT a1sum2(12) & NOT a1sum2(12) & NOT a1sum2(12) & NOT a1sum2(12) & NOT a1sum2(12) & NOT a1sum2(12) & NOT a1sum2(12) & NOT a1sum2(12))), 12), 16);

  delay_process_section2 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section2 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_section2(1) <= delay_section2(0);
        delay_section2(0) <= typeconvert2;
      END IF;
    END IF;
  END PROCESS delay_process_section2;

  inputconv2 <= resize(scaletypeconvert2(23 DOWNTO 0) & '0' & '0' & '0' & '0', 40);

  a2mul2 <= delay_section2(0) * coeff_a2_section2;

  a3mul2 <= delay_section2(1) * coeff_a3_section2;

  b1mul2 <= typeconvert2 * coeff_b1_section2;

  b2mul2 <= delay_section2(0) * coeff_b2_section2;

  b3mul2 <= delay_section2(1) * coeff_b3_section2;

  sub_cast_4 <= inputconv2;
  sub_cast_5 <= resize(shift_right(a2mul2(39) & a2mul2(39 DOWNTO 0) + ( "0" & (a2mul2(2) & NOT a2mul2(2))), 2), 40);
  sub_temp_2 <= resize(sub_cast_4, 41) - resize(sub_cast_5, 41);
  a2sum2 <= sub_temp_2(39 DOWNTO 0);

  sub_cast_6 <= a2sum2;
  sub_cast_7 <= resize(shift_right(a3mul2(39) & a3mul2(39 DOWNTO 0) + ( "0" & (a3mul2(2) & NOT a3mul2(2))), 2), 40);
  sub_temp_3 <= resize(sub_cast_6, 41) - resize(sub_cast_7, 41);
  a1sum2 <= sub_temp_3(39 DOWNTO 0);

  b1multypeconvert2 <= resize(shift_right(b1mul2(39) & b1mul2(39 DOWNTO 0) + ( "0" & (b1mul2(2) & NOT b1mul2(2))), 2), 40);

  add_cast_4 <= b1multypeconvert2;
  add_cast_5 <= resize(shift_right(b2mul2(39) & b2mul2(39 DOWNTO 0) + ( "0" & (b2mul2(2) & NOT b2mul2(2))), 2), 40);
  add_temp_2 <= resize(add_cast_4, 41) + resize(add_cast_5, 41);
  b2sum2 <= add_temp_2(39 DOWNTO 0);

  add_cast_6 <= b2sum2;
  add_cast_7 <= resize(shift_right(b3mul2(39) & b3mul2(39 DOWNTO 0) + ( "0" & (b3mul2(2) & NOT b3mul2(2))), 2), 40);
  add_temp_3 <= resize(add_cast_6, 41) + resize(add_cast_7, 41);
  b1sum2 <= add_temp_3(39 DOWNTO 0);

  section_result2 <= resize(shift_right(b1sum2(36 DOWNTO 0) + ( "0" & (b1sum2(13) & NOT b1sum2(13) & NOT b1sum2(13) & NOT b1sum2(13) & NOT b1sum2(13) & NOT b1sum2(13) & NOT b1sum2(13) & NOT b1sum2(13) & NOT b1sum2(13) & NOT b1sum2(13) & NOT b1sum2(13) & NOT b1sum2(13) & NOT b1sum2(13))), 13), 24);

  scale3 <= section_result2 * scaleconst3;

  scaletypeconvert3 <= resize(shift_right(scale3(37 DOWNTO 0) + ( "0" & (scale3(14) & NOT scale3(14) & NOT scale3(14) & NOT scale3(14) & NOT scale3(14) & NOT scale3(14) & NOT scale3(14) & NOT scale3(14) & NOT scale3(14) & NOT scale3(14) & NOT scale3(14) & NOT scale3(14) & NOT scale3(14) & NOT scale3(14))), 14), 24);

  --   ------------------ Section 3 ------------------

  typeconvert3 <= resize(shift_right(a1sum3(27 DOWNTO 0) + ( "0" & (a1sum3(12) & NOT a1sum3(12) & NOT a1sum3(12) & NOT a1sum3(12) & NOT a1sum3(12) & NOT a1sum3(12) & NOT a1sum3(12) & NOT a1sum3(12) & NOT a1sum3(12) & NOT a1sum3(12) & NOT a1sum3(12) & NOT a1sum3(12))), 12), 16);

  delay_process_section3 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section3 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_section3(1) <= delay_section3(0);
        delay_section3(0) <= typeconvert3;
      END IF;
    END IF;
  END PROCESS delay_process_section3;

  inputconv3 <= resize(scaletypeconvert3(23 DOWNTO 0) & '0' & '0' & '0' & '0', 40);

  a2mul3 <= delay_section3(0) * coeff_a2_section3;

  a3mul3 <= delay_section3(1) * coeff_a3_section3;

  b1mul3 <= typeconvert3 * coeff_b1_section3;

  b2mul3 <= delay_section3(0) * coeff_b2_section3;

  b3mul3 <= delay_section3(1) * coeff_b3_section3;

  sub_cast_8 <= inputconv3;
  sub_cast_9 <= resize(shift_right(a2mul3(39) & a2mul3(39 DOWNTO 0) + ( "0" & (a2mul3(2) & NOT a2mul3(2))), 2), 40);
  sub_temp_4 <= resize(sub_cast_8, 41) - resize(sub_cast_9, 41);
  a2sum3 <= sub_temp_4(39 DOWNTO 0);

  sub_cast_10 <= a2sum3;
  sub_cast_11 <= resize(shift_right(a3mul3(39) & a3mul3(39 DOWNTO 0) + ( "0" & (a3mul3(2) & NOT a3mul3(2))), 2), 40);
  sub_temp_5 <= resize(sub_cast_10, 41) - resize(sub_cast_11, 41);
  a1sum3 <= sub_temp_5(39 DOWNTO 0);

  b1multypeconvert3 <= resize(shift_right(b1mul3(39) & b1mul3(39 DOWNTO 0) + ( "0" & (b1mul3(2) & NOT b1mul3(2))), 2), 40);

  add_cast_8 <= b1multypeconvert3;
  add_cast_9 <= resize(shift_right(b2mul3(39) & b2mul3(39 DOWNTO 0) + ( "0" & (b2mul3(2) & NOT b2mul3(2))), 2), 40);
  add_temp_4 <= resize(add_cast_8, 41) + resize(add_cast_9, 41);
  b2sum3 <= add_temp_4(39 DOWNTO 0);

  add_cast_10 <= b2sum3;
  add_cast_11 <= resize(shift_right(b3mul3(39) & b3mul3(39 DOWNTO 0) + ( "0" & (b3mul3(2) & NOT b3mul3(2))), 2), 40);
  add_temp_5 <= resize(add_cast_10, 41) + resize(add_cast_11, 41);
  b1sum3 <= add_temp_5(39 DOWNTO 0);

  section_result3 <= resize(shift_right(b1sum3(36 DOWNTO 0) + ( "0" & (b1sum3(13) & NOT b1sum3(13) & NOT b1sum3(13) & NOT b1sum3(13) & NOT b1sum3(13) & NOT b1sum3(13) & NOT b1sum3(13) & NOT b1sum3(13) & NOT b1sum3(13) & NOT b1sum3(13) & NOT b1sum3(13) & NOT b1sum3(13) & NOT b1sum3(13))), 13), 24);

  scale4 <= section_result3 * scaleconst4;

  scaletypeconvert4 <= resize(shift_right(scale4(37 DOWNTO 0) + ( "0" & (scale4(14) & NOT scale4(14) & NOT scale4(14) & NOT scale4(14) & NOT scale4(14) & NOT scale4(14) & NOT scale4(14) & NOT scale4(14) & NOT scale4(14) & NOT scale4(14) & NOT scale4(14) & NOT scale4(14) & NOT scale4(14) & NOT scale4(14))), 14), 24);

  --   ------------------ Section 4 ------------------

  typeconvert4 <= resize(shift_right(a1sum4(27 DOWNTO 0) + ( "0" & (a1sum4(12) & NOT a1sum4(12) & NOT a1sum4(12) & NOT a1sum4(12) & NOT a1sum4(12) & NOT a1sum4(12) & NOT a1sum4(12) & NOT a1sum4(12) & NOT a1sum4(12) & NOT a1sum4(12) & NOT a1sum4(12) & NOT a1sum4(12))), 12), 16);

  delay_process_section4 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section4 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_section4(1) <= delay_section4(0);
        delay_section4(0) <= typeconvert4;
      END IF;
    END IF;
  END PROCESS delay_process_section4;

  inputconv4 <= resize(scaletypeconvert4(23 DOWNTO 0) & '0' & '0' & '0' & '0', 40);

  a2mul4 <= delay_section4(0) * coeff_a2_section4;

  a3mul4 <= delay_section4(1) * coeff_a3_section4;

  b1mul4 <= typeconvert4 * coeff_b1_section4;

  b2mul4 <= delay_section4(0) * coeff_b2_section4;

  b3mul4 <= delay_section4(1) * coeff_b3_section4;

  sub_cast_12 <= inputconv4;
  sub_cast_13 <= resize(shift_right(a2mul4(39) & a2mul4(39 DOWNTO 0) + ( "0" & (a2mul4(2) & NOT a2mul4(2))), 2), 40);
  sub_temp_6 <= resize(sub_cast_12, 41) - resize(sub_cast_13, 41);
  a2sum4 <= sub_temp_6(39 DOWNTO 0);

  sub_cast_14 <= a2sum4;
  sub_cast_15 <= resize(shift_right(a3mul4(39) & a3mul4(39 DOWNTO 0) + ( "0" & (a3mul4(2) & NOT a3mul4(2))), 2), 40);
  sub_temp_7 <= resize(sub_cast_14, 41) - resize(sub_cast_15, 41);
  a1sum4 <= sub_temp_7(39 DOWNTO 0);

  b1multypeconvert4 <= resize(shift_right(b1mul4(39) & b1mul4(39 DOWNTO 0) + ( "0" & (b1mul4(2) & NOT b1mul4(2))), 2), 40);

  add_cast_12 <= b1multypeconvert4;
  add_cast_13 <= resize(shift_right(b2mul4(39) & b2mul4(39 DOWNTO 0) + ( "0" & (b2mul4(2) & NOT b2mul4(2))), 2), 40);
  add_temp_6 <= resize(add_cast_12, 41) + resize(add_cast_13, 41);
  b2sum4 <= add_temp_6(39 DOWNTO 0);

  add_cast_14 <= b2sum4;
  add_cast_15 <= resize(shift_right(b3mul4(39) & b3mul4(39 DOWNTO 0) + ( "0" & (b3mul4(2) & NOT b3mul4(2))), 2), 40);
  add_temp_7 <= resize(add_cast_14, 41) + resize(add_cast_15, 41);
  b1sum4 <= add_temp_7(39 DOWNTO 0);

  output_typeconvert <= resize(b1sum4(37 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 49);

  Output_Register_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      output_register <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        output_register <= output_typeconvert;
      END IF;
    END IF; 
  END PROCESS Output_Register_process;

  -- Assignment Statements
  filter_out <= output_register;
END rtl;
