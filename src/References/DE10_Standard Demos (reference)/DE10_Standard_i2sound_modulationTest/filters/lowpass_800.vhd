-- -------------------------------------------------------------
--
-- Module: lowpass_800
-- Generated by MATLAB(R) 9.11 and Filter Design HDL Coder 3.1.10.
-- Generated on: 2022-04-29 18:12:20
-- -------------------------------------------------------------

-- -------------------------------------------------------------
-- HDL Code Generation Options:
--
-- TargetLanguage: VHDL
-- InputType: signed/unsigned
-- FoldingFactor: 252
-- OptimizeForHDL: on
-- Name: lowpass_800
-- TestBenchStimulus: step ramp chirp 

-- Filter Specifications:
--
-- Sample Rate     : N/A (normalized frequency)
-- Response        : Lowpass
-- Specification   : Fp,Fst,Ap,Ast
-- Stopband Atten. : 80 dB
-- Stopband Edge   : 0.0375
-- Passband Edge   : 0.033333
-- Passband Ripple : 1 dB
-- -------------------------------------------------------------

-- -------------------------------------------------------------
-- HDL Implementation    : Fully Serial
-- Folding Factor        : 252
-- -------------------------------------------------------------
-- Filter Settings:
--
-- Discrete-Time IIR Filter (real)
-- -------------------------------
-- Filter Structure    : Direct-Form II, Second-Order Sections
-- Number of Sections  : 42
-- Stable              : Yes
-- Linear Phase        : No
-- Arithmetic          : fixed
-- Numerator           : s24,21 -> [-4 4)
-- Denominator         : s24,22 -> [-2 2)
-- Scale Values        : s24,31 -> [-3.906250e-03 3.906250e-03)
-- Input               : s24,23 -> [-1 1)
-- Section Input       : s24,25 -> [-2.500000e-01 2.500000e-01)
-- Section Output      : s24,18 -> [-32 32)
-- Output              : s24,18 -> [-32 32)
-- State               : s16,15 -> [-1 1)
-- Numerator Prod      : s40,36 -> [-8 8)
-- Denominator Prod    : s40,37 -> [-4 4)
-- Numerator Accum     : s40,34 -> [-32 32)
-- Denominator Accum   : s40,35 -> [-16 16)
-- Round Mode          : convergent
-- Overflow Mode       : wrap
-- Cast Before Sum     : true
-- -------------------------------------------------------------



LIBRARY IEEE;
USE IEEE.std_logic_1164.all;
USE IEEE.numeric_std.ALL;

ENTITY lowpass_800 IS
   PORT( clk                             :   IN    std_logic; 
         clk_enable                      :   IN    std_logic; 
         reset                           :   IN    std_logic; 
         filter_in                       :   IN    signed(23 DOWNTO 0); -- sfix24_En23
         filter_out                      :   OUT   signed(23 DOWNTO 0)  -- sfix24_En18
         );

END lowpass_800;


----------------------------------------------------------------
--Module Architecture: lowpass_800
----------------------------------------------------------------
ARCHITECTURE rtl OF lowpass_800 IS
  -- Local Functions
  -- Type Definitions
  TYPE delay_pipeline_type IS ARRAY (NATURAL range <>) OF signed(15 DOWNTO 0); -- sfix16_En15
  -- Constants
  CONSTANT scaleconst1                    : signed(42 DOWNTO 0) := to_signed(5969433, 43); -- sfix43_En31
  CONSTANT coeff_b1_section1              : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section1              : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section1              : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section1              : signed(42 DOWNTO 0) := (42 DOWNTO 32 => '1', 24 DOWNTO 21 => '1', 19 DOWNTO 18 => '1', 16 => '1', 14 => '1', 9 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a3_section1              : signed(42 DOWNTO 0) := to_signed(2139035136, 43); -- sfix43_En31
  CONSTANT scaleconst2                    : signed(42 DOWNTO 0) := to_signed(5946057, 43); -- sfix43_En31
  CONSTANT coeff_b1_section2              : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section2              : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section2              : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section2              : signed(42 DOWNTO 0) := (31 DOWNTO 26 => '0', 24 => '0', 20 => '0', 18 => '0', 11 => '0', 8 DOWNTO 0 => '0',  OTHERS => '1'); -- sfix43_En31
  CONSTANT coeff_a3_section2              : signed(42 DOWNTO 0) := to_signed(2122249728, 43); -- sfix43_En31
  CONSTANT scaleconst3                    : signed(42 DOWNTO 0) := to_signed(5922912, 43); -- sfix43_En31
  CONSTANT coeff_b1_section3              : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section3              : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section3              : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section3              : signed(42 DOWNTO 0) := (42 DOWNTO 32 => '1', 25 DOWNTO 21 => '1', 19 => '1', 13 => '1', 10 DOWNTO 9 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a3_section3              : signed(42 DOWNTO 0) := to_signed(2105629696, 43); -- sfix43_En31
  CONSTANT scaleconst4                    : signed(42 DOWNTO 0) := to_signed(5900026, 43); -- sfix43_En31
  CONSTANT coeff_b1_section4              : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section4              : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section4              : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section4              : signed(42 DOWNTO 0) := (42 DOWNTO 32 => '1', 26 => '1', 23 DOWNTO 21 => '1', 16 DOWNTO 15 => '1', 9 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a3_section4              : signed(42 DOWNTO 0) := to_signed(2089196032, 43); -- sfix43_En31
  CONSTANT scaleconst5                    : signed(42 DOWNTO 0) := to_signed(5877428, 43); -- sfix43_En31
  CONSTANT coeff_b1_section5              : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section5              : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section5              : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section5              : signed(42 DOWNTO 0) := (31 DOWNTO 27 => '0', 25 => '0', 21 => '0', 19 => '0', 14 => '0', 9 DOWNTO 0 => '0',  OTHERS => '1'); -- sfix43_En31
  CONSTANT coeff_a3_section5              : signed(42 DOWNTO 0) := to_signed(2072968704, 43); -- sfix43_En31
  CONSTANT scaleconst6                    : signed(42 DOWNTO 0) := to_signed(5855144, 43); -- sfix43_En31
  CONSTANT coeff_b1_section6              : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section6              : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section6              : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section6              : signed(42 DOWNTO 0) := (42 DOWNTO 32 => '1', 26 DOWNTO 25 => '1', 23 DOWNTO 22 => '1', 19 => '1', 17 => '1', 15 => '1', 11 DOWNTO 10 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a3_section6              : signed(42 DOWNTO 0) := to_signed(2056966656, 43); -- sfix43_En31
  CONSTANT scaleconst7                    : signed(42 DOWNTO 0) := to_signed(5833199, 43); -- sfix43_En31
  CONSTANT coeff_b1_section7              : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section7              : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section7              : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section7              : signed(42 DOWNTO 0) := (31 DOWNTO 27 => '0', 22 => '0', 18 DOWNTO 17 => '0', 14 => '0', 12 => '0', 10 DOWNTO 0 => '0',  OTHERS => '1'); -- sfix43_En31
  CONSTANT coeff_a3_section7              : signed(42 DOWNTO 0) := to_signed(2041208832, 43); -- sfix43_En31
  CONSTANT scaleconst8                    : signed(42 DOWNTO 0) := to_signed(5811619, 43); -- sfix43_En31
  CONSTANT coeff_b1_section8              : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section8              : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section8              : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section8              : signed(42 DOWNTO 0) := (42 DOWNTO 32 => '1', 27 => '1', 23 => '1', 21 => '1', 18 => '1', 15 DOWNTO 14 => '1', 11 => '1', 9 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a3_section8              : signed(42 DOWNTO 0) := to_signed(2025712640, 43); -- sfix43_En31
  CONSTANT scaleconst9                    : signed(42 DOWNTO 0) := to_signed(5790426, 43); -- sfix43_En31
  CONSTANT coeff_b1_section9              : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section9              : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section9              : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section9              : signed(42 DOWNTO 0) := (42 DOWNTO 32 => '1', 27 => '1', 24 DOWNTO 23 => '1', 19 => '1', 17 DOWNTO 15 => '1', 13 DOWNTO 12 => '1', 10 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a3_section9              : signed(42 DOWNTO 0) := to_signed(2010494464, 43); -- sfix43_En31
  CONSTANT scaleconst10                   : signed(42 DOWNTO 0) := to_signed(5769644, 43); -- sfix43_En31
  CONSTANT coeff_b1_section10             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section10             : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section10             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section10             : signed(42 DOWNTO 0) := (42 DOWNTO 32 => '1', 27 => '1', 25 => '1', 22 DOWNTO 21 => '1', 19 DOWNTO 17 => '1', 13 => '1', 10 DOWNTO 9 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a3_section10             : signed(42 DOWNTO 0) := to_signed(1995571712, 43); -- sfix43_En31
  CONSTANT scaleconst11                   : signed(42 DOWNTO 0) := to_signed(5749294, 43); -- sfix43_En31
  CONSTANT coeff_b1_section11             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section11             : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section11             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section11             : signed(42 DOWNTO 0) := (42 DOWNTO 32 => '1', 27 => '1', 25 DOWNTO 24 => '1', 22 => '1', 19 => '1', 17 DOWNTO 13 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a3_section11             : signed(42 DOWNTO 0) := to_signed(1980958720, 43); -- sfix43_En31
  CONSTANT scaleconst12                   : signed(42 DOWNTO 0) := to_signed(5729397, 43); -- sfix43_En31
  CONSTANT coeff_b1_section12             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section12             : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section12             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section12             : signed(42 DOWNTO 0) := (42 DOWNTO 32 => '1', 27 DOWNTO 26 => '1', 21 => '1', 18 => '1', 15 => '1', 13 => '1', 11 DOWNTO 9 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a3_section12             : signed(42 DOWNTO 0) := to_signed(1966670848, 43); -- sfix43_En31
  CONSTANT scaleconst13                   : signed(42 DOWNTO 0) := to_signed(5709972, 43); -- sfix43_En31
  CONSTANT coeff_b1_section13             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section13             : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section13             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section13             : signed(42 DOWNTO 0) := (31 DOWNTO 28 => '0', 25 DOWNTO 24 => '0', 18 DOWNTO 15 => '0', 13 => '0', 11 => '0', 8 DOWNTO 0 => '0',  OTHERS => '1'); -- sfix43_En31
  CONSTANT coeff_a3_section13             : signed(42 DOWNTO 0) := to_signed(1952721920, 43); -- sfix43_En31
  CONSTANT scaleconst14                   : signed(42 DOWNTO 0) := to_signed(5691038, 43); -- sfix43_En31
  CONSTANT coeff_b1_section14             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section14             : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section14             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section14             : signed(42 DOWNTO 0) := (42 DOWNTO 32 => '1', 27 DOWNTO 26 => '1', 24 DOWNTO 22 => '1', 18 DOWNTO 17 => '1', 15 => '1', 13 => '1', 10 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a3_section14             : signed(42 DOWNTO 0) := to_signed(1939125760, 43); -- sfix43_En31
  CONSTANT scaleconst15                   : signed(42 DOWNTO 0) := to_signed(5672612, 43); -- sfix43_En31
  CONSTANT coeff_b1_section15             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section15             : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section15             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section15             : signed(42 DOWNTO 0) := (31 DOWNTO 28 => '0', 24 => '0', 22 DOWNTO 20 => '0', 15 => '0', 12 => '0', 10 DOWNTO 0 => '0',  OTHERS => '1'); -- sfix43_En31
  CONSTANT coeff_a3_section15             : signed(42 DOWNTO 0) := to_signed(1925895168, 43); -- sfix43_En31
  CONSTANT scaleconst16                   : signed(42 DOWNTO 0) := to_signed(5654713, 43); -- sfix43_En31
  CONSTANT coeff_b1_section16             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section16             : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section16             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section16             : signed(42 DOWNTO 0) := (42 DOWNTO 32 => '1', 27 DOWNTO 24 => '1', 22 => '1', 20 => '1', 17 => '1', 14 DOWNTO 12 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a3_section16             : signed(42 DOWNTO 0) := to_signed(1913041408, 43); -- sfix43_En31
  CONSTANT scaleconst17                   : signed(42 DOWNTO 0) := to_signed(5637355, 43); -- sfix43_En31
  CONSTANT coeff_b1_section17             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section17             : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section17             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section17             : signed(42 DOWNTO 0) := (42 DOWNTO 32 => '1', 28 => '1', 19 DOWNTO 15 => '1', 12 => '1', 9 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a3_section17             : signed(42 DOWNTO 0) := to_signed(1900577280, 43); -- sfix43_En31
  CONSTANT scaleconst18                   : signed(42 DOWNTO 0) := to_signed(5620553, 43); -- sfix43_En31
  CONSTANT coeff_b1_section18             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section18             : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section18             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section18             : signed(42 DOWNTO 0) := (42 DOWNTO 32 => '1', 28 => '1', 23 DOWNTO 22 => '1', 18 DOWNTO 17 => '1', 15 => '1', 13 => '1', 10 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a3_section18             : signed(42 DOWNTO 0) := to_signed(1888512512, 43); -- sfix43_En31
  CONSTANT scaleconst19                   : signed(42 DOWNTO 0) := to_signed(5604323, 43); -- sfix43_En31
  CONSTANT coeff_b1_section19             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section19             : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section19             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section19             : signed(42 DOWNTO 0) := (31 DOWNTO 29 => '0', 27 DOWNTO 25 => '0', 23 => '0', 19 => '0', 15 => '0', 9 DOWNTO 0 => '0',  OTHERS => '1'); -- sfix43_En31
  CONSTANT coeff_a3_section19             : signed(42 DOWNTO 0) := to_signed(1876857856, 43); -- sfix43_En31
  CONSTANT scaleconst20                   : signed(42 DOWNTO 0) := to_signed(5588677, 43); -- sfix43_En31
  CONSTANT coeff_b1_section20             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section20             : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section20             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section20             : signed(42 DOWNTO 0) := (42 DOWNTO 32 => '1', 28 => '1', 25 => '1', 21 => '1', 16 DOWNTO 12 => '1', 10 DOWNTO 9 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a3_section20             : signed(42 DOWNTO 0) := to_signed(1865623040, 43); -- sfix43_En31
  CONSTANT scaleconst21                   : signed(42 DOWNTO 0) := to_signed(5573629, 43); -- sfix43_En31
  CONSTANT coeff_b1_section21             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section21             : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section21             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section21             : signed(42 DOWNTO 0) := (31 DOWNTO 29 => '0', 27 DOWNTO 26 => '0', 24 => '0', 21 DOWNTO 19 => '0', 17 => '0', 12 => '0', 9 DOWNTO 0 => '0',  OTHERS => '1'); -- sfix43_En31
  CONSTANT coeff_a3_section21             : signed(42 DOWNTO 0) := to_signed(1854817280, 43); -- sfix43_En31
  CONSTANT scaleconst22                   : signed(42 DOWNTO 0) := to_signed(5559190, 43); -- sfix43_En31
  CONSTANT coeff_b1_section22             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section22             : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section22             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section22             : signed(42 DOWNTO 0) := (42 DOWNTO 32 => '1', 28 => '1', 25 DOWNTO 24 => '1', 22 DOWNTO 21 => '1', 17 DOWNTO 16 => '1', 14 => '1', 9 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a3_section22             : signed(42 DOWNTO 0) := to_signed(1844448768, 43); -- sfix43_En31
  CONSTANT scaleconst23                   : signed(42 DOWNTO 0) := to_signed(5545371, 43); -- sfix43_En31
  CONSTANT coeff_b1_section23             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section23             : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section23             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section23             : signed(42 DOWNTO 0) := (31 DOWNTO 29 => '0', 27 DOWNTO 26 => '0', 18 DOWNTO 17 => '0', 13 => '0', 11 => '0', 9 DOWNTO 0 => '0',  OTHERS => '1'); -- sfix43_En31
  CONSTANT coeff_a3_section23             : signed(42 DOWNTO 0) := to_signed(1834525696, 43); -- sfix43_En31
  CONSTANT scaleconst24                   : signed(42 DOWNTO 0) := to_signed(5532183, 43); -- sfix43_En31
  CONSTANT coeff_b1_section24             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section24             : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section24             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section24             : signed(42 DOWNTO 0) := (42 DOWNTO 32 => '1', 28 => '1', 26 => '1', 23 => '1', 19 => '1', 16 DOWNTO 15 => '1', 10 DOWNTO 9 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a3_section24             : signed(42 DOWNTO 0) := to_signed(1825055744, 43); -- sfix43_En31
  CONSTANT scaleconst25                   : signed(42 DOWNTO 0) := to_signed(5519636, 43); -- sfix43_En31
  CONSTANT coeff_b1_section25             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section25             : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section25             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section25             : signed(42 DOWNTO 0) := (42 DOWNTO 32 => '1', 28 => '1', 26 => '1', 24 => '1', 20 => '1', 17 => '1', 13 DOWNTO 10 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a3_section25             : signed(42 DOWNTO 0) := to_signed(1816045568, 43); -- sfix43_En31
  CONSTANT scaleconst26                   : signed(42 DOWNTO 0) := to_signed(5507738, 43); -- sfix43_En31
  CONSTANT coeff_b1_section26             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section26             : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section26             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section26             : signed(42 DOWNTO 0) := (31 DOWNTO 29 => '0', 27 => '0', 25 => '0', 22 DOWNTO 21 => '0', 19 DOWNTO 18 => '0', 13 => '0', 8 DOWNTO 0 => '0',  OTHERS => '1'); -- sfix43_En31
  CONSTANT coeff_a3_section26             : signed(42 DOWNTO 0) := to_signed(1807502336, 43); -- sfix43_En31
  CONSTANT scaleconst27                   : signed(42 DOWNTO 0) := to_signed(5496499, 43); -- sfix43_En31
  CONSTANT coeff_b1_section27             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section27             : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section27             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section27             : signed(42 DOWNTO 0) := (42 DOWNTO 32 => '1', 28 => '1', 26 DOWNTO 25 => '1', 19 DOWNTO 17 => '1', 14 => '1', 12 => '1', 10 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a3_section27             : signed(42 DOWNTO 0) := to_signed(1799432192, 43); -- sfix43_En31
  CONSTANT scaleconst28                   : signed(42 DOWNTO 0) := to_signed(5485927, 43); -- sfix43_En31
  CONSTANT coeff_b1_section28             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section28             : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section28             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section28             : signed(42 DOWNTO 0) := (42 DOWNTO 32 => '1', 28 => '1', 26 DOWNTO 25 => '1', 23 => '1', 16 DOWNTO 15 => '1', 10 DOWNTO 9 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a3_section28             : signed(42 DOWNTO 0) := to_signed(1791840256, 43); -- sfix43_En31
  CONSTANT scaleconst29                   : signed(42 DOWNTO 0) := to_signed(5476028, 43); -- sfix43_En31
  CONSTANT coeff_b1_section29             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section29             : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section29             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section29             : signed(42 DOWNTO 0) := (31 DOWNTO 29 => '0', 27 => '0', 24 => '0', 20 => '0', 17 => '0', 15 => '0', 12 DOWNTO 10 => '0', 8 DOWNTO 0 => '0',  OTHERS => '1'); -- sfix43_En31
  CONSTANT coeff_a3_section29             : signed(42 DOWNTO 0) := to_signed(1784731648, 43); -- sfix43_En31
  CONSTANT scaleconst30                   : signed(42 DOWNTO 0) := to_signed(5466809, 43); -- sfix43_En31
  CONSTANT coeff_b1_section30             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section30             : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section30             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section30             : signed(42 DOWNTO 0) := (31 DOWNTO 29 => '0', 27 => '0', 23 => '0', 21 => '0', 19 DOWNTO 17 => '0', 13 => '0', 11 => '0', 8 DOWNTO 0 => '0',  OTHERS => '1'); -- sfix43_En31
  CONSTANT coeff_a3_section30             : signed(42 DOWNTO 0) := to_signed(1778112000, 43); -- sfix43_En31
  CONSTANT scaleconst31                   : signed(42 DOWNTO 0) := to_signed(5458276, 43); -- sfix43_En31
  CONSTANT coeff_b1_section31             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section31             : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section31             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section31             : signed(42 DOWNTO 0) := (31 DOWNTO 29 => '0', 27 => '0', 22 => '0', 20 => '0', 16 => '0', 13 DOWNTO 12 => '0', 8 DOWNTO 0 => '0',  OTHERS => '1'); -- sfix43_En31
  CONSTANT coeff_a3_section31             : signed(42 DOWNTO 0) := to_signed(1771984896, 43); -- sfix43_En31
  CONSTANT scaleconst32                   : signed(42 DOWNTO 0) := to_signed(5450436, 43); -- sfix43_En31
  CONSTANT coeff_b1_section32             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section32             : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section32             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section32             : signed(42 DOWNTO 0) := (42 DOWNTO 32 => '1', 28 DOWNTO 27 => '1', 18 => '1', 13 DOWNTO 10 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a3_section32             : signed(42 DOWNTO 0) := to_signed(1766354944, 43); -- sfix43_En31
  CONSTANT scaleconst33                   : signed(42 DOWNTO 0) := to_signed(5443292, 43); -- sfix43_En31
  CONSTANT coeff_b1_section33             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section33             : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section33             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section33             : signed(42 DOWNTO 0) := (42 DOWNTO 32 => '1', 28 DOWNTO 27 => '1', 22 => '1', 20 => '1', 17 => '1', 12 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a3_section33             : signed(42 DOWNTO 0) := to_signed(1761225216, 43); -- sfix43_En31
  CONSTANT scaleconst34                   : signed(42 DOWNTO 0) := to_signed(5436851, 43); -- sfix43_En31
  CONSTANT coeff_b1_section34             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section34             : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section34             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section34             : signed(42 DOWNTO 0) := (42 DOWNTO 32 => '1', 28 DOWNTO 27 => '1', 23 => '1', 20 DOWNTO 19 => '1', 14 => '1', 9 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a3_section34             : signed(42 DOWNTO 0) := to_signed(1756599808, 43); -- sfix43_En31
  CONSTANT scaleconst35                   : signed(42 DOWNTO 0) := to_signed(5431115, 43); -- sfix43_En31
  CONSTANT coeff_b1_section35             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section35             : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section35             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section35             : signed(42 DOWNTO 0) := (42 DOWNTO 32 => '1', 28 DOWNTO 27 => '1', 23 DOWNTO 22 => '1', 20 => '1', 18 DOWNTO 17 => '1', 15 DOWNTO 14 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a3_section35             : signed(42 DOWNTO 0) := to_signed(1752480768, 43); -- sfix43_En31
  CONSTANT scaleconst36                   : signed(42 DOWNTO 0) := to_signed(5426088, 43); -- sfix43_En31
  CONSTANT coeff_b1_section36             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section36             : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section36             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section36             : signed(42 DOWNTO 0) := (42 DOWNTO 32 => '1', 28 DOWNTO 27 => '1', 24 => '1', 19 DOWNTO 18 => '1', 16 DOWNTO 15 => '1', 10 DOWNTO 9 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a3_section36             : signed(42 DOWNTO 0) := to_signed(1748871168, 43); -- sfix43_En31
  CONSTANT scaleconst37                   : signed(42 DOWNTO 0) := to_signed(5421774, 43); -- sfix43_En31
  CONSTANT coeff_b1_section37             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section37             : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section37             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section37             : signed(42 DOWNTO 0) := (42 DOWNTO 32 => '1', 28 DOWNTO 27 => '1', 24 => '1', 21 DOWNTO 18 => '1', 15 => '1', 11 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a3_section37             : signed(42 DOWNTO 0) := to_signed(1745773056, 43); -- sfix43_En31
  CONSTANT scaleconst38                   : signed(42 DOWNTO 0) := to_signed(5418175, 43); -- sfix43_En31
  CONSTANT coeff_b1_section38             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section38             : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section38             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section38             : signed(42 DOWNTO 0) := (42 DOWNTO 32 => '1', 28 DOWNTO 27 => '1', 24 => '1', 22 DOWNTO 21 => '1', 17 DOWNTO 14 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a3_section38             : signed(42 DOWNTO 0) := to_signed(1743188992, 43); -- sfix43_En31
  CONSTANT scaleconst39                   : signed(42 DOWNTO 0) := to_signed(5415293, 43); -- sfix43_En31
  CONSTANT coeff_b1_section39             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section39             : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section39             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section39             : signed(42 DOWNTO 0) := (42 DOWNTO 32 => '1', 28 DOWNTO 27 => '1', 24 DOWNTO 23 => '1', 17 DOWNTO 16 => '1', 13 => '1', 10 DOWNTO 9 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a3_section39             : signed(42 DOWNTO 0) := to_signed(1741118976, 43); -- sfix43_En31
  CONSTANT scaleconst40                   : signed(42 DOWNTO 0) := to_signed(5413129, 43); -- sfix43_En31
  CONSTANT coeff_b1_section40             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section40             : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section40             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section40             : signed(42 DOWNTO 0) := (31 DOWNTO 29 => '0', 26 DOWNTO 25 => '0', 22 DOWNTO 21 => '0', 18 => '0', 16 => '0', 14 => '0', 10 DOWNTO 0 => '0',  OTHERS => '1'); -- sfix43_En31
  CONSTANT coeff_a3_section40             : signed(42 DOWNTO 0) := to_signed(1739566080, 43); -- sfix43_En31
  CONSTANT scaleconst41                   : signed(42 DOWNTO 0) := to_signed(5411687, 43); -- sfix43_En31
  CONSTANT coeff_b1_section41             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section41             : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section41             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section41             : signed(42 DOWNTO 0) := (42 DOWNTO 32 => '1', 28 DOWNTO 27 => '1', 24 DOWNTO 23 => '1', 21 => '1', 19 => '1', 17 => '1', 14 DOWNTO 12 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a3_section41             : signed(42 DOWNTO 0) := to_signed(1738529792, 43); -- sfix43_En31
  CONSTANT scaleconst42                   : signed(42 DOWNTO 0) := to_signed(5410965, 43); -- sfix43_En31
  CONSTANT coeff_b1_section42             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b2_section42             : signed(42 DOWNTO 0) := (32 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_b3_section42             : signed(42 DOWNTO 0) := (31 => '1',  OTHERS => '0'); -- sfix43_En31
  CONSTANT coeff_a2_section42             : signed(42 DOWNTO 0) := (31 DOWNTO 29 => '0', 26 DOWNTO 25 => '0', 22 => '0', 19 DOWNTO 18 => '0', 16 DOWNTO 15 => '0', 13 DOWNTO 12 => '0', 8 DOWNTO 0 => '0',  OTHERS => '1'); -- sfix43_En31
  CONSTANT coeff_a3_section42             : signed(42 DOWNTO 0) := to_signed(1738011648, 43); -- sfix43_En31
  -- Signals
  SIGNAL input_register                   : signed(23 DOWNTO 0); -- sfix24_En23
  SIGNAL cur_count                        : unsigned(7 DOWNTO 0); -- ufix8
  SIGNAL phase_0                          : std_logic; -- boolean
  SIGNAL phase_2                          : std_logic; -- boolean
  SIGNAL phase_3                          : std_logic; -- boolean
  SIGNAL phase_5                          : std_logic; -- boolean
  SIGNAL phase_6                          : std_logic; -- boolean
  SIGNAL phase_8                          : std_logic; -- boolean
  SIGNAL phase_9                          : std_logic; -- boolean
  SIGNAL phase_11                         : std_logic; -- boolean
  SIGNAL phase_12                         : std_logic; -- boolean
  SIGNAL phase_14                         : std_logic; -- boolean
  SIGNAL phase_15                         : std_logic; -- boolean
  SIGNAL phase_17                         : std_logic; -- boolean
  SIGNAL phase_18                         : std_logic; -- boolean
  SIGNAL phase_20                         : std_logic; -- boolean
  SIGNAL phase_21                         : std_logic; -- boolean
  SIGNAL phase_23                         : std_logic; -- boolean
  SIGNAL phase_24                         : std_logic; -- boolean
  SIGNAL phase_26                         : std_logic; -- boolean
  SIGNAL phase_27                         : std_logic; -- boolean
  SIGNAL phase_29                         : std_logic; -- boolean
  SIGNAL phase_30                         : std_logic; -- boolean
  SIGNAL phase_32                         : std_logic; -- boolean
  SIGNAL phase_33                         : std_logic; -- boolean
  SIGNAL phase_35                         : std_logic; -- boolean
  SIGNAL phase_36                         : std_logic; -- boolean
  SIGNAL phase_38                         : std_logic; -- boolean
  SIGNAL phase_39                         : std_logic; -- boolean
  SIGNAL phase_41                         : std_logic; -- boolean
  SIGNAL phase_42                         : std_logic; -- boolean
  SIGNAL phase_44                         : std_logic; -- boolean
  SIGNAL phase_45                         : std_logic; -- boolean
  SIGNAL phase_47                         : std_logic; -- boolean
  SIGNAL phase_48                         : std_logic; -- boolean
  SIGNAL phase_50                         : std_logic; -- boolean
  SIGNAL phase_51                         : std_logic; -- boolean
  SIGNAL phase_53                         : std_logic; -- boolean
  SIGNAL phase_54                         : std_logic; -- boolean
  SIGNAL phase_56                         : std_logic; -- boolean
  SIGNAL phase_57                         : std_logic; -- boolean
  SIGNAL phase_59                         : std_logic; -- boolean
  SIGNAL phase_60                         : std_logic; -- boolean
  SIGNAL phase_62                         : std_logic; -- boolean
  SIGNAL phase_63                         : std_logic; -- boolean
  SIGNAL phase_65                         : std_logic; -- boolean
  SIGNAL phase_66                         : std_logic; -- boolean
  SIGNAL phase_68                         : std_logic; -- boolean
  SIGNAL phase_69                         : std_logic; -- boolean
  SIGNAL phase_71                         : std_logic; -- boolean
  SIGNAL phase_72                         : std_logic; -- boolean
  SIGNAL phase_74                         : std_logic; -- boolean
  SIGNAL phase_75                         : std_logic; -- boolean
  SIGNAL phase_77                         : std_logic; -- boolean
  SIGNAL phase_78                         : std_logic; -- boolean
  SIGNAL phase_80                         : std_logic; -- boolean
  SIGNAL phase_81                         : std_logic; -- boolean
  SIGNAL phase_83                         : std_logic; -- boolean
  SIGNAL phase_84                         : std_logic; -- boolean
  SIGNAL phase_86                         : std_logic; -- boolean
  SIGNAL phase_87                         : std_logic; -- boolean
  SIGNAL phase_89                         : std_logic; -- boolean
  SIGNAL phase_90                         : std_logic; -- boolean
  SIGNAL phase_92                         : std_logic; -- boolean
  SIGNAL phase_93                         : std_logic; -- boolean
  SIGNAL phase_95                         : std_logic; -- boolean
  SIGNAL phase_96                         : std_logic; -- boolean
  SIGNAL phase_98                         : std_logic; -- boolean
  SIGNAL phase_99                         : std_logic; -- boolean
  SIGNAL phase_101                        : std_logic; -- boolean
  SIGNAL phase_102                        : std_logic; -- boolean
  SIGNAL phase_104                        : std_logic; -- boolean
  SIGNAL phase_105                        : std_logic; -- boolean
  SIGNAL phase_107                        : std_logic; -- boolean
  SIGNAL phase_108                        : std_logic; -- boolean
  SIGNAL phase_110                        : std_logic; -- boolean
  SIGNAL phase_111                        : std_logic; -- boolean
  SIGNAL phase_113                        : std_logic; -- boolean
  SIGNAL phase_114                        : std_logic; -- boolean
  SIGNAL phase_116                        : std_logic; -- boolean
  SIGNAL phase_117                        : std_logic; -- boolean
  SIGNAL phase_119                        : std_logic; -- boolean
  SIGNAL phase_120                        : std_logic; -- boolean
  SIGNAL phase_122                        : std_logic; -- boolean
  SIGNAL phase_123                        : std_logic; -- boolean
  SIGNAL phase_125                        : std_logic; -- boolean
  SIGNAL phase_126                        : std_logic; -- boolean
  SIGNAL phase_128                        : std_logic; -- boolean
  SIGNAL phase_129                        : std_logic; -- boolean
  SIGNAL phase_131                        : std_logic; -- boolean
  SIGNAL phase_132                        : std_logic; -- boolean
  SIGNAL phase_134                        : std_logic; -- boolean
  SIGNAL phase_135                        : std_logic; -- boolean
  SIGNAL phase_137                        : std_logic; -- boolean
  SIGNAL phase_138                        : std_logic; -- boolean
  SIGNAL phase_140                        : std_logic; -- boolean
  SIGNAL phase_141                        : std_logic; -- boolean
  SIGNAL phase_143                        : std_logic; -- boolean
  SIGNAL phase_144                        : std_logic; -- boolean
  SIGNAL phase_146                        : std_logic; -- boolean
  SIGNAL phase_147                        : std_logic; -- boolean
  SIGNAL phase_149                        : std_logic; -- boolean
  SIGNAL phase_150                        : std_logic; -- boolean
  SIGNAL phase_152                        : std_logic; -- boolean
  SIGNAL phase_153                        : std_logic; -- boolean
  SIGNAL phase_155                        : std_logic; -- boolean
  SIGNAL phase_156                        : std_logic; -- boolean
  SIGNAL phase_158                        : std_logic; -- boolean
  SIGNAL phase_159                        : std_logic; -- boolean
  SIGNAL phase_161                        : std_logic; -- boolean
  SIGNAL phase_162                        : std_logic; -- boolean
  SIGNAL phase_164                        : std_logic; -- boolean
  SIGNAL phase_165                        : std_logic; -- boolean
  SIGNAL phase_167                        : std_logic; -- boolean
  SIGNAL phase_168                        : std_logic; -- boolean
  SIGNAL phase_170                        : std_logic; -- boolean
  SIGNAL phase_171                        : std_logic; -- boolean
  SIGNAL phase_173                        : std_logic; -- boolean
  SIGNAL phase_174                        : std_logic; -- boolean
  SIGNAL phase_176                        : std_logic; -- boolean
  SIGNAL phase_177                        : std_logic; -- boolean
  SIGNAL phase_179                        : std_logic; -- boolean
  SIGNAL phase_180                        : std_logic; -- boolean
  SIGNAL phase_182                        : std_logic; -- boolean
  SIGNAL phase_183                        : std_logic; -- boolean
  SIGNAL phase_185                        : std_logic; -- boolean
  SIGNAL phase_186                        : std_logic; -- boolean
  SIGNAL phase_188                        : std_logic; -- boolean
  SIGNAL phase_189                        : std_logic; -- boolean
  SIGNAL phase_191                        : std_logic; -- boolean
  SIGNAL phase_192                        : std_logic; -- boolean
  SIGNAL phase_194                        : std_logic; -- boolean
  SIGNAL phase_195                        : std_logic; -- boolean
  SIGNAL phase_197                        : std_logic; -- boolean
  SIGNAL phase_198                        : std_logic; -- boolean
  SIGNAL phase_200                        : std_logic; -- boolean
  SIGNAL phase_201                        : std_logic; -- boolean
  SIGNAL phase_203                        : std_logic; -- boolean
  SIGNAL phase_204                        : std_logic; -- boolean
  SIGNAL phase_206                        : std_logic; -- boolean
  SIGNAL phase_207                        : std_logic; -- boolean
  SIGNAL phase_209                        : std_logic; -- boolean
  SIGNAL phase_210                        : std_logic; -- boolean
  SIGNAL phase_212                        : std_logic; -- boolean
  SIGNAL phase_213                        : std_logic; -- boolean
  SIGNAL phase_215                        : std_logic; -- boolean
  SIGNAL phase_216                        : std_logic; -- boolean
  SIGNAL phase_218                        : std_logic; -- boolean
  SIGNAL phase_219                        : std_logic; -- boolean
  SIGNAL phase_221                        : std_logic; -- boolean
  SIGNAL phase_222                        : std_logic; -- boolean
  SIGNAL phase_224                        : std_logic; -- boolean
  SIGNAL phase_225                        : std_logic; -- boolean
  SIGNAL phase_227                        : std_logic; -- boolean
  SIGNAL phase_228                        : std_logic; -- boolean
  SIGNAL phase_230                        : std_logic; -- boolean
  SIGNAL phase_231                        : std_logic; -- boolean
  SIGNAL phase_233                        : std_logic; -- boolean
  SIGNAL phase_234                        : std_logic; -- boolean
  SIGNAL phase_236                        : std_logic; -- boolean
  SIGNAL phase_237                        : std_logic; -- boolean
  SIGNAL phase_239                        : std_logic; -- boolean
  SIGNAL phase_240                        : std_logic; -- boolean
  SIGNAL phase_242                        : std_logic; -- boolean
  SIGNAL phase_243                        : std_logic; -- boolean
  SIGNAL phase_245                        : std_logic; -- boolean
  SIGNAL phase_246                        : std_logic; -- boolean
  SIGNAL phase_248                        : std_logic; -- boolean
  SIGNAL phase_249                        : std_logic; -- boolean
  SIGNAL phase_251                        : std_logic; -- boolean
  SIGNAL sectionipconvert                 : signed(23 DOWNTO 0); -- sfix24_En25
  SIGNAL storagetypeconvert               : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL prev_stg_op1                     : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op2                     : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op3                     : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op4                     : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op5                     : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op6                     : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op7                     : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op8                     : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op9                     : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op10                    : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op11                    : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op12                    : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op13                    : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op14                    : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op15                    : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op16                    : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op17                    : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op18                    : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op19                    : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op20                    : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op21                    : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op22                    : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op23                    : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op24                    : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op25                    : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op26                    : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op27                    : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op28                    : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op29                    : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op30                    : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op31                    : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op32                    : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op33                    : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op34                    : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op35                    : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op36                    : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op37                    : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op38                    : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op39                    : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op40                    : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL prev_stg_op41                    : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL storage_state_in1                : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section1                   : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in2                : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section2                   : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in3                : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section3                   : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in4                : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section4                   : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in5                : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section5                   : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in6                : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section6                   : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in7                : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section7                   : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in8                : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section8                   : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in9                : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section9                   : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in10               : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section10                  : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in11               : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section11                  : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in12               : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section12                  : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in13               : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section13                  : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in14               : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section14                  : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in15               : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section15                  : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in16               : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section16                  : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in17               : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section17                  : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in18               : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section18                  : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in19               : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section19                  : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in20               : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section20                  : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in21               : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section21                  : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in22               : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section22                  : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in23               : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section23                  : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in24               : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section24                  : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in25               : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section25                  : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in26               : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section26                  : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in27               : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section27                  : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in28               : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section28                  : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in29               : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section29                  : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in30               : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section30                  : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in31               : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section31                  : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in32               : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section32                  : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in33               : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section33                  : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in34               : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section34                  : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in35               : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section35                  : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in36               : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section36                  : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in37               : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section37                  : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in38               : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section38                  : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in39               : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section39                  : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in40               : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section40                  : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in41               : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section41                  : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL storage_state_in42               : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_section42                  : delay_pipeline_type(0 TO 1); -- sfix16_En15
  SIGNAL input_section1_cast              : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section1_cast         : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section11_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section12_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section2_cast              : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section2_cast         : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section21_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section22_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section3_cast              : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section3_cast         : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section31_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section32_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section4_cast              : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section4_cast         : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section41_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section42_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section5_cast              : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section5_cast         : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section51_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section52_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section6_cast              : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section6_cast         : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section61_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section62_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section7_cast              : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section7_cast         : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section71_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section72_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section8_cast              : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section8_cast         : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section81_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section82_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section9_cast              : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section9_cast         : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section91_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section92_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section10_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section10_cast        : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section101_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section102_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section11_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section11_cast        : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section111_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section112_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section12_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section12_cast        : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section121_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section122_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section13_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section13_cast        : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section131_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section132_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section14_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section14_cast        : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section141_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section142_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section15_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section15_cast        : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section151_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section152_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section16_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section16_cast        : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section161_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section162_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section17_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section17_cast        : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section171_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section172_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section18_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section18_cast        : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section181_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section182_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section19_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section19_cast        : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section191_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section192_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section20_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section20_cast        : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section201_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section202_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section21_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section21_cast        : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section211_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section212_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section22_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section22_cast        : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section221_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section222_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section23_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section23_cast        : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section231_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section232_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section24_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section24_cast        : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section241_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section242_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section25_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section25_cast        : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section251_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section252_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section26_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section26_cast        : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section261_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section262_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section27_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section27_cast        : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section271_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section272_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section28_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section28_cast        : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section281_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section282_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section29_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section29_cast        : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section291_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section292_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section30_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section30_cast        : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section301_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section302_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section31_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section31_cast        : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section311_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section312_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section32_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section32_cast        : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section321_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section322_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section33_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section33_cast        : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section331_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section332_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section34_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section34_cast        : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section341_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section342_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section35_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section35_cast        : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section351_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section352_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section36_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section36_cast        : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section361_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section362_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section37_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section37_cast        : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section371_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section372_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section38_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section38_cast        : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section381_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section382_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section39_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section39_cast        : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section391_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section392_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section40_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section40_cast        : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section401_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section402_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section41_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section41_cast        : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section411_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section412_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL input_section42_cast             : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL storage_in_section42_cast        : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section421_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL delay_section422_cast            : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL inputmux_section_1               : signed(28 DOWNTO 0); -- sfix29_En23
  SIGNAL coeffmux_section_1               : signed(42 DOWNTO 0); -- sfix43_En31
  SIGNAL prod                             : signed(71 DOWNTO 0); -- sfix72_En54
  SIGNAL prod_den                         : signed(39 DOWNTO 0); -- sfix40_En37
  SIGNAL prod_den_cast_temp               : signed(39 DOWNTO 0); -- sfix40_En35
  SIGNAL prod_den_cast                    : signed(40 DOWNTO 0); -- sfix41_En35
  SIGNAL prod_den_cast_neg                : signed(40 DOWNTO 0); -- sfix41_En35
  SIGNAL unaryminus_temp                  : signed(41 DOWNTO 0); -- sfix42_En35
  SIGNAL prod_num                         : signed(39 DOWNTO 0); -- sfix40_En36
  SIGNAL prod_num_cast_temp               : signed(39 DOWNTO 0); -- sfix40_En34
  SIGNAL prod_num_cast                    : signed(40 DOWNTO 0); -- sfix41_En35
  SIGNAL accum_mux_in1                    : signed(40 DOWNTO 0); -- sfix41_En35
  SIGNAL accum_mux_in2                    : signed(40 DOWNTO 0); -- sfix41_En35
  SIGNAL acc_sum                          : signed(40 DOWNTO 0); -- sfix41_En35
  SIGNAL sum_den                          : signed(39 DOWNTO 0); -- sfix40_En35
  SIGNAL sum_den_cast                     : signed(40 DOWNTO 0); -- sfix41_En35
  SIGNAL sum_num                          : signed(39 DOWNTO 0); -- sfix40_En34
  SIGNAL sum_num_cast                     : signed(40 DOWNTO 0); -- sfix41_En35
  SIGNAL accum_mux_out                    : signed(40 DOWNTO 0); -- sfix41_En35
  SIGNAL accum_mux_in1_temp               : signed(40 DOWNTO 0); -- sfix41_En35
  SIGNAL sectionipconvert_cast            : signed(40 DOWNTO 0); -- sfix41_En35
  SIGNAL final_phase                      : std_logic; -- boolean
  SIGNAL section_phase                    : std_logic; -- boolean
  SIGNAL accum_reg                        : signed(40 DOWNTO 0); -- sfix41_En35
  SIGNAL add_cast                         : signed(40 DOWNTO 0); -- sfix41_En35
  SIGNAL add_cast_1                       : signed(40 DOWNTO 0); -- sfix41_En35
  SIGNAL add_temp                         : signed(41 DOWNTO 0); -- sfix42_En35
  SIGNAL acc_out_cast_numacc              : signed(39 DOWNTO 0); -- sfix40_En34
  SIGNAL sectionopconvert                 : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL output_typeconvert               : signed(23 DOWNTO 0); -- sfix24_En18
  SIGNAL output_register                  : signed(23 DOWNTO 0); -- sfix24_En18


BEGIN

  -- Block Statements
  input_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      input_register <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        input_register <= filter_in;
      END IF;
    END IF; 
  END PROCESS input_reg_process;

  Counter_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      cur_count <= to_unsigned(0, 8);
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        IF cur_count >= to_unsigned(251, 8) THEN
          cur_count <= to_unsigned(0, 8);
        ELSE
          cur_count <= cur_count + to_unsigned(1, 8);
        END IF;
      END IF;
    END IF; 
  END PROCESS Counter_process;

  phase_0 <= '1' WHEN cur_count = to_unsigned(0, 8) AND clk_enable = '1' ELSE '0';

  phase_2 <= '1' WHEN cur_count = to_unsigned(2, 8) AND clk_enable = '1' ELSE '0';

  phase_3 <= '1' WHEN cur_count = to_unsigned(3, 8) AND clk_enable = '1' ELSE '0';

  phase_5 <= '1' WHEN cur_count = to_unsigned(5, 8) AND clk_enable = '1' ELSE '0';

  phase_6 <= '1' WHEN cur_count = to_unsigned(6, 8) AND clk_enable = '1' ELSE '0';

  phase_8 <= '1' WHEN cur_count = to_unsigned(8, 8) AND clk_enable = '1' ELSE '0';

  phase_9 <= '1' WHEN cur_count = to_unsigned(9, 8) AND clk_enable = '1' ELSE '0';

  phase_11 <= '1' WHEN cur_count = to_unsigned(11, 8) AND clk_enable = '1' ELSE '0';

  phase_12 <= '1' WHEN cur_count = to_unsigned(12, 8) AND clk_enable = '1' ELSE '0';

  phase_14 <= '1' WHEN cur_count = to_unsigned(14, 8) AND clk_enable = '1' ELSE '0';

  phase_15 <= '1' WHEN cur_count = to_unsigned(15, 8) AND clk_enable = '1' ELSE '0';

  phase_17 <= '1' WHEN cur_count = to_unsigned(17, 8) AND clk_enable = '1' ELSE '0';

  phase_18 <= '1' WHEN cur_count = to_unsigned(18, 8) AND clk_enable = '1' ELSE '0';

  phase_20 <= '1' WHEN cur_count = to_unsigned(20, 8) AND clk_enable = '1' ELSE '0';

  phase_21 <= '1' WHEN cur_count = to_unsigned(21, 8) AND clk_enable = '1' ELSE '0';

  phase_23 <= '1' WHEN cur_count = to_unsigned(23, 8) AND clk_enable = '1' ELSE '0';

  phase_24 <= '1' WHEN cur_count = to_unsigned(24, 8) AND clk_enable = '1' ELSE '0';

  phase_26 <= '1' WHEN cur_count = to_unsigned(26, 8) AND clk_enable = '1' ELSE '0';

  phase_27 <= '1' WHEN cur_count = to_unsigned(27, 8) AND clk_enable = '1' ELSE '0';

  phase_29 <= '1' WHEN cur_count = to_unsigned(29, 8) AND clk_enable = '1' ELSE '0';

  phase_30 <= '1' WHEN cur_count = to_unsigned(30, 8) AND clk_enable = '1' ELSE '0';

  phase_32 <= '1' WHEN cur_count = to_unsigned(32, 8) AND clk_enable = '1' ELSE '0';

  phase_33 <= '1' WHEN cur_count = to_unsigned(33, 8) AND clk_enable = '1' ELSE '0';

  phase_35 <= '1' WHEN cur_count = to_unsigned(35, 8) AND clk_enable = '1' ELSE '0';

  phase_36 <= '1' WHEN cur_count = to_unsigned(36, 8) AND clk_enable = '1' ELSE '0';

  phase_38 <= '1' WHEN cur_count = to_unsigned(38, 8) AND clk_enable = '1' ELSE '0';

  phase_39 <= '1' WHEN cur_count = to_unsigned(39, 8) AND clk_enable = '1' ELSE '0';

  phase_41 <= '1' WHEN cur_count = to_unsigned(41, 8) AND clk_enable = '1' ELSE '0';

  phase_42 <= '1' WHEN cur_count = to_unsigned(42, 8) AND clk_enable = '1' ELSE '0';

  phase_44 <= '1' WHEN cur_count = to_unsigned(44, 8) AND clk_enable = '1' ELSE '0';

  phase_45 <= '1' WHEN cur_count = to_unsigned(45, 8) AND clk_enable = '1' ELSE '0';

  phase_47 <= '1' WHEN cur_count = to_unsigned(47, 8) AND clk_enable = '1' ELSE '0';

  phase_48 <= '1' WHEN cur_count = to_unsigned(48, 8) AND clk_enable = '1' ELSE '0';

  phase_50 <= '1' WHEN cur_count = to_unsigned(50, 8) AND clk_enable = '1' ELSE '0';

  phase_51 <= '1' WHEN cur_count = to_unsigned(51, 8) AND clk_enable = '1' ELSE '0';

  phase_53 <= '1' WHEN cur_count = to_unsigned(53, 8) AND clk_enable = '1' ELSE '0';

  phase_54 <= '1' WHEN cur_count = to_unsigned(54, 8) AND clk_enable = '1' ELSE '0';

  phase_56 <= '1' WHEN cur_count = to_unsigned(56, 8) AND clk_enable = '1' ELSE '0';

  phase_57 <= '1' WHEN cur_count = to_unsigned(57, 8) AND clk_enable = '1' ELSE '0';

  phase_59 <= '1' WHEN cur_count = to_unsigned(59, 8) AND clk_enable = '1' ELSE '0';

  phase_60 <= '1' WHEN cur_count = to_unsigned(60, 8) AND clk_enable = '1' ELSE '0';

  phase_62 <= '1' WHEN cur_count = to_unsigned(62, 8) AND clk_enable = '1' ELSE '0';

  phase_63 <= '1' WHEN cur_count = to_unsigned(63, 8) AND clk_enable = '1' ELSE '0';

  phase_65 <= '1' WHEN cur_count = to_unsigned(65, 8) AND clk_enable = '1' ELSE '0';

  phase_66 <= '1' WHEN cur_count = to_unsigned(66, 8) AND clk_enable = '1' ELSE '0';

  phase_68 <= '1' WHEN cur_count = to_unsigned(68, 8) AND clk_enable = '1' ELSE '0';

  phase_69 <= '1' WHEN cur_count = to_unsigned(69, 8) AND clk_enable = '1' ELSE '0';

  phase_71 <= '1' WHEN cur_count = to_unsigned(71, 8) AND clk_enable = '1' ELSE '0';

  phase_72 <= '1' WHEN cur_count = to_unsigned(72, 8) AND clk_enable = '1' ELSE '0';

  phase_74 <= '1' WHEN cur_count = to_unsigned(74, 8) AND clk_enable = '1' ELSE '0';

  phase_75 <= '1' WHEN cur_count = to_unsigned(75, 8) AND clk_enable = '1' ELSE '0';

  phase_77 <= '1' WHEN cur_count = to_unsigned(77, 8) AND clk_enable = '1' ELSE '0';

  phase_78 <= '1' WHEN cur_count = to_unsigned(78, 8) AND clk_enable = '1' ELSE '0';

  phase_80 <= '1' WHEN cur_count = to_unsigned(80, 8) AND clk_enable = '1' ELSE '0';

  phase_81 <= '1' WHEN cur_count = to_unsigned(81, 8) AND clk_enable = '1' ELSE '0';

  phase_83 <= '1' WHEN cur_count = to_unsigned(83, 8) AND clk_enable = '1' ELSE '0';

  phase_84 <= '1' WHEN cur_count = to_unsigned(84, 8) AND clk_enable = '1' ELSE '0';

  phase_86 <= '1' WHEN cur_count = to_unsigned(86, 8) AND clk_enable = '1' ELSE '0';

  phase_87 <= '1' WHEN cur_count = to_unsigned(87, 8) AND clk_enable = '1' ELSE '0';

  phase_89 <= '1' WHEN cur_count = to_unsigned(89, 8) AND clk_enable = '1' ELSE '0';

  phase_90 <= '1' WHEN cur_count = to_unsigned(90, 8) AND clk_enable = '1' ELSE '0';

  phase_92 <= '1' WHEN cur_count = to_unsigned(92, 8) AND clk_enable = '1' ELSE '0';

  phase_93 <= '1' WHEN cur_count = to_unsigned(93, 8) AND clk_enable = '1' ELSE '0';

  phase_95 <= '1' WHEN cur_count = to_unsigned(95, 8) AND clk_enable = '1' ELSE '0';

  phase_96 <= '1' WHEN cur_count = to_unsigned(96, 8) AND clk_enable = '1' ELSE '0';

  phase_98 <= '1' WHEN cur_count = to_unsigned(98, 8) AND clk_enable = '1' ELSE '0';

  phase_99 <= '1' WHEN cur_count = to_unsigned(99, 8) AND clk_enable = '1' ELSE '0';

  phase_101 <= '1' WHEN cur_count = to_unsigned(101, 8) AND clk_enable = '1' ELSE '0';

  phase_102 <= '1' WHEN cur_count = to_unsigned(102, 8) AND clk_enable = '1' ELSE '0';

  phase_104 <= '1' WHEN cur_count = to_unsigned(104, 8) AND clk_enable = '1' ELSE '0';

  phase_105 <= '1' WHEN cur_count = to_unsigned(105, 8) AND clk_enable = '1' ELSE '0';

  phase_107 <= '1' WHEN cur_count = to_unsigned(107, 8) AND clk_enable = '1' ELSE '0';

  phase_108 <= '1' WHEN cur_count = to_unsigned(108, 8) AND clk_enable = '1' ELSE '0';

  phase_110 <= '1' WHEN cur_count = to_unsigned(110, 8) AND clk_enable = '1' ELSE '0';

  phase_111 <= '1' WHEN cur_count = to_unsigned(111, 8) AND clk_enable = '1' ELSE '0';

  phase_113 <= '1' WHEN cur_count = to_unsigned(113, 8) AND clk_enable = '1' ELSE '0';

  phase_114 <= '1' WHEN cur_count = to_unsigned(114, 8) AND clk_enable = '1' ELSE '0';

  phase_116 <= '1' WHEN cur_count = to_unsigned(116, 8) AND clk_enable = '1' ELSE '0';

  phase_117 <= '1' WHEN cur_count = to_unsigned(117, 8) AND clk_enable = '1' ELSE '0';

  phase_119 <= '1' WHEN cur_count = to_unsigned(119, 8) AND clk_enable = '1' ELSE '0';

  phase_120 <= '1' WHEN cur_count = to_unsigned(120, 8) AND clk_enable = '1' ELSE '0';

  phase_122 <= '1' WHEN cur_count = to_unsigned(122, 8) AND clk_enable = '1' ELSE '0';

  phase_123 <= '1' WHEN cur_count = to_unsigned(123, 8) AND clk_enable = '1' ELSE '0';

  phase_125 <= '1' WHEN cur_count = to_unsigned(125, 8) AND clk_enable = '1' ELSE '0';

  phase_126 <= '1' WHEN cur_count = to_unsigned(126, 8) AND clk_enable = '1' ELSE '0';

  phase_128 <= '1' WHEN cur_count = to_unsigned(128, 8) AND clk_enable = '1' ELSE '0';

  phase_129 <= '1' WHEN cur_count = to_unsigned(129, 8) AND clk_enable = '1' ELSE '0';

  phase_131 <= '1' WHEN cur_count = to_unsigned(131, 8) AND clk_enable = '1' ELSE '0';

  phase_132 <= '1' WHEN cur_count = to_unsigned(132, 8) AND clk_enable = '1' ELSE '0';

  phase_134 <= '1' WHEN cur_count = to_unsigned(134, 8) AND clk_enable = '1' ELSE '0';

  phase_135 <= '1' WHEN cur_count = to_unsigned(135, 8) AND clk_enable = '1' ELSE '0';

  phase_137 <= '1' WHEN cur_count = to_unsigned(137, 8) AND clk_enable = '1' ELSE '0';

  phase_138 <= '1' WHEN cur_count = to_unsigned(138, 8) AND clk_enable = '1' ELSE '0';

  phase_140 <= '1' WHEN cur_count = to_unsigned(140, 8) AND clk_enable = '1' ELSE '0';

  phase_141 <= '1' WHEN cur_count = to_unsigned(141, 8) AND clk_enable = '1' ELSE '0';

  phase_143 <= '1' WHEN cur_count = to_unsigned(143, 8) AND clk_enable = '1' ELSE '0';

  phase_144 <= '1' WHEN cur_count = to_unsigned(144, 8) AND clk_enable = '1' ELSE '0';

  phase_146 <= '1' WHEN cur_count = to_unsigned(146, 8) AND clk_enable = '1' ELSE '0';

  phase_147 <= '1' WHEN cur_count = to_unsigned(147, 8) AND clk_enable = '1' ELSE '0';

  phase_149 <= '1' WHEN cur_count = to_unsigned(149, 8) AND clk_enable = '1' ELSE '0';

  phase_150 <= '1' WHEN cur_count = to_unsigned(150, 8) AND clk_enable = '1' ELSE '0';

  phase_152 <= '1' WHEN cur_count = to_unsigned(152, 8) AND clk_enable = '1' ELSE '0';

  phase_153 <= '1' WHEN cur_count = to_unsigned(153, 8) AND clk_enable = '1' ELSE '0';

  phase_155 <= '1' WHEN cur_count = to_unsigned(155, 8) AND clk_enable = '1' ELSE '0';

  phase_156 <= '1' WHEN cur_count = to_unsigned(156, 8) AND clk_enable = '1' ELSE '0';

  phase_158 <= '1' WHEN cur_count = to_unsigned(158, 8) AND clk_enable = '1' ELSE '0';

  phase_159 <= '1' WHEN cur_count = to_unsigned(159, 8) AND clk_enable = '1' ELSE '0';

  phase_161 <= '1' WHEN cur_count = to_unsigned(161, 8) AND clk_enable = '1' ELSE '0';

  phase_162 <= '1' WHEN cur_count = to_unsigned(162, 8) AND clk_enable = '1' ELSE '0';

  phase_164 <= '1' WHEN cur_count = to_unsigned(164, 8) AND clk_enable = '1' ELSE '0';

  phase_165 <= '1' WHEN cur_count = to_unsigned(165, 8) AND clk_enable = '1' ELSE '0';

  phase_167 <= '1' WHEN cur_count = to_unsigned(167, 8) AND clk_enable = '1' ELSE '0';

  phase_168 <= '1' WHEN cur_count = to_unsigned(168, 8) AND clk_enable = '1' ELSE '0';

  phase_170 <= '1' WHEN cur_count = to_unsigned(170, 8) AND clk_enable = '1' ELSE '0';

  phase_171 <= '1' WHEN cur_count = to_unsigned(171, 8) AND clk_enable = '1' ELSE '0';

  phase_173 <= '1' WHEN cur_count = to_unsigned(173, 8) AND clk_enable = '1' ELSE '0';

  phase_174 <= '1' WHEN cur_count = to_unsigned(174, 8) AND clk_enable = '1' ELSE '0';

  phase_176 <= '1' WHEN cur_count = to_unsigned(176, 8) AND clk_enable = '1' ELSE '0';

  phase_177 <= '1' WHEN cur_count = to_unsigned(177, 8) AND clk_enable = '1' ELSE '0';

  phase_179 <= '1' WHEN cur_count = to_unsigned(179, 8) AND clk_enable = '1' ELSE '0';

  phase_180 <= '1' WHEN cur_count = to_unsigned(180, 8) AND clk_enable = '1' ELSE '0';

  phase_182 <= '1' WHEN cur_count = to_unsigned(182, 8) AND clk_enable = '1' ELSE '0';

  phase_183 <= '1' WHEN cur_count = to_unsigned(183, 8) AND clk_enable = '1' ELSE '0';

  phase_185 <= '1' WHEN cur_count = to_unsigned(185, 8) AND clk_enable = '1' ELSE '0';

  phase_186 <= '1' WHEN cur_count = to_unsigned(186, 8) AND clk_enable = '1' ELSE '0';

  phase_188 <= '1' WHEN cur_count = to_unsigned(188, 8) AND clk_enable = '1' ELSE '0';

  phase_189 <= '1' WHEN cur_count = to_unsigned(189, 8) AND clk_enable = '1' ELSE '0';

  phase_191 <= '1' WHEN cur_count = to_unsigned(191, 8) AND clk_enable = '1' ELSE '0';

  phase_192 <= '1' WHEN cur_count = to_unsigned(192, 8) AND clk_enable = '1' ELSE '0';

  phase_194 <= '1' WHEN cur_count = to_unsigned(194, 8) AND clk_enable = '1' ELSE '0';

  phase_195 <= '1' WHEN cur_count = to_unsigned(195, 8) AND clk_enable = '1' ELSE '0';

  phase_197 <= '1' WHEN cur_count = to_unsigned(197, 8) AND clk_enable = '1' ELSE '0';

  phase_198 <= '1' WHEN cur_count = to_unsigned(198, 8) AND clk_enable = '1' ELSE '0';

  phase_200 <= '1' WHEN cur_count = to_unsigned(200, 8) AND clk_enable = '1' ELSE '0';

  phase_201 <= '1' WHEN cur_count = to_unsigned(201, 8) AND clk_enable = '1' ELSE '0';

  phase_203 <= '1' WHEN cur_count = to_unsigned(203, 8) AND clk_enable = '1' ELSE '0';

  phase_204 <= '1' WHEN cur_count = to_unsigned(204, 8) AND clk_enable = '1' ELSE '0';

  phase_206 <= '1' WHEN cur_count = to_unsigned(206, 8) AND clk_enable = '1' ELSE '0';

  phase_207 <= '1' WHEN cur_count = to_unsigned(207, 8) AND clk_enable = '1' ELSE '0';

  phase_209 <= '1' WHEN cur_count = to_unsigned(209, 8) AND clk_enable = '1' ELSE '0';

  phase_210 <= '1' WHEN cur_count = to_unsigned(210, 8) AND clk_enable = '1' ELSE '0';

  phase_212 <= '1' WHEN cur_count = to_unsigned(212, 8) AND clk_enable = '1' ELSE '0';

  phase_213 <= '1' WHEN cur_count = to_unsigned(213, 8) AND clk_enable = '1' ELSE '0';

  phase_215 <= '1' WHEN cur_count = to_unsigned(215, 8) AND clk_enable = '1' ELSE '0';

  phase_216 <= '1' WHEN cur_count = to_unsigned(216, 8) AND clk_enable = '1' ELSE '0';

  phase_218 <= '1' WHEN cur_count = to_unsigned(218, 8) AND clk_enable = '1' ELSE '0';

  phase_219 <= '1' WHEN cur_count = to_unsigned(219, 8) AND clk_enable = '1' ELSE '0';

  phase_221 <= '1' WHEN cur_count = to_unsigned(221, 8) AND clk_enable = '1' ELSE '0';

  phase_222 <= '1' WHEN cur_count = to_unsigned(222, 8) AND clk_enable = '1' ELSE '0';

  phase_224 <= '1' WHEN cur_count = to_unsigned(224, 8) AND clk_enable = '1' ELSE '0';

  phase_225 <= '1' WHEN cur_count = to_unsigned(225, 8) AND clk_enable = '1' ELSE '0';

  phase_227 <= '1' WHEN cur_count = to_unsigned(227, 8) AND clk_enable = '1' ELSE '0';

  phase_228 <= '1' WHEN cur_count = to_unsigned(228, 8) AND clk_enable = '1' ELSE '0';

  phase_230 <= '1' WHEN cur_count = to_unsigned(230, 8) AND clk_enable = '1' ELSE '0';

  phase_231 <= '1' WHEN cur_count = to_unsigned(231, 8) AND clk_enable = '1' ELSE '0';

  phase_233 <= '1' WHEN cur_count = to_unsigned(233, 8) AND clk_enable = '1' ELSE '0';

  phase_234 <= '1' WHEN cur_count = to_unsigned(234, 8) AND clk_enable = '1' ELSE '0';

  phase_236 <= '1' WHEN cur_count = to_unsigned(236, 8) AND clk_enable = '1' ELSE '0';

  phase_237 <= '1' WHEN cur_count = to_unsigned(237, 8) AND clk_enable = '1' ELSE '0';

  phase_239 <= '1' WHEN cur_count = to_unsigned(239, 8) AND clk_enable = '1' ELSE '0';

  phase_240 <= '1' WHEN cur_count = to_unsigned(240, 8) AND clk_enable = '1' ELSE '0';

  phase_242 <= '1' WHEN cur_count = to_unsigned(242, 8) AND clk_enable = '1' ELSE '0';

  phase_243 <= '1' WHEN cur_count = to_unsigned(243, 8) AND clk_enable = '1' ELSE '0';

  phase_245 <= '1' WHEN cur_count = to_unsigned(245, 8) AND clk_enable = '1' ELSE '0';

  phase_246 <= '1' WHEN cur_count = to_unsigned(246, 8) AND clk_enable = '1' ELSE '0';

  phase_248 <= '1' WHEN cur_count = to_unsigned(248, 8) AND clk_enable = '1' ELSE '0';

  phase_249 <= '1' WHEN cur_count = to_unsigned(249, 8) AND clk_enable = '1' ELSE '0';

  phase_251 <= '1' WHEN cur_count = to_unsigned(251, 8) AND clk_enable = '1' ELSE '0';


  -- Next stage input = Previous stage output. Storing Previous stage output
  prev_stg_op1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op1 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_5 = '1' THEN
        prev_stg_op1 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op1_process;

  prev_stg_op2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op2 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_11 = '1' THEN
        prev_stg_op2 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op2_process;

  prev_stg_op3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op3 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_17 = '1' THEN
        prev_stg_op3 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op3_process;

  prev_stg_op4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op4 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_23 = '1' THEN
        prev_stg_op4 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op4_process;

  prev_stg_op5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op5 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_29 = '1' THEN
        prev_stg_op5 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op5_process;

  prev_stg_op6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op6 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_35 = '1' THEN
        prev_stg_op6 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op6_process;

  prev_stg_op7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op7 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_41 = '1' THEN
        prev_stg_op7 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op7_process;

  prev_stg_op8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op8 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_47 = '1' THEN
        prev_stg_op8 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op8_process;

  prev_stg_op9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op9 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_53 = '1' THEN
        prev_stg_op9 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op9_process;

  prev_stg_op10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op10 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_59 = '1' THEN
        prev_stg_op10 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op10_process;

  prev_stg_op11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op11 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_65 = '1' THEN
        prev_stg_op11 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op11_process;

  prev_stg_op12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op12 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_71 = '1' THEN
        prev_stg_op12 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op12_process;

  prev_stg_op13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op13 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_77 = '1' THEN
        prev_stg_op13 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op13_process;

  prev_stg_op14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op14 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_83 = '1' THEN
        prev_stg_op14 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op14_process;

  prev_stg_op15_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op15 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_89 = '1' THEN
        prev_stg_op15 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op15_process;

  prev_stg_op16_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op16 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_95 = '1' THEN
        prev_stg_op16 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op16_process;

  prev_stg_op17_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op17 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_101 = '1' THEN
        prev_stg_op17 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op17_process;

  prev_stg_op18_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op18 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_107 = '1' THEN
        prev_stg_op18 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op18_process;

  prev_stg_op19_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op19 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_113 = '1' THEN
        prev_stg_op19 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op19_process;

  prev_stg_op20_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op20 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_119 = '1' THEN
        prev_stg_op20 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op20_process;

  prev_stg_op21_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op21 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_125 = '1' THEN
        prev_stg_op21 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op21_process;

  prev_stg_op22_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op22 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_131 = '1' THEN
        prev_stg_op22 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op22_process;

  prev_stg_op23_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op23 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_137 = '1' THEN
        prev_stg_op23 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op23_process;

  prev_stg_op24_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op24 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_143 = '1' THEN
        prev_stg_op24 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op24_process;

  prev_stg_op25_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op25 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_149 = '1' THEN
        prev_stg_op25 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op25_process;

  prev_stg_op26_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op26 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_155 = '1' THEN
        prev_stg_op26 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op26_process;

  prev_stg_op27_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op27 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_161 = '1' THEN
        prev_stg_op27 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op27_process;

  prev_stg_op28_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op28 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_167 = '1' THEN
        prev_stg_op28 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op28_process;

  prev_stg_op29_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op29 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_173 = '1' THEN
        prev_stg_op29 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op29_process;

  prev_stg_op30_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op30 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_179 = '1' THEN
        prev_stg_op30 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op30_process;

  prev_stg_op31_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op31 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_185 = '1' THEN
        prev_stg_op31 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op31_process;

  prev_stg_op32_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op32 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_191 = '1' THEN
        prev_stg_op32 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op32_process;

  prev_stg_op33_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op33 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_197 = '1' THEN
        prev_stg_op33 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op33_process;

  prev_stg_op34_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op34 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_203 = '1' THEN
        prev_stg_op34 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op34_process;

  prev_stg_op35_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op35 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_209 = '1' THEN
        prev_stg_op35 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op35_process;

  prev_stg_op36_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op36 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_215 = '1' THEN
        prev_stg_op36 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op36_process;

  prev_stg_op37_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op37 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_221 = '1' THEN
        prev_stg_op37 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op37_process;

  prev_stg_op38_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op38 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_227 = '1' THEN
        prev_stg_op38 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op38_process;

  prev_stg_op39_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op39 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_233 = '1' THEN
        prev_stg_op39 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op39_process;

  prev_stg_op40_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op40 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_239 = '1' THEN
        prev_stg_op40 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op40_process;

  prev_stg_op41_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prev_stg_op41 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_245 = '1' THEN
        prev_stg_op41 <= sectionopconvert;
      END IF;
    END IF; 
  END PROCESS prev_stg_op41_process;

  delay_process_section1 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section1 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section1(1) <= delay_section1(0);
        delay_section1(0) <= storage_state_in1;
      END IF;
    END IF;
  END PROCESS delay_process_section1;

  delay_process_section2 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section2 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section2(1) <= delay_section2(0);
        delay_section2(0) <= storage_state_in2;
      END IF;
    END IF;
  END PROCESS delay_process_section2;

  delay_process_section3 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section3 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section3(1) <= delay_section3(0);
        delay_section3(0) <= storage_state_in3;
      END IF;
    END IF;
  END PROCESS delay_process_section3;

  delay_process_section4 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section4 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section4(1) <= delay_section4(0);
        delay_section4(0) <= storage_state_in4;
      END IF;
    END IF;
  END PROCESS delay_process_section4;

  delay_process_section5 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section5 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section5(1) <= delay_section5(0);
        delay_section5(0) <= storage_state_in5;
      END IF;
    END IF;
  END PROCESS delay_process_section5;

  delay_process_section6 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section6 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section6(1) <= delay_section6(0);
        delay_section6(0) <= storage_state_in6;
      END IF;
    END IF;
  END PROCESS delay_process_section6;

  delay_process_section7 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section7 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section7(1) <= delay_section7(0);
        delay_section7(0) <= storage_state_in7;
      END IF;
    END IF;
  END PROCESS delay_process_section7;

  delay_process_section8 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section8 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section8(1) <= delay_section8(0);
        delay_section8(0) <= storage_state_in8;
      END IF;
    END IF;
  END PROCESS delay_process_section8;

  delay_process_section9 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section9 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section9(1) <= delay_section9(0);
        delay_section9(0) <= storage_state_in9;
      END IF;
    END IF;
  END PROCESS delay_process_section9;

  delay_process_section10 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section10 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section10(1) <= delay_section10(0);
        delay_section10(0) <= storage_state_in10;
      END IF;
    END IF;
  END PROCESS delay_process_section10;

  delay_process_section11 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section11 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section11(1) <= delay_section11(0);
        delay_section11(0) <= storage_state_in11;
      END IF;
    END IF;
  END PROCESS delay_process_section11;

  delay_process_section12 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section12 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section12(1) <= delay_section12(0);
        delay_section12(0) <= storage_state_in12;
      END IF;
    END IF;
  END PROCESS delay_process_section12;

  delay_process_section13 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section13 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section13(1) <= delay_section13(0);
        delay_section13(0) <= storage_state_in13;
      END IF;
    END IF;
  END PROCESS delay_process_section13;

  delay_process_section14 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section14 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section14(1) <= delay_section14(0);
        delay_section14(0) <= storage_state_in14;
      END IF;
    END IF;
  END PROCESS delay_process_section14;

  delay_process_section15 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section15 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section15(1) <= delay_section15(0);
        delay_section15(0) <= storage_state_in15;
      END IF;
    END IF;
  END PROCESS delay_process_section15;

  delay_process_section16 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section16 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section16(1) <= delay_section16(0);
        delay_section16(0) <= storage_state_in16;
      END IF;
    END IF;
  END PROCESS delay_process_section16;

  delay_process_section17 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section17 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section17(1) <= delay_section17(0);
        delay_section17(0) <= storage_state_in17;
      END IF;
    END IF;
  END PROCESS delay_process_section17;

  delay_process_section18 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section18 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section18(1) <= delay_section18(0);
        delay_section18(0) <= storage_state_in18;
      END IF;
    END IF;
  END PROCESS delay_process_section18;

  delay_process_section19 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section19 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section19(1) <= delay_section19(0);
        delay_section19(0) <= storage_state_in19;
      END IF;
    END IF;
  END PROCESS delay_process_section19;

  delay_process_section20 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section20 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section20(1) <= delay_section20(0);
        delay_section20(0) <= storage_state_in20;
      END IF;
    END IF;
  END PROCESS delay_process_section20;

  delay_process_section21 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section21 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section21(1) <= delay_section21(0);
        delay_section21(0) <= storage_state_in21;
      END IF;
    END IF;
  END PROCESS delay_process_section21;

  delay_process_section22 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section22 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section22(1) <= delay_section22(0);
        delay_section22(0) <= storage_state_in22;
      END IF;
    END IF;
  END PROCESS delay_process_section22;

  delay_process_section23 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section23 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section23(1) <= delay_section23(0);
        delay_section23(0) <= storage_state_in23;
      END IF;
    END IF;
  END PROCESS delay_process_section23;

  delay_process_section24 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section24 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section24(1) <= delay_section24(0);
        delay_section24(0) <= storage_state_in24;
      END IF;
    END IF;
  END PROCESS delay_process_section24;

  delay_process_section25 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section25 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section25(1) <= delay_section25(0);
        delay_section25(0) <= storage_state_in25;
      END IF;
    END IF;
  END PROCESS delay_process_section25;

  delay_process_section26 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section26 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section26(1) <= delay_section26(0);
        delay_section26(0) <= storage_state_in26;
      END IF;
    END IF;
  END PROCESS delay_process_section26;

  delay_process_section27 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section27 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section27(1) <= delay_section27(0);
        delay_section27(0) <= storage_state_in27;
      END IF;
    END IF;
  END PROCESS delay_process_section27;

  delay_process_section28 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section28 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section28(1) <= delay_section28(0);
        delay_section28(0) <= storage_state_in28;
      END IF;
    END IF;
  END PROCESS delay_process_section28;

  delay_process_section29 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section29 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section29(1) <= delay_section29(0);
        delay_section29(0) <= storage_state_in29;
      END IF;
    END IF;
  END PROCESS delay_process_section29;

  delay_process_section30 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section30 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section30(1) <= delay_section30(0);
        delay_section30(0) <= storage_state_in30;
      END IF;
    END IF;
  END PROCESS delay_process_section30;

  delay_process_section31 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section31 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section31(1) <= delay_section31(0);
        delay_section31(0) <= storage_state_in31;
      END IF;
    END IF;
  END PROCESS delay_process_section31;

  delay_process_section32 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section32 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section32(1) <= delay_section32(0);
        delay_section32(0) <= storage_state_in32;
      END IF;
    END IF;
  END PROCESS delay_process_section32;

  delay_process_section33 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section33 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section33(1) <= delay_section33(0);
        delay_section33(0) <= storage_state_in33;
      END IF;
    END IF;
  END PROCESS delay_process_section33;

  delay_process_section34 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section34 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section34(1) <= delay_section34(0);
        delay_section34(0) <= storage_state_in34;
      END IF;
    END IF;
  END PROCESS delay_process_section34;

  delay_process_section35 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section35 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section35(1) <= delay_section35(0);
        delay_section35(0) <= storage_state_in35;
      END IF;
    END IF;
  END PROCESS delay_process_section35;

  delay_process_section36 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section36 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section36(1) <= delay_section36(0);
        delay_section36(0) <= storage_state_in36;
      END IF;
    END IF;
  END PROCESS delay_process_section36;

  delay_process_section37 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section37 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section37(1) <= delay_section37(0);
        delay_section37(0) <= storage_state_in37;
      END IF;
    END IF;
  END PROCESS delay_process_section37;

  delay_process_section38 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section38 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section38(1) <= delay_section38(0);
        delay_section38(0) <= storage_state_in38;
      END IF;
    END IF;
  END PROCESS delay_process_section38;

  delay_process_section39 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section39 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section39(1) <= delay_section39(0);
        delay_section39(0) <= storage_state_in39;
      END IF;
    END IF;
  END PROCESS delay_process_section39;

  delay_process_section40 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section40 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section40(1) <= delay_section40(0);
        delay_section40(0) <= storage_state_in40;
      END IF;
    END IF;
  END PROCESS delay_process_section40;

  delay_process_section41 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section41 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section41(1) <= delay_section41(0);
        delay_section41(0) <= storage_state_in41;
      END IF;
    END IF;
  END PROCESS delay_process_section41;

  delay_process_section42 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section42 <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_0 = '1' THEN
        delay_section42(1) <= delay_section42(0);
        delay_section42(0) <= storage_state_in42;
      END IF;
    END IF;
  END PROCESS delay_process_section42;

  -- Making common precision for input and state 
  input_section1_cast <= resize(input_register, 29);

  delay_section11_cast <= resize(delay_section1(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section12_cast <= resize(delay_section1(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section1_cast <= resize(storage_state_in1(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section2_cast <= resize(prev_stg_op1(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section21_cast <= resize(delay_section2(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section22_cast <= resize(delay_section2(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section2_cast <= resize(storage_state_in2(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section3_cast <= resize(prev_stg_op2(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section31_cast <= resize(delay_section3(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section32_cast <= resize(delay_section3(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section3_cast <= resize(storage_state_in3(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section4_cast <= resize(prev_stg_op3(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section41_cast <= resize(delay_section4(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section42_cast <= resize(delay_section4(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section4_cast <= resize(storage_state_in4(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section5_cast <= resize(prev_stg_op4(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section51_cast <= resize(delay_section5(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section52_cast <= resize(delay_section5(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section5_cast <= resize(storage_state_in5(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section6_cast <= resize(prev_stg_op5(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section61_cast <= resize(delay_section6(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section62_cast <= resize(delay_section6(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section6_cast <= resize(storage_state_in6(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section7_cast <= resize(prev_stg_op6(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section71_cast <= resize(delay_section7(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section72_cast <= resize(delay_section7(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section7_cast <= resize(storage_state_in7(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section8_cast <= resize(prev_stg_op7(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section81_cast <= resize(delay_section8(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section82_cast <= resize(delay_section8(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section8_cast <= resize(storage_state_in8(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section9_cast <= resize(prev_stg_op8(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section91_cast <= resize(delay_section9(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section92_cast <= resize(delay_section9(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section9_cast <= resize(storage_state_in9(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section10_cast <= resize(prev_stg_op9(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section101_cast <= resize(delay_section10(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section102_cast <= resize(delay_section10(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section10_cast <= resize(storage_state_in10(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section11_cast <= resize(prev_stg_op10(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section111_cast <= resize(delay_section11(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section112_cast <= resize(delay_section11(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section11_cast <= resize(storage_state_in11(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section12_cast <= resize(prev_stg_op11(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section121_cast <= resize(delay_section12(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section122_cast <= resize(delay_section12(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section12_cast <= resize(storage_state_in12(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section13_cast <= resize(prev_stg_op12(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section131_cast <= resize(delay_section13(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section132_cast <= resize(delay_section13(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section13_cast <= resize(storage_state_in13(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section14_cast <= resize(prev_stg_op13(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section141_cast <= resize(delay_section14(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section142_cast <= resize(delay_section14(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section14_cast <= resize(storage_state_in14(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section15_cast <= resize(prev_stg_op14(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section151_cast <= resize(delay_section15(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section152_cast <= resize(delay_section15(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section15_cast <= resize(storage_state_in15(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section16_cast <= resize(prev_stg_op15(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section161_cast <= resize(delay_section16(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section162_cast <= resize(delay_section16(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section16_cast <= resize(storage_state_in16(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section17_cast <= resize(prev_stg_op16(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section171_cast <= resize(delay_section17(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section172_cast <= resize(delay_section17(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section17_cast <= resize(storage_state_in17(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section18_cast <= resize(prev_stg_op17(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section181_cast <= resize(delay_section18(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section182_cast <= resize(delay_section18(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section18_cast <= resize(storage_state_in18(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section19_cast <= resize(prev_stg_op18(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section191_cast <= resize(delay_section19(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section192_cast <= resize(delay_section19(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section19_cast <= resize(storage_state_in19(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section20_cast <= resize(prev_stg_op19(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section201_cast <= resize(delay_section20(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section202_cast <= resize(delay_section20(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section20_cast <= resize(storage_state_in20(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section21_cast <= resize(prev_stg_op20(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section211_cast <= resize(delay_section21(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section212_cast <= resize(delay_section21(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section21_cast <= resize(storage_state_in21(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section22_cast <= resize(prev_stg_op21(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section221_cast <= resize(delay_section22(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section222_cast <= resize(delay_section22(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section22_cast <= resize(storage_state_in22(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section23_cast <= resize(prev_stg_op22(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section231_cast <= resize(delay_section23(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section232_cast <= resize(delay_section23(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section23_cast <= resize(storage_state_in23(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section24_cast <= resize(prev_stg_op23(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section241_cast <= resize(delay_section24(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section242_cast <= resize(delay_section24(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section24_cast <= resize(storage_state_in24(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section25_cast <= resize(prev_stg_op24(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section251_cast <= resize(delay_section25(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section252_cast <= resize(delay_section25(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section25_cast <= resize(storage_state_in25(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section26_cast <= resize(prev_stg_op25(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section261_cast <= resize(delay_section26(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section262_cast <= resize(delay_section26(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section26_cast <= resize(storage_state_in26(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section27_cast <= resize(prev_stg_op26(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section271_cast <= resize(delay_section27(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section272_cast <= resize(delay_section27(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section27_cast <= resize(storage_state_in27(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section28_cast <= resize(prev_stg_op27(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section281_cast <= resize(delay_section28(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section282_cast <= resize(delay_section28(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section28_cast <= resize(storage_state_in28(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section29_cast <= resize(prev_stg_op28(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section291_cast <= resize(delay_section29(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section292_cast <= resize(delay_section29(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section29_cast <= resize(storage_state_in29(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section30_cast <= resize(prev_stg_op29(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section301_cast <= resize(delay_section30(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section302_cast <= resize(delay_section30(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section30_cast <= resize(storage_state_in30(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section31_cast <= resize(prev_stg_op30(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section311_cast <= resize(delay_section31(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section312_cast <= resize(delay_section31(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section31_cast <= resize(storage_state_in31(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section32_cast <= resize(prev_stg_op31(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section321_cast <= resize(delay_section32(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section322_cast <= resize(delay_section32(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section32_cast <= resize(storage_state_in32(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section33_cast <= resize(prev_stg_op32(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section331_cast <= resize(delay_section33(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section332_cast <= resize(delay_section33(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section33_cast <= resize(storage_state_in33(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section34_cast <= resize(prev_stg_op33(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section341_cast <= resize(delay_section34(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section342_cast <= resize(delay_section34(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section34_cast <= resize(storage_state_in34(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section35_cast <= resize(prev_stg_op34(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section351_cast <= resize(delay_section35(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section352_cast <= resize(delay_section35(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section35_cast <= resize(storage_state_in35(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section36_cast <= resize(prev_stg_op35(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section361_cast <= resize(delay_section36(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section362_cast <= resize(delay_section36(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section36_cast <= resize(storage_state_in36(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section37_cast <= resize(prev_stg_op36(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section371_cast <= resize(delay_section37(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section372_cast <= resize(delay_section37(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section37_cast <= resize(storage_state_in37(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section38_cast <= resize(prev_stg_op37(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section381_cast <= resize(delay_section38(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section382_cast <= resize(delay_section38(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section38_cast <= resize(storage_state_in38(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section39_cast <= resize(prev_stg_op38(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section391_cast <= resize(delay_section39(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section392_cast <= resize(delay_section39(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section39_cast <= resize(storage_state_in39(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section40_cast <= resize(prev_stg_op39(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section401_cast <= resize(delay_section40(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section402_cast <= resize(delay_section40(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section40_cast <= resize(storage_state_in40(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section41_cast <= resize(prev_stg_op40(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section411_cast <= resize(delay_section41(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section412_cast <= resize(delay_section41(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section41_cast <= resize(storage_state_in41(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  input_section42_cast <= resize(prev_stg_op41(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0', 29);

  delay_section421_cast <= resize(delay_section42(0)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  delay_section422_cast <= resize(delay_section42(1)(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  storage_in_section42_cast <= resize(storage_state_in42(15 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);

  inputmux_section_1 <= input_section1_cast WHEN ( cur_count = to_unsigned(0, 8) ) ELSE
                             delay_section11_cast WHEN ( cur_count = to_unsigned(1, 8) ) ELSE
                             delay_section12_cast WHEN ( cur_count = to_unsigned(2, 8) ) ELSE
                             storage_in_section1_cast WHEN ( cur_count = to_unsigned(3, 8) ) ELSE
                             delay_section11_cast WHEN ( cur_count = to_unsigned(4, 8) ) ELSE
                             delay_section12_cast WHEN ( cur_count = to_unsigned(5, 8) ) ELSE
                             input_section2_cast WHEN ( cur_count = to_unsigned(6, 8) ) ELSE
                             delay_section21_cast WHEN ( cur_count = to_unsigned(7, 8) ) ELSE
                             delay_section22_cast WHEN ( cur_count = to_unsigned(8, 8) ) ELSE
                             storage_in_section2_cast WHEN ( cur_count = to_unsigned(9, 8) ) ELSE
                             delay_section21_cast WHEN ( cur_count = to_unsigned(10, 8) ) ELSE
                             delay_section22_cast WHEN ( cur_count = to_unsigned(11, 8) ) ELSE
                             input_section3_cast WHEN ( cur_count = to_unsigned(12, 8) ) ELSE
                             delay_section31_cast WHEN ( cur_count = to_unsigned(13, 8) ) ELSE
                             delay_section32_cast WHEN ( cur_count = to_unsigned(14, 8) ) ELSE
                             storage_in_section3_cast WHEN ( cur_count = to_unsigned(15, 8) ) ELSE
                             delay_section31_cast WHEN ( cur_count = to_unsigned(16, 8) ) ELSE
                             delay_section32_cast WHEN ( cur_count = to_unsigned(17, 8) ) ELSE
                             input_section4_cast WHEN ( cur_count = to_unsigned(18, 8) ) ELSE
                             delay_section41_cast WHEN ( cur_count = to_unsigned(19, 8) ) ELSE
                             delay_section42_cast WHEN ( cur_count = to_unsigned(20, 8) ) ELSE
                             storage_in_section4_cast WHEN ( cur_count = to_unsigned(21, 8) ) ELSE
                             delay_section41_cast WHEN ( cur_count = to_unsigned(22, 8) ) ELSE
                             delay_section42_cast WHEN ( cur_count = to_unsigned(23, 8) ) ELSE
                             input_section5_cast WHEN ( cur_count = to_unsigned(24, 8) ) ELSE
                             delay_section51_cast WHEN ( cur_count = to_unsigned(25, 8) ) ELSE
                             delay_section52_cast WHEN ( cur_count = to_unsigned(26, 8) ) ELSE
                             storage_in_section5_cast WHEN ( cur_count = to_unsigned(27, 8) ) ELSE
                             delay_section51_cast WHEN ( cur_count = to_unsigned(28, 8) ) ELSE
                             delay_section52_cast WHEN ( cur_count = to_unsigned(29, 8) ) ELSE
                             input_section6_cast WHEN ( cur_count = to_unsigned(30, 8) ) ELSE
                             delay_section61_cast WHEN ( cur_count = to_unsigned(31, 8) ) ELSE
                             delay_section62_cast WHEN ( cur_count = to_unsigned(32, 8) ) ELSE
                             storage_in_section6_cast WHEN ( cur_count = to_unsigned(33, 8) ) ELSE
                             delay_section61_cast WHEN ( cur_count = to_unsigned(34, 8) ) ELSE
                             delay_section62_cast WHEN ( cur_count = to_unsigned(35, 8) ) ELSE
                             input_section7_cast WHEN ( cur_count = to_unsigned(36, 8) ) ELSE
                             delay_section71_cast WHEN ( cur_count = to_unsigned(37, 8) ) ELSE
                             delay_section72_cast WHEN ( cur_count = to_unsigned(38, 8) ) ELSE
                             storage_in_section7_cast WHEN ( cur_count = to_unsigned(39, 8) ) ELSE
                             delay_section71_cast WHEN ( cur_count = to_unsigned(40, 8) ) ELSE
                             delay_section72_cast WHEN ( cur_count = to_unsigned(41, 8) ) ELSE
                             input_section8_cast WHEN ( cur_count = to_unsigned(42, 8) ) ELSE
                             delay_section81_cast WHEN ( cur_count = to_unsigned(43, 8) ) ELSE
                             delay_section82_cast WHEN ( cur_count = to_unsigned(44, 8) ) ELSE
                             storage_in_section8_cast WHEN ( cur_count = to_unsigned(45, 8) ) ELSE
                             delay_section81_cast WHEN ( cur_count = to_unsigned(46, 8) ) ELSE
                             delay_section82_cast WHEN ( cur_count = to_unsigned(47, 8) ) ELSE
                             input_section9_cast WHEN ( cur_count = to_unsigned(48, 8) ) ELSE
                             delay_section91_cast WHEN ( cur_count = to_unsigned(49, 8) ) ELSE
                             delay_section92_cast WHEN ( cur_count = to_unsigned(50, 8) ) ELSE
                             storage_in_section9_cast WHEN ( cur_count = to_unsigned(51, 8) ) ELSE
                             delay_section91_cast WHEN ( cur_count = to_unsigned(52, 8) ) ELSE
                             delay_section92_cast WHEN ( cur_count = to_unsigned(53, 8) ) ELSE
                             input_section10_cast WHEN ( cur_count = to_unsigned(54, 8) ) ELSE
                             delay_section101_cast WHEN ( cur_count = to_unsigned(55, 8) ) ELSE
                             delay_section102_cast WHEN ( cur_count = to_unsigned(56, 8) ) ELSE
                             storage_in_section10_cast WHEN ( cur_count = to_unsigned(57, 8) ) ELSE
                             delay_section101_cast WHEN ( cur_count = to_unsigned(58, 8) ) ELSE
                             delay_section102_cast WHEN ( cur_count = to_unsigned(59, 8) ) ELSE
                             input_section11_cast WHEN ( cur_count = to_unsigned(60, 8) ) ELSE
                             delay_section111_cast WHEN ( cur_count = to_unsigned(61, 8) ) ELSE
                             delay_section112_cast WHEN ( cur_count = to_unsigned(62, 8) ) ELSE
                             storage_in_section11_cast WHEN ( cur_count = to_unsigned(63, 8) ) ELSE
                             delay_section111_cast WHEN ( cur_count = to_unsigned(64, 8) ) ELSE
                             delay_section112_cast WHEN ( cur_count = to_unsigned(65, 8) ) ELSE
                             input_section12_cast WHEN ( cur_count = to_unsigned(66, 8) ) ELSE
                             delay_section121_cast WHEN ( cur_count = to_unsigned(67, 8) ) ELSE
                             delay_section122_cast WHEN ( cur_count = to_unsigned(68, 8) ) ELSE
                             storage_in_section12_cast WHEN ( cur_count = to_unsigned(69, 8) ) ELSE
                             delay_section121_cast WHEN ( cur_count = to_unsigned(70, 8) ) ELSE
                             delay_section122_cast WHEN ( cur_count = to_unsigned(71, 8) ) ELSE
                             input_section13_cast WHEN ( cur_count = to_unsigned(72, 8) ) ELSE
                             delay_section131_cast WHEN ( cur_count = to_unsigned(73, 8) ) ELSE
                             delay_section132_cast WHEN ( cur_count = to_unsigned(74, 8) ) ELSE
                             storage_in_section13_cast WHEN ( cur_count = to_unsigned(75, 8) ) ELSE
                             delay_section131_cast WHEN ( cur_count = to_unsigned(76, 8) ) ELSE
                             delay_section132_cast WHEN ( cur_count = to_unsigned(77, 8) ) ELSE
                             input_section14_cast WHEN ( cur_count = to_unsigned(78, 8) ) ELSE
                             delay_section141_cast WHEN ( cur_count = to_unsigned(79, 8) ) ELSE
                             delay_section142_cast WHEN ( cur_count = to_unsigned(80, 8) ) ELSE
                             storage_in_section14_cast WHEN ( cur_count = to_unsigned(81, 8) ) ELSE
                             delay_section141_cast WHEN ( cur_count = to_unsigned(82, 8) ) ELSE
                             delay_section142_cast WHEN ( cur_count = to_unsigned(83, 8) ) ELSE
                             input_section15_cast WHEN ( cur_count = to_unsigned(84, 8) ) ELSE
                             delay_section151_cast WHEN ( cur_count = to_unsigned(85, 8) ) ELSE
                             delay_section152_cast WHEN ( cur_count = to_unsigned(86, 8) ) ELSE
                             storage_in_section15_cast WHEN ( cur_count = to_unsigned(87, 8) ) ELSE
                             delay_section151_cast WHEN ( cur_count = to_unsigned(88, 8) ) ELSE
                             delay_section152_cast WHEN ( cur_count = to_unsigned(89, 8) ) ELSE
                             input_section16_cast WHEN ( cur_count = to_unsigned(90, 8) ) ELSE
                             delay_section161_cast WHEN ( cur_count = to_unsigned(91, 8) ) ELSE
                             delay_section162_cast WHEN ( cur_count = to_unsigned(92, 8) ) ELSE
                             storage_in_section16_cast WHEN ( cur_count = to_unsigned(93, 8) ) ELSE
                             delay_section161_cast WHEN ( cur_count = to_unsigned(94, 8) ) ELSE
                             delay_section162_cast WHEN ( cur_count = to_unsigned(95, 8) ) ELSE
                             input_section17_cast WHEN ( cur_count = to_unsigned(96, 8) ) ELSE
                             delay_section171_cast WHEN ( cur_count = to_unsigned(97, 8) ) ELSE
                             delay_section172_cast WHEN ( cur_count = to_unsigned(98, 8) ) ELSE
                             storage_in_section17_cast WHEN ( cur_count = to_unsigned(99, 8) ) ELSE
                             delay_section171_cast WHEN ( cur_count = to_unsigned(100, 8) ) ELSE
                             delay_section172_cast WHEN ( cur_count = to_unsigned(101, 8) ) ELSE
                             input_section18_cast WHEN ( cur_count = to_unsigned(102, 8) ) ELSE
                             delay_section181_cast WHEN ( cur_count = to_unsigned(103, 8) ) ELSE
                             delay_section182_cast WHEN ( cur_count = to_unsigned(104, 8) ) ELSE
                             storage_in_section18_cast WHEN ( cur_count = to_unsigned(105, 8) ) ELSE
                             delay_section181_cast WHEN ( cur_count = to_unsigned(106, 8) ) ELSE
                             delay_section182_cast WHEN ( cur_count = to_unsigned(107, 8) ) ELSE
                             input_section19_cast WHEN ( cur_count = to_unsigned(108, 8) ) ELSE
                             delay_section191_cast WHEN ( cur_count = to_unsigned(109, 8) ) ELSE
                             delay_section192_cast WHEN ( cur_count = to_unsigned(110, 8) ) ELSE
                             storage_in_section19_cast WHEN ( cur_count = to_unsigned(111, 8) ) ELSE
                             delay_section191_cast WHEN ( cur_count = to_unsigned(112, 8) ) ELSE
                             delay_section192_cast WHEN ( cur_count = to_unsigned(113, 8) ) ELSE
                             input_section20_cast WHEN ( cur_count = to_unsigned(114, 8) ) ELSE
                             delay_section201_cast WHEN ( cur_count = to_unsigned(115, 8) ) ELSE
                             delay_section202_cast WHEN ( cur_count = to_unsigned(116, 8) ) ELSE
                             storage_in_section20_cast WHEN ( cur_count = to_unsigned(117, 8) ) ELSE
                             delay_section201_cast WHEN ( cur_count = to_unsigned(118, 8) ) ELSE
                             delay_section202_cast WHEN ( cur_count = to_unsigned(119, 8) ) ELSE
                             input_section21_cast WHEN ( cur_count = to_unsigned(120, 8) ) ELSE
                             delay_section211_cast WHEN ( cur_count = to_unsigned(121, 8) ) ELSE
                             delay_section212_cast WHEN ( cur_count = to_unsigned(122, 8) ) ELSE
                             storage_in_section21_cast WHEN ( cur_count = to_unsigned(123, 8) ) ELSE
                             delay_section211_cast WHEN ( cur_count = to_unsigned(124, 8) ) ELSE
                             delay_section212_cast WHEN ( cur_count = to_unsigned(125, 8) ) ELSE
                             input_section22_cast WHEN ( cur_count = to_unsigned(126, 8) ) ELSE
                             delay_section221_cast WHEN ( cur_count = to_unsigned(127, 8) ) ELSE
                             delay_section222_cast WHEN ( cur_count = to_unsigned(128, 8) ) ELSE
                             storage_in_section22_cast WHEN ( cur_count = to_unsigned(129, 8) ) ELSE
                             delay_section221_cast WHEN ( cur_count = to_unsigned(130, 8) ) ELSE
                             delay_section222_cast WHEN ( cur_count = to_unsigned(131, 8) ) ELSE
                             input_section23_cast WHEN ( cur_count = to_unsigned(132, 8) ) ELSE
                             delay_section231_cast WHEN ( cur_count = to_unsigned(133, 8) ) ELSE
                             delay_section232_cast WHEN ( cur_count = to_unsigned(134, 8) ) ELSE
                             storage_in_section23_cast WHEN ( cur_count = to_unsigned(135, 8) ) ELSE
                             delay_section231_cast WHEN ( cur_count = to_unsigned(136, 8) ) ELSE
                             delay_section232_cast WHEN ( cur_count = to_unsigned(137, 8) ) ELSE
                             input_section24_cast WHEN ( cur_count = to_unsigned(138, 8) ) ELSE
                             delay_section241_cast WHEN ( cur_count = to_unsigned(139, 8) ) ELSE
                             delay_section242_cast WHEN ( cur_count = to_unsigned(140, 8) ) ELSE
                             storage_in_section24_cast WHEN ( cur_count = to_unsigned(141, 8) ) ELSE
                             delay_section241_cast WHEN ( cur_count = to_unsigned(142, 8) ) ELSE
                             delay_section242_cast WHEN ( cur_count = to_unsigned(143, 8) ) ELSE
                             input_section25_cast WHEN ( cur_count = to_unsigned(144, 8) ) ELSE
                             delay_section251_cast WHEN ( cur_count = to_unsigned(145, 8) ) ELSE
                             delay_section252_cast WHEN ( cur_count = to_unsigned(146, 8) ) ELSE
                             storage_in_section25_cast WHEN ( cur_count = to_unsigned(147, 8) ) ELSE
                             delay_section251_cast WHEN ( cur_count = to_unsigned(148, 8) ) ELSE
                             delay_section252_cast WHEN ( cur_count = to_unsigned(149, 8) ) ELSE
                             input_section26_cast WHEN ( cur_count = to_unsigned(150, 8) ) ELSE
                             delay_section261_cast WHEN ( cur_count = to_unsigned(151, 8) ) ELSE
                             delay_section262_cast WHEN ( cur_count = to_unsigned(152, 8) ) ELSE
                             storage_in_section26_cast WHEN ( cur_count = to_unsigned(153, 8) ) ELSE
                             delay_section261_cast WHEN ( cur_count = to_unsigned(154, 8) ) ELSE
                             delay_section262_cast WHEN ( cur_count = to_unsigned(155, 8) ) ELSE
                             input_section27_cast WHEN ( cur_count = to_unsigned(156, 8) ) ELSE
                             delay_section271_cast WHEN ( cur_count = to_unsigned(157, 8) ) ELSE
                             delay_section272_cast WHEN ( cur_count = to_unsigned(158, 8) ) ELSE
                             storage_in_section27_cast WHEN ( cur_count = to_unsigned(159, 8) ) ELSE
                             delay_section271_cast WHEN ( cur_count = to_unsigned(160, 8) ) ELSE
                             delay_section272_cast WHEN ( cur_count = to_unsigned(161, 8) ) ELSE
                             input_section28_cast WHEN ( cur_count = to_unsigned(162, 8) ) ELSE
                             delay_section281_cast WHEN ( cur_count = to_unsigned(163, 8) ) ELSE
                             delay_section282_cast WHEN ( cur_count = to_unsigned(164, 8) ) ELSE
                             storage_in_section28_cast WHEN ( cur_count = to_unsigned(165, 8) ) ELSE
                             delay_section281_cast WHEN ( cur_count = to_unsigned(166, 8) ) ELSE
                             delay_section282_cast WHEN ( cur_count = to_unsigned(167, 8) ) ELSE
                             input_section29_cast WHEN ( cur_count = to_unsigned(168, 8) ) ELSE
                             delay_section291_cast WHEN ( cur_count = to_unsigned(169, 8) ) ELSE
                             delay_section292_cast WHEN ( cur_count = to_unsigned(170, 8) ) ELSE
                             storage_in_section29_cast WHEN ( cur_count = to_unsigned(171, 8) ) ELSE
                             delay_section291_cast WHEN ( cur_count = to_unsigned(172, 8) ) ELSE
                             delay_section292_cast WHEN ( cur_count = to_unsigned(173, 8) ) ELSE
                             input_section30_cast WHEN ( cur_count = to_unsigned(174, 8) ) ELSE
                             delay_section301_cast WHEN ( cur_count = to_unsigned(175, 8) ) ELSE
                             delay_section302_cast WHEN ( cur_count = to_unsigned(176, 8) ) ELSE
                             storage_in_section30_cast WHEN ( cur_count = to_unsigned(177, 8) ) ELSE
                             delay_section301_cast WHEN ( cur_count = to_unsigned(178, 8) ) ELSE
                             delay_section302_cast WHEN ( cur_count = to_unsigned(179, 8) ) ELSE
                             input_section31_cast WHEN ( cur_count = to_unsigned(180, 8) ) ELSE
                             delay_section311_cast WHEN ( cur_count = to_unsigned(181, 8) ) ELSE
                             delay_section312_cast WHEN ( cur_count = to_unsigned(182, 8) ) ELSE
                             storage_in_section31_cast WHEN ( cur_count = to_unsigned(183, 8) ) ELSE
                             delay_section311_cast WHEN ( cur_count = to_unsigned(184, 8) ) ELSE
                             delay_section312_cast WHEN ( cur_count = to_unsigned(185, 8) ) ELSE
                             input_section32_cast WHEN ( cur_count = to_unsigned(186, 8) ) ELSE
                             delay_section321_cast WHEN ( cur_count = to_unsigned(187, 8) ) ELSE
                             delay_section322_cast WHEN ( cur_count = to_unsigned(188, 8) ) ELSE
                             storage_in_section32_cast WHEN ( cur_count = to_unsigned(189, 8) ) ELSE
                             delay_section321_cast WHEN ( cur_count = to_unsigned(190, 8) ) ELSE
                             delay_section322_cast WHEN ( cur_count = to_unsigned(191, 8) ) ELSE
                             input_section33_cast WHEN ( cur_count = to_unsigned(192, 8) ) ELSE
                             delay_section331_cast WHEN ( cur_count = to_unsigned(193, 8) ) ELSE
                             delay_section332_cast WHEN ( cur_count = to_unsigned(194, 8) ) ELSE
                             storage_in_section33_cast WHEN ( cur_count = to_unsigned(195, 8) ) ELSE
                             delay_section331_cast WHEN ( cur_count = to_unsigned(196, 8) ) ELSE
                             delay_section332_cast WHEN ( cur_count = to_unsigned(197, 8) ) ELSE
                             input_section34_cast WHEN ( cur_count = to_unsigned(198, 8) ) ELSE
                             delay_section341_cast WHEN ( cur_count = to_unsigned(199, 8) ) ELSE
                             delay_section342_cast WHEN ( cur_count = to_unsigned(200, 8) ) ELSE
                             storage_in_section34_cast WHEN ( cur_count = to_unsigned(201, 8) ) ELSE
                             delay_section341_cast WHEN ( cur_count = to_unsigned(202, 8) ) ELSE
                             delay_section342_cast WHEN ( cur_count = to_unsigned(203, 8) ) ELSE
                             input_section35_cast WHEN ( cur_count = to_unsigned(204, 8) ) ELSE
                             delay_section351_cast WHEN ( cur_count = to_unsigned(205, 8) ) ELSE
                             delay_section352_cast WHEN ( cur_count = to_unsigned(206, 8) ) ELSE
                             storage_in_section35_cast WHEN ( cur_count = to_unsigned(207, 8) ) ELSE
                             delay_section351_cast WHEN ( cur_count = to_unsigned(208, 8) ) ELSE
                             delay_section352_cast WHEN ( cur_count = to_unsigned(209, 8) ) ELSE
                             input_section36_cast WHEN ( cur_count = to_unsigned(210, 8) ) ELSE
                             delay_section361_cast WHEN ( cur_count = to_unsigned(211, 8) ) ELSE
                             delay_section362_cast WHEN ( cur_count = to_unsigned(212, 8) ) ELSE
                             storage_in_section36_cast WHEN ( cur_count = to_unsigned(213, 8) ) ELSE
                             delay_section361_cast WHEN ( cur_count = to_unsigned(214, 8) ) ELSE
                             delay_section362_cast WHEN ( cur_count = to_unsigned(215, 8) ) ELSE
                             input_section37_cast WHEN ( cur_count = to_unsigned(216, 8) ) ELSE
                             delay_section371_cast WHEN ( cur_count = to_unsigned(217, 8) ) ELSE
                             delay_section372_cast WHEN ( cur_count = to_unsigned(218, 8) ) ELSE
                             storage_in_section37_cast WHEN ( cur_count = to_unsigned(219, 8) ) ELSE
                             delay_section371_cast WHEN ( cur_count = to_unsigned(220, 8) ) ELSE
                             delay_section372_cast WHEN ( cur_count = to_unsigned(221, 8) ) ELSE
                             input_section38_cast WHEN ( cur_count = to_unsigned(222, 8) ) ELSE
                             delay_section381_cast WHEN ( cur_count = to_unsigned(223, 8) ) ELSE
                             delay_section382_cast WHEN ( cur_count = to_unsigned(224, 8) ) ELSE
                             storage_in_section38_cast WHEN ( cur_count = to_unsigned(225, 8) ) ELSE
                             delay_section381_cast WHEN ( cur_count = to_unsigned(226, 8) ) ELSE
                             delay_section382_cast WHEN ( cur_count = to_unsigned(227, 8) ) ELSE
                             input_section39_cast WHEN ( cur_count = to_unsigned(228, 8) ) ELSE
                             delay_section391_cast WHEN ( cur_count = to_unsigned(229, 8) ) ELSE
                             delay_section392_cast WHEN ( cur_count = to_unsigned(230, 8) ) ELSE
                             storage_in_section39_cast WHEN ( cur_count = to_unsigned(231, 8) ) ELSE
                             delay_section391_cast WHEN ( cur_count = to_unsigned(232, 8) ) ELSE
                             delay_section392_cast WHEN ( cur_count = to_unsigned(233, 8) ) ELSE
                             input_section40_cast WHEN ( cur_count = to_unsigned(234, 8) ) ELSE
                             delay_section401_cast WHEN ( cur_count = to_unsigned(235, 8) ) ELSE
                             delay_section402_cast WHEN ( cur_count = to_unsigned(236, 8) ) ELSE
                             storage_in_section40_cast WHEN ( cur_count = to_unsigned(237, 8) ) ELSE
                             delay_section401_cast WHEN ( cur_count = to_unsigned(238, 8) ) ELSE
                             delay_section402_cast WHEN ( cur_count = to_unsigned(239, 8) ) ELSE
                             input_section41_cast WHEN ( cur_count = to_unsigned(240, 8) ) ELSE
                             delay_section411_cast WHEN ( cur_count = to_unsigned(241, 8) ) ELSE
                             delay_section412_cast WHEN ( cur_count = to_unsigned(242, 8) ) ELSE
                             storage_in_section41_cast WHEN ( cur_count = to_unsigned(243, 8) ) ELSE
                             delay_section411_cast WHEN ( cur_count = to_unsigned(244, 8) ) ELSE
                             delay_section412_cast WHEN ( cur_count = to_unsigned(245, 8) ) ELSE
                             input_section42_cast WHEN ( cur_count = to_unsigned(246, 8) ) ELSE
                             delay_section421_cast WHEN ( cur_count = to_unsigned(247, 8) ) ELSE
                             delay_section422_cast WHEN ( cur_count = to_unsigned(248, 8) ) ELSE
                             storage_in_section42_cast WHEN ( cur_count = to_unsigned(249, 8) ) ELSE
                             delay_section421_cast WHEN ( cur_count = to_unsigned(250, 8) ) ELSE
                             delay_section422_cast;

  coeffmux_section_1 <= scaleconst1 WHEN ( cur_count = to_unsigned(0, 8) ) ELSE
                             coeff_a2_section1 WHEN ( cur_count = to_unsigned(1, 8) ) ELSE
                             coeff_a3_section1 WHEN ( cur_count = to_unsigned(2, 8) ) ELSE
                             coeff_b1_section1 WHEN ( cur_count = to_unsigned(3, 8) ) ELSE
                             coeff_b2_section1 WHEN ( cur_count = to_unsigned(4, 8) ) ELSE
                             coeff_b3_section1 WHEN ( cur_count = to_unsigned(5, 8) ) ELSE
                             scaleconst2 WHEN ( cur_count = to_unsigned(6, 8) ) ELSE
                             coeff_a2_section2 WHEN ( cur_count = to_unsigned(7, 8) ) ELSE
                             coeff_a3_section2 WHEN ( cur_count = to_unsigned(8, 8) ) ELSE
                             coeff_b1_section2 WHEN ( cur_count = to_unsigned(9, 8) ) ELSE
                             coeff_b2_section2 WHEN ( cur_count = to_unsigned(10, 8) ) ELSE
                             coeff_b3_section2 WHEN ( cur_count = to_unsigned(11, 8) ) ELSE
                             scaleconst3 WHEN ( cur_count = to_unsigned(12, 8) ) ELSE
                             coeff_a2_section3 WHEN ( cur_count = to_unsigned(13, 8) ) ELSE
                             coeff_a3_section3 WHEN ( cur_count = to_unsigned(14, 8) ) ELSE
                             coeff_b1_section3 WHEN ( cur_count = to_unsigned(15, 8) ) ELSE
                             coeff_b2_section3 WHEN ( cur_count = to_unsigned(16, 8) ) ELSE
                             coeff_b3_section3 WHEN ( cur_count = to_unsigned(17, 8) ) ELSE
                             scaleconst4 WHEN ( cur_count = to_unsigned(18, 8) ) ELSE
                             coeff_a2_section4 WHEN ( cur_count = to_unsigned(19, 8) ) ELSE
                             coeff_a3_section4 WHEN ( cur_count = to_unsigned(20, 8) ) ELSE
                             coeff_b1_section4 WHEN ( cur_count = to_unsigned(21, 8) ) ELSE
                             coeff_b2_section4 WHEN ( cur_count = to_unsigned(22, 8) ) ELSE
                             coeff_b3_section4 WHEN ( cur_count = to_unsigned(23, 8) ) ELSE
                             scaleconst5 WHEN ( cur_count = to_unsigned(24, 8) ) ELSE
                             coeff_a2_section5 WHEN ( cur_count = to_unsigned(25, 8) ) ELSE
                             coeff_a3_section5 WHEN ( cur_count = to_unsigned(26, 8) ) ELSE
                             coeff_b1_section5 WHEN ( cur_count = to_unsigned(27, 8) ) ELSE
                             coeff_b2_section5 WHEN ( cur_count = to_unsigned(28, 8) ) ELSE
                             coeff_b3_section5 WHEN ( cur_count = to_unsigned(29, 8) ) ELSE
                             scaleconst6 WHEN ( cur_count = to_unsigned(30, 8) ) ELSE
                             coeff_a2_section6 WHEN ( cur_count = to_unsigned(31, 8) ) ELSE
                             coeff_a3_section6 WHEN ( cur_count = to_unsigned(32, 8) ) ELSE
                             coeff_b1_section6 WHEN ( cur_count = to_unsigned(33, 8) ) ELSE
                             coeff_b2_section6 WHEN ( cur_count = to_unsigned(34, 8) ) ELSE
                             coeff_b3_section6 WHEN ( cur_count = to_unsigned(35, 8) ) ELSE
                             scaleconst7 WHEN ( cur_count = to_unsigned(36, 8) ) ELSE
                             coeff_a2_section7 WHEN ( cur_count = to_unsigned(37, 8) ) ELSE
                             coeff_a3_section7 WHEN ( cur_count = to_unsigned(38, 8) ) ELSE
                             coeff_b1_section7 WHEN ( cur_count = to_unsigned(39, 8) ) ELSE
                             coeff_b2_section7 WHEN ( cur_count = to_unsigned(40, 8) ) ELSE
                             coeff_b3_section7 WHEN ( cur_count = to_unsigned(41, 8) ) ELSE
                             scaleconst8 WHEN ( cur_count = to_unsigned(42, 8) ) ELSE
                             coeff_a2_section8 WHEN ( cur_count = to_unsigned(43, 8) ) ELSE
                             coeff_a3_section8 WHEN ( cur_count = to_unsigned(44, 8) ) ELSE
                             coeff_b1_section8 WHEN ( cur_count = to_unsigned(45, 8) ) ELSE
                             coeff_b2_section8 WHEN ( cur_count = to_unsigned(46, 8) ) ELSE
                             coeff_b3_section8 WHEN ( cur_count = to_unsigned(47, 8) ) ELSE
                             scaleconst9 WHEN ( cur_count = to_unsigned(48, 8) ) ELSE
                             coeff_a2_section9 WHEN ( cur_count = to_unsigned(49, 8) ) ELSE
                             coeff_a3_section9 WHEN ( cur_count = to_unsigned(50, 8) ) ELSE
                             coeff_b1_section9 WHEN ( cur_count = to_unsigned(51, 8) ) ELSE
                             coeff_b2_section9 WHEN ( cur_count = to_unsigned(52, 8) ) ELSE
                             coeff_b3_section9 WHEN ( cur_count = to_unsigned(53, 8) ) ELSE
                             scaleconst10 WHEN ( cur_count = to_unsigned(54, 8) ) ELSE
                             coeff_a2_section10 WHEN ( cur_count = to_unsigned(55, 8) ) ELSE
                             coeff_a3_section10 WHEN ( cur_count = to_unsigned(56, 8) ) ELSE
                             coeff_b1_section10 WHEN ( cur_count = to_unsigned(57, 8) ) ELSE
                             coeff_b2_section10 WHEN ( cur_count = to_unsigned(58, 8) ) ELSE
                             coeff_b3_section10 WHEN ( cur_count = to_unsigned(59, 8) ) ELSE
                             scaleconst11 WHEN ( cur_count = to_unsigned(60, 8) ) ELSE
                             coeff_a2_section11 WHEN ( cur_count = to_unsigned(61, 8) ) ELSE
                             coeff_a3_section11 WHEN ( cur_count = to_unsigned(62, 8) ) ELSE
                             coeff_b1_section11 WHEN ( cur_count = to_unsigned(63, 8) ) ELSE
                             coeff_b2_section11 WHEN ( cur_count = to_unsigned(64, 8) ) ELSE
                             coeff_b3_section11 WHEN ( cur_count = to_unsigned(65, 8) ) ELSE
                             scaleconst12 WHEN ( cur_count = to_unsigned(66, 8) ) ELSE
                             coeff_a2_section12 WHEN ( cur_count = to_unsigned(67, 8) ) ELSE
                             coeff_a3_section12 WHEN ( cur_count = to_unsigned(68, 8) ) ELSE
                             coeff_b1_section12 WHEN ( cur_count = to_unsigned(69, 8) ) ELSE
                             coeff_b2_section12 WHEN ( cur_count = to_unsigned(70, 8) ) ELSE
                             coeff_b3_section12 WHEN ( cur_count = to_unsigned(71, 8) ) ELSE
                             scaleconst13 WHEN ( cur_count = to_unsigned(72, 8) ) ELSE
                             coeff_a2_section13 WHEN ( cur_count = to_unsigned(73, 8) ) ELSE
                             coeff_a3_section13 WHEN ( cur_count = to_unsigned(74, 8) ) ELSE
                             coeff_b1_section13 WHEN ( cur_count = to_unsigned(75, 8) ) ELSE
                             coeff_b2_section13 WHEN ( cur_count = to_unsigned(76, 8) ) ELSE
                             coeff_b3_section13 WHEN ( cur_count = to_unsigned(77, 8) ) ELSE
                             scaleconst14 WHEN ( cur_count = to_unsigned(78, 8) ) ELSE
                             coeff_a2_section14 WHEN ( cur_count = to_unsigned(79, 8) ) ELSE
                             coeff_a3_section14 WHEN ( cur_count = to_unsigned(80, 8) ) ELSE
                             coeff_b1_section14 WHEN ( cur_count = to_unsigned(81, 8) ) ELSE
                             coeff_b2_section14 WHEN ( cur_count = to_unsigned(82, 8) ) ELSE
                             coeff_b3_section14 WHEN ( cur_count = to_unsigned(83, 8) ) ELSE
                             scaleconst15 WHEN ( cur_count = to_unsigned(84, 8) ) ELSE
                             coeff_a2_section15 WHEN ( cur_count = to_unsigned(85, 8) ) ELSE
                             coeff_a3_section15 WHEN ( cur_count = to_unsigned(86, 8) ) ELSE
                             coeff_b1_section15 WHEN ( cur_count = to_unsigned(87, 8) ) ELSE
                             coeff_b2_section15 WHEN ( cur_count = to_unsigned(88, 8) ) ELSE
                             coeff_b3_section15 WHEN ( cur_count = to_unsigned(89, 8) ) ELSE
                             scaleconst16 WHEN ( cur_count = to_unsigned(90, 8) ) ELSE
                             coeff_a2_section16 WHEN ( cur_count = to_unsigned(91, 8) ) ELSE
                             coeff_a3_section16 WHEN ( cur_count = to_unsigned(92, 8) ) ELSE
                             coeff_b1_section16 WHEN ( cur_count = to_unsigned(93, 8) ) ELSE
                             coeff_b2_section16 WHEN ( cur_count = to_unsigned(94, 8) ) ELSE
                             coeff_b3_section16 WHEN ( cur_count = to_unsigned(95, 8) ) ELSE
                             scaleconst17 WHEN ( cur_count = to_unsigned(96, 8) ) ELSE
                             coeff_a2_section17 WHEN ( cur_count = to_unsigned(97, 8) ) ELSE
                             coeff_a3_section17 WHEN ( cur_count = to_unsigned(98, 8) ) ELSE
                             coeff_b1_section17 WHEN ( cur_count = to_unsigned(99, 8) ) ELSE
                             coeff_b2_section17 WHEN ( cur_count = to_unsigned(100, 8) ) ELSE
                             coeff_b3_section17 WHEN ( cur_count = to_unsigned(101, 8) ) ELSE
                             scaleconst18 WHEN ( cur_count = to_unsigned(102, 8) ) ELSE
                             coeff_a2_section18 WHEN ( cur_count = to_unsigned(103, 8) ) ELSE
                             coeff_a3_section18 WHEN ( cur_count = to_unsigned(104, 8) ) ELSE
                             coeff_b1_section18 WHEN ( cur_count = to_unsigned(105, 8) ) ELSE
                             coeff_b2_section18 WHEN ( cur_count = to_unsigned(106, 8) ) ELSE
                             coeff_b3_section18 WHEN ( cur_count = to_unsigned(107, 8) ) ELSE
                             scaleconst19 WHEN ( cur_count = to_unsigned(108, 8) ) ELSE
                             coeff_a2_section19 WHEN ( cur_count = to_unsigned(109, 8) ) ELSE
                             coeff_a3_section19 WHEN ( cur_count = to_unsigned(110, 8) ) ELSE
                             coeff_b1_section19 WHEN ( cur_count = to_unsigned(111, 8) ) ELSE
                             coeff_b2_section19 WHEN ( cur_count = to_unsigned(112, 8) ) ELSE
                             coeff_b3_section19 WHEN ( cur_count = to_unsigned(113, 8) ) ELSE
                             scaleconst20 WHEN ( cur_count = to_unsigned(114, 8) ) ELSE
                             coeff_a2_section20 WHEN ( cur_count = to_unsigned(115, 8) ) ELSE
                             coeff_a3_section20 WHEN ( cur_count = to_unsigned(116, 8) ) ELSE
                             coeff_b1_section20 WHEN ( cur_count = to_unsigned(117, 8) ) ELSE
                             coeff_b2_section20 WHEN ( cur_count = to_unsigned(118, 8) ) ELSE
                             coeff_b3_section20 WHEN ( cur_count = to_unsigned(119, 8) ) ELSE
                             scaleconst21 WHEN ( cur_count = to_unsigned(120, 8) ) ELSE
                             coeff_a2_section21 WHEN ( cur_count = to_unsigned(121, 8) ) ELSE
                             coeff_a3_section21 WHEN ( cur_count = to_unsigned(122, 8) ) ELSE
                             coeff_b1_section21 WHEN ( cur_count = to_unsigned(123, 8) ) ELSE
                             coeff_b2_section21 WHEN ( cur_count = to_unsigned(124, 8) ) ELSE
                             coeff_b3_section21 WHEN ( cur_count = to_unsigned(125, 8) ) ELSE
                             scaleconst22 WHEN ( cur_count = to_unsigned(126, 8) ) ELSE
                             coeff_a2_section22 WHEN ( cur_count = to_unsigned(127, 8) ) ELSE
                             coeff_a3_section22 WHEN ( cur_count = to_unsigned(128, 8) ) ELSE
                             coeff_b1_section22 WHEN ( cur_count = to_unsigned(129, 8) ) ELSE
                             coeff_b2_section22 WHEN ( cur_count = to_unsigned(130, 8) ) ELSE
                             coeff_b3_section22 WHEN ( cur_count = to_unsigned(131, 8) ) ELSE
                             scaleconst23 WHEN ( cur_count = to_unsigned(132, 8) ) ELSE
                             coeff_a2_section23 WHEN ( cur_count = to_unsigned(133, 8) ) ELSE
                             coeff_a3_section23 WHEN ( cur_count = to_unsigned(134, 8) ) ELSE
                             coeff_b1_section23 WHEN ( cur_count = to_unsigned(135, 8) ) ELSE
                             coeff_b2_section23 WHEN ( cur_count = to_unsigned(136, 8) ) ELSE
                             coeff_b3_section23 WHEN ( cur_count = to_unsigned(137, 8) ) ELSE
                             scaleconst24 WHEN ( cur_count = to_unsigned(138, 8) ) ELSE
                             coeff_a2_section24 WHEN ( cur_count = to_unsigned(139, 8) ) ELSE
                             coeff_a3_section24 WHEN ( cur_count = to_unsigned(140, 8) ) ELSE
                             coeff_b1_section24 WHEN ( cur_count = to_unsigned(141, 8) ) ELSE
                             coeff_b2_section24 WHEN ( cur_count = to_unsigned(142, 8) ) ELSE
                             coeff_b3_section24 WHEN ( cur_count = to_unsigned(143, 8) ) ELSE
                             scaleconst25 WHEN ( cur_count = to_unsigned(144, 8) ) ELSE
                             coeff_a2_section25 WHEN ( cur_count = to_unsigned(145, 8) ) ELSE
                             coeff_a3_section25 WHEN ( cur_count = to_unsigned(146, 8) ) ELSE
                             coeff_b1_section25 WHEN ( cur_count = to_unsigned(147, 8) ) ELSE
                             coeff_b2_section25 WHEN ( cur_count = to_unsigned(148, 8) ) ELSE
                             coeff_b3_section25 WHEN ( cur_count = to_unsigned(149, 8) ) ELSE
                             scaleconst26 WHEN ( cur_count = to_unsigned(150, 8) ) ELSE
                             coeff_a2_section26 WHEN ( cur_count = to_unsigned(151, 8) ) ELSE
                             coeff_a3_section26 WHEN ( cur_count = to_unsigned(152, 8) ) ELSE
                             coeff_b1_section26 WHEN ( cur_count = to_unsigned(153, 8) ) ELSE
                             coeff_b2_section26 WHEN ( cur_count = to_unsigned(154, 8) ) ELSE
                             coeff_b3_section26 WHEN ( cur_count = to_unsigned(155, 8) ) ELSE
                             scaleconst27 WHEN ( cur_count = to_unsigned(156, 8) ) ELSE
                             coeff_a2_section27 WHEN ( cur_count = to_unsigned(157, 8) ) ELSE
                             coeff_a3_section27 WHEN ( cur_count = to_unsigned(158, 8) ) ELSE
                             coeff_b1_section27 WHEN ( cur_count = to_unsigned(159, 8) ) ELSE
                             coeff_b2_section27 WHEN ( cur_count = to_unsigned(160, 8) ) ELSE
                             coeff_b3_section27 WHEN ( cur_count = to_unsigned(161, 8) ) ELSE
                             scaleconst28 WHEN ( cur_count = to_unsigned(162, 8) ) ELSE
                             coeff_a2_section28 WHEN ( cur_count = to_unsigned(163, 8) ) ELSE
                             coeff_a3_section28 WHEN ( cur_count = to_unsigned(164, 8) ) ELSE
                             coeff_b1_section28 WHEN ( cur_count = to_unsigned(165, 8) ) ELSE
                             coeff_b2_section28 WHEN ( cur_count = to_unsigned(166, 8) ) ELSE
                             coeff_b3_section28 WHEN ( cur_count = to_unsigned(167, 8) ) ELSE
                             scaleconst29 WHEN ( cur_count = to_unsigned(168, 8) ) ELSE
                             coeff_a2_section29 WHEN ( cur_count = to_unsigned(169, 8) ) ELSE
                             coeff_a3_section29 WHEN ( cur_count = to_unsigned(170, 8) ) ELSE
                             coeff_b1_section29 WHEN ( cur_count = to_unsigned(171, 8) ) ELSE
                             coeff_b2_section29 WHEN ( cur_count = to_unsigned(172, 8) ) ELSE
                             coeff_b3_section29 WHEN ( cur_count = to_unsigned(173, 8) ) ELSE
                             scaleconst30 WHEN ( cur_count = to_unsigned(174, 8) ) ELSE
                             coeff_a2_section30 WHEN ( cur_count = to_unsigned(175, 8) ) ELSE
                             coeff_a3_section30 WHEN ( cur_count = to_unsigned(176, 8) ) ELSE
                             coeff_b1_section30 WHEN ( cur_count = to_unsigned(177, 8) ) ELSE
                             coeff_b2_section30 WHEN ( cur_count = to_unsigned(178, 8) ) ELSE
                             coeff_b3_section30 WHEN ( cur_count = to_unsigned(179, 8) ) ELSE
                             scaleconst31 WHEN ( cur_count = to_unsigned(180, 8) ) ELSE
                             coeff_a2_section31 WHEN ( cur_count = to_unsigned(181, 8) ) ELSE
                             coeff_a3_section31 WHEN ( cur_count = to_unsigned(182, 8) ) ELSE
                             coeff_b1_section31 WHEN ( cur_count = to_unsigned(183, 8) ) ELSE
                             coeff_b2_section31 WHEN ( cur_count = to_unsigned(184, 8) ) ELSE
                             coeff_b3_section31 WHEN ( cur_count = to_unsigned(185, 8) ) ELSE
                             scaleconst32 WHEN ( cur_count = to_unsigned(186, 8) ) ELSE
                             coeff_a2_section32 WHEN ( cur_count = to_unsigned(187, 8) ) ELSE
                             coeff_a3_section32 WHEN ( cur_count = to_unsigned(188, 8) ) ELSE
                             coeff_b1_section32 WHEN ( cur_count = to_unsigned(189, 8) ) ELSE
                             coeff_b2_section32 WHEN ( cur_count = to_unsigned(190, 8) ) ELSE
                             coeff_b3_section32 WHEN ( cur_count = to_unsigned(191, 8) ) ELSE
                             scaleconst33 WHEN ( cur_count = to_unsigned(192, 8) ) ELSE
                             coeff_a2_section33 WHEN ( cur_count = to_unsigned(193, 8) ) ELSE
                             coeff_a3_section33 WHEN ( cur_count = to_unsigned(194, 8) ) ELSE
                             coeff_b1_section33 WHEN ( cur_count = to_unsigned(195, 8) ) ELSE
                             coeff_b2_section33 WHEN ( cur_count = to_unsigned(196, 8) ) ELSE
                             coeff_b3_section33 WHEN ( cur_count = to_unsigned(197, 8) ) ELSE
                             scaleconst34 WHEN ( cur_count = to_unsigned(198, 8) ) ELSE
                             coeff_a2_section34 WHEN ( cur_count = to_unsigned(199, 8) ) ELSE
                             coeff_a3_section34 WHEN ( cur_count = to_unsigned(200, 8) ) ELSE
                             coeff_b1_section34 WHEN ( cur_count = to_unsigned(201, 8) ) ELSE
                             coeff_b2_section34 WHEN ( cur_count = to_unsigned(202, 8) ) ELSE
                             coeff_b3_section34 WHEN ( cur_count = to_unsigned(203, 8) ) ELSE
                             scaleconst35 WHEN ( cur_count = to_unsigned(204, 8) ) ELSE
                             coeff_a2_section35 WHEN ( cur_count = to_unsigned(205, 8) ) ELSE
                             coeff_a3_section35 WHEN ( cur_count = to_unsigned(206, 8) ) ELSE
                             coeff_b1_section35 WHEN ( cur_count = to_unsigned(207, 8) ) ELSE
                             coeff_b2_section35 WHEN ( cur_count = to_unsigned(208, 8) ) ELSE
                             coeff_b3_section35 WHEN ( cur_count = to_unsigned(209, 8) ) ELSE
                             scaleconst36 WHEN ( cur_count = to_unsigned(210, 8) ) ELSE
                             coeff_a2_section36 WHEN ( cur_count = to_unsigned(211, 8) ) ELSE
                             coeff_a3_section36 WHEN ( cur_count = to_unsigned(212, 8) ) ELSE
                             coeff_b1_section36 WHEN ( cur_count = to_unsigned(213, 8) ) ELSE
                             coeff_b2_section36 WHEN ( cur_count = to_unsigned(214, 8) ) ELSE
                             coeff_b3_section36 WHEN ( cur_count = to_unsigned(215, 8) ) ELSE
                             scaleconst37 WHEN ( cur_count = to_unsigned(216, 8) ) ELSE
                             coeff_a2_section37 WHEN ( cur_count = to_unsigned(217, 8) ) ELSE
                             coeff_a3_section37 WHEN ( cur_count = to_unsigned(218, 8) ) ELSE
                             coeff_b1_section37 WHEN ( cur_count = to_unsigned(219, 8) ) ELSE
                             coeff_b2_section37 WHEN ( cur_count = to_unsigned(220, 8) ) ELSE
                             coeff_b3_section37 WHEN ( cur_count = to_unsigned(221, 8) ) ELSE
                             scaleconst38 WHEN ( cur_count = to_unsigned(222, 8) ) ELSE
                             coeff_a2_section38 WHEN ( cur_count = to_unsigned(223, 8) ) ELSE
                             coeff_a3_section38 WHEN ( cur_count = to_unsigned(224, 8) ) ELSE
                             coeff_b1_section38 WHEN ( cur_count = to_unsigned(225, 8) ) ELSE
                             coeff_b2_section38 WHEN ( cur_count = to_unsigned(226, 8) ) ELSE
                             coeff_b3_section38 WHEN ( cur_count = to_unsigned(227, 8) ) ELSE
                             scaleconst39 WHEN ( cur_count = to_unsigned(228, 8) ) ELSE
                             coeff_a2_section39 WHEN ( cur_count = to_unsigned(229, 8) ) ELSE
                             coeff_a3_section39 WHEN ( cur_count = to_unsigned(230, 8) ) ELSE
                             coeff_b1_section39 WHEN ( cur_count = to_unsigned(231, 8) ) ELSE
                             coeff_b2_section39 WHEN ( cur_count = to_unsigned(232, 8) ) ELSE
                             coeff_b3_section39 WHEN ( cur_count = to_unsigned(233, 8) ) ELSE
                             scaleconst40 WHEN ( cur_count = to_unsigned(234, 8) ) ELSE
                             coeff_a2_section40 WHEN ( cur_count = to_unsigned(235, 8) ) ELSE
                             coeff_a3_section40 WHEN ( cur_count = to_unsigned(236, 8) ) ELSE
                             coeff_b1_section40 WHEN ( cur_count = to_unsigned(237, 8) ) ELSE
                             coeff_b2_section40 WHEN ( cur_count = to_unsigned(238, 8) ) ELSE
                             coeff_b3_section40 WHEN ( cur_count = to_unsigned(239, 8) ) ELSE
                             scaleconst41 WHEN ( cur_count = to_unsigned(240, 8) ) ELSE
                             coeff_a2_section41 WHEN ( cur_count = to_unsigned(241, 8) ) ELSE
                             coeff_a3_section41 WHEN ( cur_count = to_unsigned(242, 8) ) ELSE
                             coeff_b1_section41 WHEN ( cur_count = to_unsigned(243, 8) ) ELSE
                             coeff_b2_section41 WHEN ( cur_count = to_unsigned(244, 8) ) ELSE
                             coeff_b3_section41 WHEN ( cur_count = to_unsigned(245, 8) ) ELSE
                             scaleconst42 WHEN ( cur_count = to_unsigned(246, 8) ) ELSE
                             coeff_a2_section42 WHEN ( cur_count = to_unsigned(247, 8) ) ELSE
                             coeff_a3_section42 WHEN ( cur_count = to_unsigned(248, 8) ) ELSE
                             coeff_b1_section42 WHEN ( cur_count = to_unsigned(249, 8) ) ELSE
                             coeff_b2_section42 WHEN ( cur_count = to_unsigned(250, 8) ) ELSE
                             coeff_b3_section42;

  prod <= inputmux_section_1 * coeffmux_section_1;

  prod_den <= resize(shift_right(prod(56 DOWNTO 0) + ( "0" & (prod(17) & NOT prod(17) & NOT prod(17) & NOT prod(17) & NOT prod(17) & NOT prod(17) & NOT prod(17) & NOT prod(17) & NOT prod(17) & NOT prod(17) & NOT prod(17) & NOT prod(17) & NOT prod(17) & NOT prod(17) & NOT prod(17) & NOT prod(17) & NOT prod(17))), 17), 40);

  prod_den_cast_temp <= resize(shift_right(prod_den(39) & prod_den(39 DOWNTO 0) + ( "0" & (prod_den(2) & NOT prod_den(2))), 2), 40);

  prod_den_cast <= resize(prod_den_cast_temp, 41);

  unaryminus_temp <= ('0' & prod_den_cast) WHEN prod_den_cast = "10000000000000000000000000000000000000000"
      ELSE -resize(prod_den_cast,42);
  prod_den_cast_neg <= unaryminus_temp(40 DOWNTO 0);

  prod_num <= resize(shift_right(prod(57 DOWNTO 0) + ( "0" & (prod(18) & NOT prod(18) & NOT prod(18) & NOT prod(18) & NOT prod(18) & NOT prod(18) & NOT prod(18) & NOT prod(18) & NOT prod(18) & NOT prod(18) & NOT prod(18) & NOT prod(18) & NOT prod(18) & NOT prod(18) & NOT prod(18) & NOT prod(18) & NOT prod(18) & NOT prod(18))), 18), 40);

  prod_num_cast_temp <= resize(shift_right(prod_num(39) & prod_num(39 DOWNTO 0) + ( "0" & (prod_num(2) & NOT prod_num(2))), 2), 40);

  prod_num_cast <= resize(prod_num_cast_temp(39 DOWNTO 0) & '0', 41);

  accum_mux_in1 <= prod_num_cast WHEN ( cur_count = to_unsigned(0, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(1, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(2, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(3, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(4, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(5, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(6, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(7, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(8, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(9, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(10, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(11, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(12, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(13, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(14, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(15, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(16, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(17, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(18, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(19, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(20, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(21, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(22, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(23, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(24, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(25, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(26, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(27, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(28, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(29, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(30, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(31, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(32, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(33, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(34, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(35, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(36, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(37, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(38, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(39, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(40, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(41, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(42, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(43, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(44, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(45, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(46, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(47, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(48, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(49, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(50, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(51, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(52, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(53, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(54, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(55, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(56, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(57, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(58, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(59, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(60, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(61, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(62, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(63, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(64, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(65, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(66, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(67, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(68, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(69, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(70, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(71, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(72, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(73, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(74, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(75, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(76, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(77, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(78, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(79, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(80, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(81, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(82, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(83, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(84, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(85, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(86, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(87, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(88, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(89, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(90, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(91, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(92, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(93, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(94, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(95, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(96, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(97, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(98, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(99, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(100, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(101, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(102, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(103, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(104, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(105, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(106, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(107, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(108, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(109, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(110, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(111, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(112, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(113, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(114, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(115, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(116, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(117, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(118, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(119, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(120, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(121, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(122, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(123, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(124, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(125, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(126, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(127, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(128, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(129, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(130, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(131, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(132, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(133, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(134, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(135, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(136, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(137, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(138, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(139, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(140, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(141, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(142, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(143, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(144, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(145, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(146, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(147, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(148, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(149, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(150, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(151, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(152, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(153, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(154, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(155, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(156, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(157, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(158, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(159, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(160, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(161, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(162, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(163, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(164, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(165, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(166, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(167, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(168, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(169, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(170, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(171, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(172, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(173, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(174, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(175, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(176, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(177, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(178, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(179, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(180, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(181, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(182, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(183, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(184, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(185, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(186, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(187, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(188, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(189, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(190, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(191, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(192, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(193, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(194, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(195, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(196, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(197, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(198, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(199, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(200, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(201, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(202, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(203, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(204, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(205, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(206, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(207, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(208, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(209, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(210, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(211, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(212, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(213, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(214, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(215, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(216, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(217, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(218, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(219, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(220, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(221, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(222, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(223, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(224, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(225, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(226, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(227, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(228, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(229, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(230, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(231, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(232, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(233, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(234, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(235, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(236, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(237, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(238, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(239, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(240, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(241, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(242, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(243, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(244, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(245, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(246, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(247, 8) ) ELSE
                        prod_den_cast_neg WHEN ( cur_count = to_unsigned(248, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(249, 8) ) ELSE
                        prod_num_cast WHEN ( cur_count = to_unsigned(250, 8) ) ELSE
                        prod_num_cast;

  sum_den <= acc_sum(39 DOWNTO 0);

  sum_den_cast <= resize(sum_den, 41);

  sum_num <= resize(shift_right(acc_sum(40 DOWNTO 0) + ( "0" & (acc_sum(1))), 1), 40);

  sum_num_cast <= resize(sum_num(39 DOWNTO 0) & '0', 41);

  accum_mux_in2 <= sum_num_cast WHEN ( cur_count = to_unsigned(0, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(1, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(2, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(3, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(4, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(5, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(6, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(7, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(8, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(9, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(10, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(11, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(12, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(13, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(14, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(15, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(16, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(17, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(18, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(19, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(20, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(21, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(22, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(23, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(24, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(25, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(26, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(27, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(28, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(29, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(30, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(31, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(32, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(33, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(34, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(35, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(36, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(37, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(38, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(39, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(40, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(41, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(42, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(43, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(44, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(45, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(46, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(47, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(48, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(49, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(50, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(51, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(52, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(53, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(54, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(55, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(56, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(57, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(58, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(59, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(60, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(61, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(62, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(63, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(64, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(65, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(66, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(67, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(68, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(69, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(70, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(71, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(72, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(73, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(74, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(75, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(76, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(77, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(78, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(79, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(80, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(81, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(82, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(83, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(84, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(85, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(86, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(87, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(88, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(89, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(90, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(91, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(92, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(93, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(94, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(95, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(96, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(97, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(98, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(99, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(100, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(101, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(102, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(103, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(104, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(105, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(106, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(107, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(108, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(109, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(110, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(111, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(112, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(113, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(114, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(115, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(116, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(117, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(118, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(119, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(120, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(121, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(122, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(123, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(124, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(125, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(126, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(127, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(128, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(129, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(130, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(131, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(132, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(133, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(134, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(135, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(136, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(137, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(138, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(139, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(140, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(141, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(142, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(143, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(144, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(145, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(146, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(147, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(148, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(149, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(150, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(151, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(152, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(153, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(154, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(155, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(156, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(157, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(158, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(159, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(160, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(161, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(162, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(163, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(164, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(165, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(166, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(167, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(168, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(169, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(170, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(171, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(172, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(173, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(174, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(175, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(176, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(177, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(178, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(179, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(180, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(181, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(182, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(183, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(184, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(185, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(186, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(187, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(188, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(189, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(190, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(191, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(192, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(193, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(194, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(195, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(196, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(197, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(198, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(199, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(200, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(201, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(202, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(203, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(204, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(205, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(206, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(207, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(208, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(209, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(210, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(211, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(212, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(213, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(214, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(215, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(216, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(217, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(218, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(219, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(220, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(221, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(222, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(223, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(224, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(225, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(226, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(227, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(228, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(229, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(230, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(231, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(232, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(233, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(234, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(235, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(236, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(237, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(238, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(239, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(240, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(241, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(242, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(243, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(244, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(245, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(246, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(247, 8) ) ELSE
                        sum_den_cast WHEN ( cur_count = to_unsigned(248, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(249, 8) ) ELSE
                        sum_num_cast WHEN ( cur_count = to_unsigned(250, 8) ) ELSE
                        sum_num_cast;

  final_phase <=  phase_0 OR phase_3 OR phase_6 OR phase_9 OR phase_12 OR phase_15 OR phase_18 OR phase_21 OR phase_24 OR phase_27 OR phase_30 OR phase_33 OR phase_36 OR phase_39 OR phase_42 OR phase_45 OR phase_48 OR phase_51 OR phase_54 OR phase_57 OR phase_60 OR phase_63 OR phase_66 OR phase_69 OR phase_72 OR phase_75 OR phase_78 OR phase_81 OR phase_84 OR phase_87 OR phase_90 OR phase_93 OR phase_96 OR phase_99 OR phase_102 OR phase_105 OR phase_108 OR phase_111 OR phase_114 OR phase_117 OR phase_120 OR phase_123 OR phase_126 OR phase_129 OR phase_132 OR phase_135 OR phase_138 OR phase_141 OR phase_144 OR phase_147 OR phase_150 OR phase_153 OR phase_156 OR phase_159 OR phase_162 OR phase_165 OR phase_168 OR phase_171 OR phase_174 OR phase_177 OR phase_180 OR phase_183 OR phase_186 OR phase_189 OR phase_192 OR phase_195 OR phase_198 OR phase_201 OR phase_204 OR phase_207 OR phase_210 OR phase_213 OR phase_216 OR phase_219 OR phase_222 OR phase_225 OR phase_228 OR phase_231 OR phase_234 OR phase_237 OR phase_240 OR phase_243 OR phase_246 OR phase_249;

  section_phase <=  phase_0 OR phase_6 OR phase_12 OR phase_18 OR phase_24 OR phase_30 OR phase_36 OR phase_42 OR phase_48 OR phase_54 OR phase_60 OR phase_66 OR phase_72 OR phase_78 OR phase_84 OR phase_90 OR phase_96 OR phase_102 OR phase_108 OR phase_114 OR phase_120 OR phase_126 OR phase_132 OR phase_138 OR phase_144 OR phase_150 OR phase_156 OR phase_162 OR phase_168 OR phase_174 OR phase_180 OR phase_186 OR phase_192 OR phase_198 OR phase_204 OR phase_210 OR phase_216 OR phase_222 OR phase_228 OR phase_234 OR phase_240 OR phase_246;

  accum_mux_in1_temp <= sectionipconvert_cast WHEN ( section_phase = '1' ) ELSE
                             accum_mux_in1;

  accum_mux_out <= accum_mux_in1_temp WHEN ( final_phase = '1' ) ELSE
                        accum_mux_in2;

  accumulator_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      accum_reg <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        accum_reg <= accum_mux_out;
      END IF;
    END IF; 
  END PROCESS accumulator_reg_process;

  add_cast <= accum_reg;
  add_cast_1 <= accum_mux_in1;
  add_temp <= resize(add_cast, 42) + resize(add_cast_1, 42);
  acc_sum <= add_temp(40 DOWNTO 0);

  storagetypeconvert <= resize(shift_right(accum_mux_out(35 DOWNTO 0) + ( "0" & (accum_mux_out(20) & NOT accum_mux_out(20) & NOT accum_mux_out(20) & NOT accum_mux_out(20) & NOT accum_mux_out(20) & NOT accum_mux_out(20) & NOT accum_mux_out(20) & NOT accum_mux_out(20) & NOT accum_mux_out(20) & NOT accum_mux_out(20) & NOT accum_mux_out(20) & NOT accum_mux_out(20) & NOT accum_mux_out(20) & NOT accum_mux_out(20) & NOT accum_mux_out(20) & NOT accum_mux_out(20) & NOT accum_mux_out(20) & NOT accum_mux_out(20) & NOT accum_mux_out(20) & NOT accum_mux_out(20))), 20), 16);

  sectionipconvert <= resize(shift_right(prod(52 DOWNTO 0) + ( "0" & (prod(29) & NOT prod(29) & NOT prod(29) & NOT prod(29) & NOT prod(29) & NOT prod(29) & NOT prod(29) & NOT prod(29) & NOT prod(29) & NOT prod(29) & NOT prod(29) & NOT prod(29) & NOT prod(29) & NOT prod(29) & NOT prod(29) & NOT prod(29) & NOT prod(29) & NOT prod(29) & NOT prod(29) & NOT prod(29) & NOT prod(29) & NOT prod(29) & NOT prod(29) & NOT prod(29) & NOT prod(29) & NOT prod(29) & NOT prod(29) & NOT prod(29) & NOT prod(29))), 29), 24);

  sectionipconvert_cast <= resize(sectionipconvert(23 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 41);

  acc_out_cast_numacc <= resize(shift_right(accum_mux_out(40 DOWNTO 0) + ( "0" & (accum_mux_out(1))), 1), 40);

  sectionopconvert <= resize(shift_right(acc_out_cast_numacc(39 DOWNTO 0) + ( "0" & (acc_out_cast_numacc(16) & NOT acc_out_cast_numacc(16) & NOT acc_out_cast_numacc(16) & NOT acc_out_cast_numacc(16) & NOT acc_out_cast_numacc(16) & NOT acc_out_cast_numacc(16) & NOT acc_out_cast_numacc(16) & NOT acc_out_cast_numacc(16) & NOT acc_out_cast_numacc(16) & NOT acc_out_cast_numacc(16) & NOT acc_out_cast_numacc(16) & NOT acc_out_cast_numacc(16) & NOT acc_out_cast_numacc(16) & NOT acc_out_cast_numacc(16) & NOT acc_out_cast_numacc(16) & NOT acc_out_cast_numacc(16))), 16), 24);

  output_typeconvert <= resize(shift_right(acc_out_cast_numacc(39 DOWNTO 0) + ( "0" & (acc_out_cast_numacc(16) & NOT acc_out_cast_numacc(16) & NOT acc_out_cast_numacc(16) & NOT acc_out_cast_numacc(16) & NOT acc_out_cast_numacc(16) & NOT acc_out_cast_numacc(16) & NOT acc_out_cast_numacc(16) & NOT acc_out_cast_numacc(16) & NOT acc_out_cast_numacc(16) & NOT acc_out_cast_numacc(16) & NOT acc_out_cast_numacc(16) & NOT acc_out_cast_numacc(16) & NOT acc_out_cast_numacc(16) & NOT acc_out_cast_numacc(16) & NOT acc_out_cast_numacc(16) & NOT acc_out_cast_numacc(16))), 16), 24);

  storage_reg1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in1 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_2 = '1' THEN
        storage_state_in1 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg1_process;

  storage_reg2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in2 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_8 = '1' THEN
        storage_state_in2 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg2_process;

  storage_reg3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in3 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_14 = '1' THEN
        storage_state_in3 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg3_process;

  storage_reg4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in4 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_20 = '1' THEN
        storage_state_in4 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg4_process;

  storage_reg5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in5 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_26 = '1' THEN
        storage_state_in5 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg5_process;

  storage_reg6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in6 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_32 = '1' THEN
        storage_state_in6 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg6_process;

  storage_reg7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in7 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_38 = '1' THEN
        storage_state_in7 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg7_process;

  storage_reg8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in8 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_44 = '1' THEN
        storage_state_in8 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg8_process;

  storage_reg9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in9 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_50 = '1' THEN
        storage_state_in9 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg9_process;

  storage_reg10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in10 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_56 = '1' THEN
        storage_state_in10 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg10_process;

  storage_reg11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in11 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_62 = '1' THEN
        storage_state_in11 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg11_process;

  storage_reg12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in12 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_68 = '1' THEN
        storage_state_in12 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg12_process;

  storage_reg13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in13 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_74 = '1' THEN
        storage_state_in13 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg13_process;

  storage_reg14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in14 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_80 = '1' THEN
        storage_state_in14 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg14_process;

  storage_reg15_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in15 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_86 = '1' THEN
        storage_state_in15 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg15_process;

  storage_reg16_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in16 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_92 = '1' THEN
        storage_state_in16 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg16_process;

  storage_reg17_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in17 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_98 = '1' THEN
        storage_state_in17 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg17_process;

  storage_reg18_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in18 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_104 = '1' THEN
        storage_state_in18 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg18_process;

  storage_reg19_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in19 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_110 = '1' THEN
        storage_state_in19 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg19_process;

  storage_reg20_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in20 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_116 = '1' THEN
        storage_state_in20 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg20_process;

  storage_reg21_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in21 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_122 = '1' THEN
        storage_state_in21 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg21_process;

  storage_reg22_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in22 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_128 = '1' THEN
        storage_state_in22 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg22_process;

  storage_reg23_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in23 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_134 = '1' THEN
        storage_state_in23 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg23_process;

  storage_reg24_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in24 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_140 = '1' THEN
        storage_state_in24 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg24_process;

  storage_reg25_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in25 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_146 = '1' THEN
        storage_state_in25 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg25_process;

  storage_reg26_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in26 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_152 = '1' THEN
        storage_state_in26 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg26_process;

  storage_reg27_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in27 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_158 = '1' THEN
        storage_state_in27 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg27_process;

  storage_reg28_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in28 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_164 = '1' THEN
        storage_state_in28 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg28_process;

  storage_reg29_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in29 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_170 = '1' THEN
        storage_state_in29 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg29_process;

  storage_reg30_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in30 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_176 = '1' THEN
        storage_state_in30 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg30_process;

  storage_reg31_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in31 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_182 = '1' THEN
        storage_state_in31 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg31_process;

  storage_reg32_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in32 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_188 = '1' THEN
        storage_state_in32 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg32_process;

  storage_reg33_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in33 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_194 = '1' THEN
        storage_state_in33 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg33_process;

  storage_reg34_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in34 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_200 = '1' THEN
        storage_state_in34 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg34_process;

  storage_reg35_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in35 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_206 = '1' THEN
        storage_state_in35 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg35_process;

  storage_reg36_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in36 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_212 = '1' THEN
        storage_state_in36 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg36_process;

  storage_reg37_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in37 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_218 = '1' THEN
        storage_state_in37 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg37_process;

  storage_reg38_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in38 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_224 = '1' THEN
        storage_state_in38 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg38_process;

  storage_reg39_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in39 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_230 = '1' THEN
        storage_state_in39 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg39_process;

  storage_reg40_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in40 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_236 = '1' THEN
        storage_state_in40 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg40_process;

  storage_reg41_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in41 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_242 = '1' THEN
        storage_state_in41 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg41_process;

  storage_reg42_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      storage_state_in42 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_248 = '1' THEN
        storage_state_in42 <= storagetypeconvert;
      END IF;
    END IF; 
  END PROCESS storage_reg42_process;

  Output_Register_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      output_register <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF phase_251 = '1' THEN
        output_register <= output_typeconvert;
      END IF;
    END IF; 
  END PROCESS Output_Register_process;

  -- Assignment Statements
  filter_out <= output_register;
END rtl;
