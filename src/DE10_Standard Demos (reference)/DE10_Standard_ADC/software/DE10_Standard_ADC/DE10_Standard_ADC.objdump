
DE10_Standard_ADC.elf:     file format elf32-littlenios2
DE10_Standard_ADC.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00040244

Program Header:
    LOAD off    0x00001000 vaddr 0x00040000 paddr 0x00040000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00040020 paddr 0x00040020 align 2**12
         filesz 0x0000faa8 memsz 0x0000faa8 flags r-x
    LOAD off    0x00010ac8 vaddr 0x0004fac8 paddr 0x000515b4 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x000130a0 vaddr 0x000530a0 paddr 0x000530a0 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00040000  00040000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  00040020  00040020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f544  00040244  00040244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000340  0004f788  0004f788  00010788  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  0004fac8  000515b4  00010ac8  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  000530a0  000530a0  000130a0  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2 00000000  00053200  00053200  000125b4  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  000125b4  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000f18  00000000  00000000  000125d8  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00023840  00000000  00000000  000134f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 000091c2  00000000  00000000  00036d30  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000b524  00000000  00000000  0003fef2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  000020e8  00000000  00000000  0004b418  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    000038db  00000000  00000000  0004d500  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00017c5c  00000000  00000000  00050ddb  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000060  00000000  00000000  00068a38  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001940  00000000  00000000  00068a98  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0006d51e  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  0006d521  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0006d52d  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0006d52e  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  0006d52f  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  0006d533  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  0006d537  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  0006d53b  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  0006d544  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  0006d54d  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000012  00000000  00000000  0006d556  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000046  00000000  00000000  0006d568  2**0
                  CONTENTS, READONLY
 29 .jdi          00004781  00000000  00000000  0006d5ae  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     00058732  00000000  00000000  00071d2f  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00040000 l    d  .entry	00000000 .entry
00040020 l    d  .exceptions	00000000 .exceptions
00040244 l    d  .text	00000000 .text
0004f788 l    d  .rodata	00000000 .rodata
0004fac8 l    d  .rwdata	00000000 .rwdata
000530a0 l    d  .bss	00000000 .bss
00053200 l    d  .onchip_memory2	00000000 .onchip_memory2
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../DE10_Standard_ADC_bsp//obj/HAL/src/crt0.o
0004028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 floatsisf.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0004f916 l     O .rodata	00000010 zeroes.4404
00043528 l     F .text	000000bc __sbprintf
0004f926 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00043738 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00045268 l     F .text	00000008 __fp_unlock
0004527c l     F .text	0000019c __sinit.part.1
00045418 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0004fac8 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
0004ff0c l     O .rwdata	00000020 lc_ctype_charset
0004feec l     O .rwdata	00000020 lc_message_charset
0004ff2c l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0004f958 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
00048814 l     F .text	000000fc __sprint_r.part.0
0004fa8c l     O .rodata	00000010 blanks.4348
0004fa7c l     O .rodata	00000010 zeroes.4349
00049da0 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
0004cf5c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0004d068 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0004d094 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0004d180 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0004d260 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0004d34c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0004d520 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
000515a4 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
0004d79c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0004d8d0 l     F .text	00000034 alt_dev_reg
00050514 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0004dbac l     F .text	0000020c altera_avalon_jtag_uart_irq
0004ddb8 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0004e6bc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0004eb30 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0004ec70 l     F .text	0000003c alt_get_errno
0004ecac l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
000530d4 g     O .bss	00000004 alt_instruction_exception_handler
00047e58 g     F .text	00000074 _mprec_log10
00047f44 g     F .text	0000008c __any_on
0004a33c g     F .text	00000054 _isatty_r
0004f964 g     O .rodata	00000028 __mprec_tinytens
0004d45c g     F .text	0000007c alt_main
000411a8 g     F .text	000000c0 _puts_r
00053100 g     O .bss	00000100 alt_irq
0004a390 g     F .text	00000060 _lseek_r
000515b4 g       *ABS*	00000000 __flash_rwdata_start
0004baec g     F .text	00000088 .hidden __eqdf2
00053200 g       *ABS*	00000000 __alt_heap_start
0004116c g     F .text	0000003c printf
0004a5a8 g     F .text	0000009c _wcrtomb_r
000486d4 g     F .text	0000005c __sseek
000455b8 g     F .text	00000010 __sinit
0004a450 g     F .text	00000140 __swbuf_r
00046080 g     F .text	0000007c _setlocale_r
00045420 g     F .text	00000068 __sfmoreglue
0004d4fc g     F .text	00000024 __malloc_unlock
00046d50 g     F .text	0000015c memmove
000455a0 g     F .text	00000018 _cleanup
00046fd4 g     F .text	000000a8 _Balloc
0004bb74 g     F .text	000000dc .hidden __gtdf2
0004f068 g     F .text	00000024 altera_nios2_gen2_irq_init
00040000 g     F .entry	0000001c __reset
00040020 g       *ABS*	00000000 __flash_exceptions_start
0004a2e0 g     F .text	0000005c _fstat_r
000530b8 g     O .bss	00000004 errno
00048650 g     F .text	00000008 __seofread
000530c0 g     O .bss	00000004 alt_argv
00059574 g       *ABS*	00000000 _gp
0004d76c g     F .text	00000030 usleep
00050394 g     O .rwdata	00000180 alt_fd_list
0004f08c g     F .text	00000090 alt_find_dev
00046c08 g     F .text	00000148 memcpy
00045270 g     F .text	0000000c _cleanup_r
0004cdd8 g     F .text	000000dc .hidden __floatsidf
0004ebf4 g     F .text	0000007c alt_io_redirect
0004bc50 g     F .text	000000f4 .hidden __ltdf2
0004f788 g       *ABS*	00000000 __DTOR_END__
00041268 g     F .text	00000014 puts
0004f358 g     F .text	0000009c alt_exception_cause_generated_bad_addr
00048534 g     F .text	00000074 __fpclassifyd
00047db4 g     F .text	000000a4 __ratio
00049d84 g     F .text	0000001c __vfiprintf_internal
0004dfb0 g     F .text	0000021c altera_avalon_jtag_uart_read
0004113c g     F .text	00000030 _printf_r
00041080 g     F .text	00000064 .hidden __udivsi3
0004d1bc g     F .text	000000a4 isatty
0004f9b4 g     O .rodata	000000c8 __mprec_tens
000460fc g     F .text	0000000c __locale_charset
0004f2c8 g     F .text	00000090 alt_icache_flush
000530b4 g     O .bss	00000004 __malloc_top_pad
0005157c g     O .rwdata	00000004 __mb_cur_max
0004612c g     F .text	0000000c _localeconv_r
000473e0 g     F .text	0000003c __i2b
00045a3c g     F .text	000004bc __sfvwrite_r
000485a8 g     F .text	00000054 _sbrk_r
0004a3f0 g     F .text	00000060 _read_r
0005159c g     O .rwdata	00000004 alt_max_fd
00049fd4 g     F .text	000000f0 _fclose_r
00045238 g     F .text	00000030 fflush
000530b0 g     O .bss	00000004 __malloc_max_sbrked_mem
00040e14 g     F .text	00000110 .hidden __extendsfdf2
0004b240 g     F .text	000008ac .hidden __adddf3
00047b5c g     F .text	0000010c __b2d
0004ad08 g     F .text	00000538 .hidden __umoddi3
0004d388 g     F .text	000000d4 lseek
00051574 g     O .rwdata	00000004 _global_impure_ptr
00047fd0 g     F .text	00000564 _realloc_r
00053200 g       *ABS*	00000000 __bss_end
0004ea40 g     F .text	000000f0 alt_iic_isr_register
0004ef60 g     F .text	00000108 alt_tick
0004a790 g     F .text	00000578 .hidden __udivdi3
0004a23c g     F .text	00000024 _fputwc_r
0004f98c g     O .rodata	00000028 __mprec_bigtens
000471c4 g     F .text	00000104 __s2b
0004ceb4 g     F .text	000000a8 .hidden __floatunsidf
0004789c g     F .text	00000060 __mcmp
000455d8 g     F .text	00000018 __fp_lock_all
0004e9f4 g     F .text	0000004c alt_ic_irq_enabled
0004eec4 g     F .text	0000009c alt_alarm_stop
000530c8 g     O .bss	00000004 alt_irq_active
000400fc g     F .exceptions	000000d4 alt_irq_handler
0005036c g     O .rwdata	00000028 alt_dev_null
0004e674 g     F .text	00000048 alt_dcache_flush_all
000472c8 g     F .text	00000068 __hi0bits
0004cd58 g     F .text	00000080 .hidden __fixdfsi
000515b4 g       *ABS*	00000000 __ram_rwdata_end
00051594 g     O .rwdata	00000008 alt_dev_list
0004d7d8 g     F .text	000000f8 write
0004fac8 g       *ABS*	00000000 __ram_rodata_end
0004d0d0 g     F .text	000000b0 fstat
0004bc50 g     F .text	000000f4 .hidden __ledf2
00047614 g     F .text	00000140 __pow5mult
00048928 g     F .text	0000145c ___vfiprintf_internal_r
000530a8 g     O .bss	00000004 __nlocale_changed
000410e4 g     F .text	00000058 .hidden __umodsi3
00053200 g       *ABS*	00000000 end
0004daec g     F .text	000000c0 altera_avalon_jtag_uart_init
000401d0 g     F .exceptions	00000074 alt_instruction_exception_entry
0004f788 g       *ABS*	00000000 __CTOR_LIST__
00067100 g       *ABS*	00000000 __alt_stack_pointer
00040f24 g     F .text	00000064 .hidden __clzsi2
0004e1cc g     F .text	00000224 altera_avalon_jtag_uart_write
000455c8 g     F .text	00000004 __sfp_lock_acquire
00046b24 g     F .text	000000e4 memchr
00041314 g     F .text	000021f8 ___vfprintf_internal_r
0004572c g     F .text	00000310 _free_r
00046108 g     F .text	00000010 __locale_mb_cur_max
0004f5d4 g     F .text	00000180 __call_exitprocs
000530a4 g     O .bss	00000004 __mlocale_changed
00051580 g     O .rwdata	00000004 __malloc_sbrk_base
00040244 g     F .text	0000004c _start
000530cc g     O .bss	00000004 _alt_tick_rate
00047754 g     F .text	00000148 __lshift
000530d0 g     O .bss	00000004 _alt_nticks
0004d55c g     F .text	000000fc read
0004d93c g     F .text	0000004c alt_sys_init
00040408 g     F .text	00000124 .hidden __floatsisf
0004f4bc g     F .text	00000118 __register_exitproc
0004741c g     F .text	000001f8 __multiply
0004de58 g     F .text	00000068 altera_avalon_jtag_uart_close
0004fac8 g       *ABS*	00000000 __ram_rwdata_start
0004f788 g       *ABS*	00000000 __ram_rodata_start
000530d8 g     O .bss	00000028 __malloc_current_mallinfo
00047c68 g     F .text	0000014c __d2b
0004d988 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0004f224 g     F .text	000000a4 alt_get_fd
0004e51c g     F .text	00000158 alt_busy_sleep
00049ebc g     F .text	00000054 _close_r
0004f440 g     F .text	0000007c memcmp
0004da48 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00053200 g       *ABS*	00000000 __alt_stack_base
0004da98 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
000435e4 g     F .text	00000154 __swsetup_r
0004052c g     F .text	000008e8 .hidden __divdf3
00045488 g     F .text	00000118 __sfp
00047ecc g     F .text	00000078 __copybits
0004ff64 g     O .rwdata	00000408 __malloc_av_
000455d4 g     F .text	00000004 __sinit_lock_release
0004bd44 g     F .text	00000718 .hidden __muldf3
000485fc g     F .text	00000054 __sread
0004f11c g     F .text	00000108 alt_find_file
0004e6f8 g     F .text	000000a4 alt_dev_llist_insert
0004d4d8 g     F .text	00000024 __malloc_lock
0004d6bc g     F .text	000000b0 sbrk
000451dc g     F .text	0000005c _fflush_r
00049f10 g     F .text	000000c4 _calloc_r
000530a0 g       *ABS*	00000000 __bss_start
00046eac g     F .text	00000128 memset
00040290 g     F .text	00000178 main
000530c4 g     O .bss	00000004 alt_envp
000530ac g     O .bss	00000004 __malloc_max_total_mem
0004d9e8 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0004a590 g     F .text	00000018 __swbuf
00048730 g     F .text	00000008 __sclose
00067100 g       *ABS*	00000000 __alt_heap_limit
0004a0c4 g     F .text	00000014 fclose
00043938 g     F .text	00001688 _dtoa_r
00046318 g     F .text	0000080c _malloc_r
0004a704 g     F .text	00000030 __ascii_wctomb
000515a0 g     O .rwdata	00000004 alt_errno
00045ef8 g     F .text	000000c4 _fwalk
00040f88 g     F .text	00000084 .hidden __divsi3
00045608 g     F .text	00000124 _malloc_trim_r
0004f788 g       *ABS*	00000000 __CTOR_END__
00048738 g     F .text	000000dc strcmp
0004f788 g       *ABS*	00000000 __flash_rodata_start
0004f788 g       *ABS*	00000000 __DTOR_LIST__
0004baec g     F .text	00000088 .hidden __nedf2
0004d904 g     F .text	00000038 alt_irq_init
0004d658 g     F .text	00000064 alt_release_fd
0004f7ce g     O .rodata	00000100 .hidden __clz_tab
000530a0 g     O .bss	00000004 _PathLocale
0004f3f4 g     F .text	00000014 atexit
00049e5c g     F .text	00000060 _write_r
00046138 g     F .text	00000018 setlocale
00051578 g     O .rwdata	00000004 _impure_ptr
000530bc g     O .bss	00000004 alt_argc
00044fc0 g     F .text	0000021c __sflush_r
0004e7fc g     F .text	00000060 _do_dtors
00046124 g     F .text	00000008 __locale_cjk_lang
00040020 g       .exceptions	00000000 alt_irq_entry
00047af8 g     F .text	00000064 __ulp
000455f0 g     F .text	00000018 __fp_unlock_all
0005158c g     O .rwdata	00000008 alt_fs_list
00040020 g       *ABS*	00000000 __ram_exceptions_start
00046150 g     F .text	0000000c localeconv
00040000 g       *ABS*	00000000 __alt_mem_onchip_memory2
0004e890 g     F .text	00000050 alt_ic_isr_register
000515b4 g       *ABS*	00000000 _edata
00053200 g       *ABS*	00000000 _end
0004a0d8 g     F .text	00000164 __fputwc
00040244 g       *ABS*	00000000 __ram_exceptions_end
0004dec0 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0004e968 g     F .text	0000008c alt_ic_irq_disable
00048658 g     F .text	0000007c __swrite
00051584 g     O .rwdata	00000004 __malloc_trim_threshold
00046118 g     F .text	0000000c __locale_msgcharset
0004f408 g     F .text	00000038 exit
00045fbc g     F .text	000000c4 _fwalk_reent
000478fc g     F .text	000001fc __mdiff
0004100c g     F .text	00000074 .hidden __modsi3
00067100 g       *ABS*	00000000 __alt_data_end
00040020 g     F .exceptions	00000000 alt_exception
000455cc g     F .text	00000004 __sfp_lock_release
0004f754 g     F .text	00000034 _exit
0004e3f0 g     F .text	0000012c alt_alarm_start
0004615c g     F .text	000001bc __smakebuf_r
0004127c g     F .text	00000098 strlen
0004ed70 g     F .text	00000154 open
0004bb74 g     F .text	000000dc .hidden __gedf2
00051588 g     O .rwdata	00000004 __wctomb
00048910 g     F .text	00000018 __sprint_r
0004e85c g     F .text	00000034 alt_icache_flush_all
000515a8 g     O .rwdata	00000004 alt_priority_mask
0004e8e0 g     F .text	00000088 alt_ic_irq_enable
0004350c g     F .text	0000001c __vfprintf_internal
0004a734 g     F .text	0000005c _wctomb_r
0004c45c g     F .text	000008fc .hidden __subdf3
00047330 g     F .text	000000b0 __lo0bits
000515ac g     O .rwdata	00000008 alt_alarm_list
0004e79c g     F .text	00000060 _do_ctors
0004a644 g     F .text	000000c0 wcrtomb
0004cf98 g     F .text	000000d0 close
0004d2c8 g     F .text	00000084 alt_load
0004a260 g     F .text	00000080 fputwc
000455d0 g     F .text	00000004 __sinit_lock_acquire
000470a4 g     F .text	00000120 __multadd
0004707c g     F .text	00000028 _Bfree



Disassembly of section .entry:

00040000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   40000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   40004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   40008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   4000c:	00bffd16 	blt	zero,r2,40004 <__alt_data_end+0xfffd8f04>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   40010:	00400134 	movhi	at,4
    ori r1, r1, %lo(_start)
   40014:	08409114 	ori	at,at,580
    jmp r1
   40018:	0800683a 	jmp	at
   4001c:	00000000 	call	0 <__alt_mem_onchip_memory2-0x40000>

Disassembly of section .exceptions:

00040020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   40020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   40024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   40028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   4002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   40030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   40034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   40038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   4003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   40040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   40044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   40048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   4004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   40050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   40054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   40058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   4005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   40060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   40064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   40068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   4006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   40070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   40074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   40078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   4007c:	10000326 	beq	r2,zero,4008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   40080:	20000226 	beq	r4,zero,4008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   40084:	00400fc0 	call	400fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   40088:	00000706 	br	400a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   4008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   40090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   40094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   40098:	00401d00 	call	401d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   4009c:	1000021e 	bne	r2,zero,400a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   400a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   400a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   400a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   400ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   400b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   400b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   400b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   400bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   400c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   400c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   400c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   400cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   400d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   400d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   400d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   400dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   400e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   400e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   400e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   400ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   400f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   400f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   400f8:	ef80083a 	eret

000400fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   400fc:	defff904 	addi	sp,sp,-28
   40100:	dfc00615 	stw	ra,24(sp)
   40104:	df000515 	stw	fp,20(sp)
   40108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   4010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   40110:	0005313a 	rdctl	r2,ipending
   40114:	e0bffe15 	stw	r2,-8(fp)

  return active;
   40118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   4011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
   40120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   40124:	00800044 	movi	r2,1
   40128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   4012c:	e0fffb17 	ldw	r3,-20(fp)
   40130:	e0bffc17 	ldw	r2,-16(fp)
   40134:	1884703a 	and	r2,r3,r2
   40138:	10001426 	beq	r2,zero,4018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   4013c:	00800174 	movhi	r2,5
   40140:	108c4004 	addi	r2,r2,12544
   40144:	e0fffd17 	ldw	r3,-12(fp)
   40148:	180690fa 	slli	r3,r3,3
   4014c:	10c5883a 	add	r2,r2,r3
   40150:	10c00017 	ldw	r3,0(r2)
   40154:	00800174 	movhi	r2,5
   40158:	108c4004 	addi	r2,r2,12544
   4015c:	e13ffd17 	ldw	r4,-12(fp)
   40160:	200890fa 	slli	r4,r4,3
   40164:	1105883a 	add	r2,r2,r4
   40168:	10800104 	addi	r2,r2,4
   4016c:	10800017 	ldw	r2,0(r2)
   40170:	1009883a 	mov	r4,r2
   40174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
   40178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   4017c:	0005313a 	rdctl	r2,ipending
   40180:	e0bfff15 	stw	r2,-4(fp)

  return active;
   40184:	e0bfff17 	ldw	r2,-4(fp)
   40188:	00000706 	br	401a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
   4018c:	e0bffc17 	ldw	r2,-16(fp)
   40190:	1085883a 	add	r2,r2,r2
   40194:	e0bffc15 	stw	r2,-16(fp)
      i++;
   40198:	e0bffd17 	ldw	r2,-12(fp)
   4019c:	10800044 	addi	r2,r2,1
   401a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   401a4:	003fe106 	br	4012c <__alt_data_end+0xfffd902c>

    active = alt_irq_pending ();
   401a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
   401ac:	e0bffb17 	ldw	r2,-20(fp)
   401b0:	103fdb1e 	bne	r2,zero,40120 <__alt_data_end+0xfffd9020>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   401b4:	0001883a 	nop
}
   401b8:	0001883a 	nop
   401bc:	e037883a 	mov	sp,fp
   401c0:	dfc00117 	ldw	ra,4(sp)
   401c4:	df000017 	ldw	fp,0(sp)
   401c8:	dec00204 	addi	sp,sp,8
   401cc:	f800283a 	ret

000401d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   401d0:	defffb04 	addi	sp,sp,-20
   401d4:	dfc00415 	stw	ra,16(sp)
   401d8:	df000315 	stw	fp,12(sp)
   401dc:	df000304 	addi	fp,sp,12
   401e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
   401e4:	000531fa 	rdctl	r2,exception
   401e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
   401ec:	e0bffd17 	ldw	r2,-12(fp)
   401f0:	10801f0c 	andi	r2,r2,124
   401f4:	1004d0ba 	srli	r2,r2,2
   401f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
   401fc:	0005333a 	rdctl	r2,badaddr
   40200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   40204:	d0a6d817 	ldw	r2,-25760(gp)
   40208:	10000726 	beq	r2,zero,40228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   4020c:	d0a6d817 	ldw	r2,-25760(gp)
   40210:	e0fffd17 	ldw	r3,-12(fp)
   40214:	e1bffe17 	ldw	r6,-8(fp)
   40218:	e17fff17 	ldw	r5,-4(fp)
   4021c:	1809883a 	mov	r4,r3
   40220:	103ee83a 	callr	r2
   40224:	00000206 	br	40230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   40228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   4022c:	0005883a 	mov	r2,zero
}
   40230:	e037883a 	mov	sp,fp
   40234:	dfc00117 	ldw	ra,4(sp)
   40238:	df000017 	ldw	fp,0(sp)
   4023c:	dec00204 	addi	sp,sp,8
   40240:	f800283a 	ret

Disassembly of section .text:

00040244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
   40244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
   40248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
   4024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
   40250:	00bffd16 	blt	zero,r2,40248 <__alt_data_end+0xfffd9148>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   40254:	06c001b4 	movhi	sp,6
    ori sp, sp, %lo(__alt_stack_pointer)
   40258:	dedc4014 	ori	sp,sp,28928
    movhi gp, %hi(_gp)
   4025c:	06800174 	movhi	gp,5
    ori gp, gp, %lo(_gp)
   40260:	d6a55d14 	ori	gp,gp,38260
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   40264:	00800174 	movhi	r2,5
    ori r2, r2, %lo(__bss_start)
   40268:	108c2814 	ori	r2,r2,12448

    movhi r3, %hi(__bss_end)
   4026c:	00c00174 	movhi	r3,5
    ori r3, r3, %lo(__bss_end)
   40270:	18cc8014 	ori	r3,r3,12800

    beq r2, r3, 1f
   40274:	10c00326 	beq	r2,r3,40284 <_start+0x40>

0:
    stw zero, (r2)
   40278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   4027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   40280:	10fffd36 	bltu	r2,r3,40278 <__alt_data_end+0xfffd9178>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   40284:	004d2c80 	call	4d2c8 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   40288:	004d45c0 	call	4d45c <alt_main>

0004028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   4028c:	003fff06 	br	4028c <__alt_data_end+0xfffd918c>

00040290 <main>:
#include <io.h>
#include <unistd.h>

#include "system.h"

void main(void){
   40290:	defff804 	addi	sp,sp,-32
   40294:	dfc00715 	stw	ra,28(sp)
   40298:	df000615 	stw	fp,24(sp)
   4029c:	df000604 	addi	fp,sp,24
	int ch = 0;
   402a0:	e03ffd15 	stw	zero,-12(fp)
	const int nReadNum = 10; // max 1024
   402a4:	00800284 	movi	r2,10
   402a8:	e0bffe15 	stw	r2,-8(fp)
	int i, Value, nIndex=0;
   402ac:	e03ffc15 	stw	zero,-16(fp)

	printf("ADC Demo\r\n");
   402b0:	01000174 	movhi	r4,5
   402b4:	213de204 	addi	r4,r4,-2168
   402b8:	00412680 	call	41268 <puts>
	while(1){
		ch = IORD(SW_BASE, 0x00) & 0x07;
   402bc:	0005883a 	mov	r2,zero
   402c0:	10800037 	ldwio	r2,0(r2)
   402c4:	108001cc 	andi	r2,r2,7
   402c8:	e0bffd15 	stw	r2,-12(fp)

		printf("======================= %d, ch=%d\r\n", nIndex++, ch);
   402cc:	e0bffc17 	ldw	r2,-16(fp)
   402d0:	10c00044 	addi	r3,r2,1
   402d4:	e0fffc15 	stw	r3,-16(fp)
   402d8:	e1bffd17 	ldw	r6,-12(fp)
   402dc:	100b883a 	mov	r5,r2
   402e0:	01000174 	movhi	r4,5
   402e4:	213de504 	addi	r4,r4,-2156
   402e8:	004116c0 	call	4116c <printf>
		// set measure number for ADC convert
		IOWR(ADC_LTC2308_BASE, 0x01, nReadNum);
   402ec:	00800234 	movhi	r2,8
   402f0:	10840504 	addi	r2,r2,4116
   402f4:	e0fffe17 	ldw	r3,-8(fp)
   402f8:	10c00035 	stwio	r3,0(r2)


		// start measure
		IOWR(ADC_LTC2308_BASE, 0x00, (ch << 1) | 0x00);
   402fc:	e0bffd17 	ldw	r2,-12(fp)
   40300:	1085883a 	add	r2,r2,r2
   40304:	1007883a 	mov	r3,r2
   40308:	00800234 	movhi	r2,8
   4030c:	10840404 	addi	r2,r2,4112
   40310:	10c00035 	stwio	r3,0(r2)
		IOWR(ADC_LTC2308_BASE, 0x00, (ch << 1) | 0x01);
   40314:	e0bffd17 	ldw	r2,-12(fp)
   40318:	1085883a 	add	r2,r2,r2
   4031c:	10c00054 	ori	r3,r2,1
   40320:	00800234 	movhi	r2,8
   40324:	10840404 	addi	r2,r2,4112
   40328:	10c00035 	stwio	r3,0(r2)
		IOWR(ADC_LTC2308_BASE, 0x00, (ch << 1) | 0x00);
   4032c:	e0bffd17 	ldw	r2,-12(fp)
   40330:	1085883a 	add	r2,r2,r2
   40334:	1007883a 	mov	r3,r2
   40338:	00800234 	movhi	r2,8
   4033c:	10840404 	addi	r2,r2,4112
   40340:	10c00035 	stwio	r3,0(r2)
		usleep(1);
   40344:	01000044 	movi	r4,1
   40348:	004d76c0 	call	4d76c <usleep>

		// wait measure done
		while ((IORD(ADC_LTC2308_BASE,0x00) & 0x01) == 0x00);
   4034c:	0001883a 	nop
   40350:	00800234 	movhi	r2,8
   40354:	10840404 	addi	r2,r2,4112
   40358:	10800037 	ldwio	r2,0(r2)
   4035c:	1080004c 	andi	r2,r2,1
   40360:	103ffb26 	beq	r2,zero,40350 <__alt_data_end+0xfffd9250>

		// read adc value
		for(i=0;i<nReadNum;i++){
   40364:	e03ffb15 	stw	zero,-20(fp)
   40368:	00002006 	br	403ec <main+0x15c>
			Value = IORD(ADC_LTC2308_BASE, 0x01);
   4036c:	00800234 	movhi	r2,8
   40370:	10840504 	addi	r2,r2,4116
   40374:	10800037 	ldwio	r2,0(r2)
   40378:	e0bfff15 	stw	r2,-4(fp)
			printf("CH%d=%.3fV (0x%04x)\r\n", ch, (float)Value/1000.0, Value);
   4037c:	e13fff17 	ldw	r4,-4(fp)
   40380:	00404080 	call	40408 <__floatsisf>
   40384:	1007883a 	mov	r3,r2
   40388:	1809883a 	mov	r4,r3
   4038c:	0040e140 	call	40e14 <__extendsfdf2>
   40390:	1011883a 	mov	r8,r2
   40394:	1813883a 	mov	r9,r3
   40398:	000d883a 	mov	r6,zero
   4039c:	01d023f4 	movhi	r7,16527
   403a0:	39d00004 	addi	r7,r7,16384
   403a4:	4009883a 	mov	r4,r8
   403a8:	480b883a 	mov	r5,r9
   403ac:	004052c0 	call	4052c <__divdf3>
   403b0:	1009883a 	mov	r4,r2
   403b4:	180b883a 	mov	r5,r3
   403b8:	2005883a 	mov	r2,r4
   403bc:	2807883a 	mov	r3,r5
   403c0:	e13fff17 	ldw	r4,-4(fp)
   403c4:	d9000015 	stw	r4,0(sp)
   403c8:	100d883a 	mov	r6,r2
   403cc:	180f883a 	mov	r7,r3
   403d0:	e17ffd17 	ldw	r5,-12(fp)
   403d4:	01000174 	movhi	r4,5
   403d8:	213dee04 	addi	r4,r4,-2120
   403dc:	004116c0 	call	4116c <printf>

		// wait measure done
		while ((IORD(ADC_LTC2308_BASE,0x00) & 0x01) == 0x00);

		// read adc value
		for(i=0;i<nReadNum;i++){
   403e0:	e0bffb17 	ldw	r2,-20(fp)
   403e4:	10800044 	addi	r2,r2,1
   403e8:	e0bffb15 	stw	r2,-20(fp)
   403ec:	e0fffb17 	ldw	r3,-20(fp)
   403f0:	e0bffe17 	ldw	r2,-8(fp)
   403f4:	18bfdd16 	blt	r3,r2,4036c <__alt_data_end+0xfffd926c>
			Value = IORD(ADC_LTC2308_BASE, 0x01);
			printf("CH%d=%.3fV (0x%04x)\r\n", ch, (float)Value/1000.0, Value);
		}

		usleep(200*1000);
   403f8:	010000f4 	movhi	r4,3
   403fc:	21035004 	addi	r4,r4,3392
   40400:	004d76c0 	call	4d76c <usleep>
	} // while
   40404:	003fad06 	br	402bc <__alt_data_end+0xfffd91bc>

00040408 <__floatsisf>:
   40408:	defffd04 	addi	sp,sp,-12
   4040c:	dfc00215 	stw	ra,8(sp)
   40410:	dc400115 	stw	r17,4(sp)
   40414:	dc000015 	stw	r16,0(sp)
   40418:	20003526 	beq	r4,zero,404f0 <__floatsisf+0xe8>
   4041c:	2021883a 	mov	r16,r4
   40420:	2022d7fa 	srli	r17,r4,31
   40424:	20003616 	blt	r4,zero,40500 <__floatsisf+0xf8>
   40428:	8009883a 	mov	r4,r16
   4042c:	0040f240 	call	40f24 <__clzsi2>
   40430:	00c02784 	movi	r3,158
   40434:	1887c83a 	sub	r3,r3,r2
   40438:	01002584 	movi	r4,150
   4043c:	20c01416 	blt	r4,r3,40490 <__floatsisf+0x88>
   40440:	20c9c83a 	sub	r4,r4,r3
   40444:	8120983a 	sll	r16,r16,r4
   40448:	00802034 	movhi	r2,128
   4044c:	10bfffc4 	addi	r2,r2,-1
   40450:	8809883a 	mov	r4,r17
   40454:	80a0703a 	and	r16,r16,r2
   40458:	18803fcc 	andi	r2,r3,255
   4045c:	100695fa 	slli	r3,r2,23
   40460:	20803fcc 	andi	r2,r4,255
   40464:	100897fa 	slli	r4,r2,31
   40468:	00802034 	movhi	r2,128
   4046c:	10bfffc4 	addi	r2,r2,-1
   40470:	8084703a 	and	r2,r16,r2
   40474:	10c4b03a 	or	r2,r2,r3
   40478:	1104b03a 	or	r2,r2,r4
   4047c:	dfc00217 	ldw	ra,8(sp)
   40480:	dc400117 	ldw	r17,4(sp)
   40484:	dc000017 	ldw	r16,0(sp)
   40488:	dec00304 	addi	sp,sp,12
   4048c:	f800283a 	ret
   40490:	01002644 	movi	r4,153
   40494:	20c01c16 	blt	r4,r3,40508 <__floatsisf+0x100>
   40498:	20c9c83a 	sub	r4,r4,r3
   4049c:	8120983a 	sll	r16,r16,r4
   404a0:	013f0034 	movhi	r4,64512
   404a4:	213fffc4 	addi	r4,r4,-1
   404a8:	814001cc 	andi	r5,r16,7
   404ac:	8108703a 	and	r4,r16,r4
   404b0:	28000426 	beq	r5,zero,404c4 <__floatsisf+0xbc>
   404b4:	840003cc 	andi	r16,r16,15
   404b8:	01400104 	movi	r5,4
   404bc:	81400126 	beq	r16,r5,404c4 <__floatsisf+0xbc>
   404c0:	2149883a 	add	r4,r4,r5
   404c4:	2141002c 	andhi	r5,r4,1024
   404c8:	28000526 	beq	r5,zero,404e0 <__floatsisf+0xd8>
   404cc:	00c027c4 	movi	r3,159
   404d0:	1887c83a 	sub	r3,r3,r2
   404d4:	00bf0034 	movhi	r2,64512
   404d8:	10bfffc4 	addi	r2,r2,-1
   404dc:	2088703a 	and	r4,r4,r2
   404e0:	202091ba 	slli	r16,r4,6
   404e4:	8809883a 	mov	r4,r17
   404e8:	8020d27a 	srli	r16,r16,9
   404ec:	003fda06 	br	40458 <__alt_data_end+0xfffd9358>
   404f0:	0009883a 	mov	r4,zero
   404f4:	0007883a 	mov	r3,zero
   404f8:	0021883a 	mov	r16,zero
   404fc:	003fd606 	br	40458 <__alt_data_end+0xfffd9358>
   40500:	0121c83a 	sub	r16,zero,r4
   40504:	003fc806 	br	40428 <__alt_data_end+0xfffd9328>
   40508:	01002e44 	movi	r4,185
   4050c:	20c9c83a 	sub	r4,r4,r3
   40510:	01400144 	movi	r5,5
   40514:	8108983a 	sll	r4,r16,r4
   40518:	288bc83a 	sub	r5,r5,r2
   4051c:	8160d83a 	srl	r16,r16,r5
   40520:	2008c03a 	cmpne	r4,r4,zero
   40524:	8120b03a 	or	r16,r16,r4
   40528:	003fdd06 	br	404a0 <__alt_data_end+0xfffd93a0>

0004052c <__divdf3>:
   4052c:	defff204 	addi	sp,sp,-56
   40530:	dd400915 	stw	r21,36(sp)
   40534:	282ad53a 	srli	r21,r5,20
   40538:	dd000815 	stw	r20,32(sp)
   4053c:	2828d7fa 	srli	r20,r5,31
   40540:	dc000415 	stw	r16,16(sp)
   40544:	04000434 	movhi	r16,16
   40548:	df000c15 	stw	fp,48(sp)
   4054c:	843fffc4 	addi	r16,r16,-1
   40550:	dfc00d15 	stw	ra,52(sp)
   40554:	ddc00b15 	stw	r23,44(sp)
   40558:	dd800a15 	stw	r22,40(sp)
   4055c:	dcc00715 	stw	r19,28(sp)
   40560:	dc800615 	stw	r18,24(sp)
   40564:	dc400515 	stw	r17,20(sp)
   40568:	ad41ffcc 	andi	r21,r21,2047
   4056c:	2c20703a 	and	r16,r5,r16
   40570:	a7003fcc 	andi	fp,r20,255
   40574:	a8006126 	beq	r21,zero,406fc <__divdf3+0x1d0>
   40578:	0081ffc4 	movi	r2,2047
   4057c:	2025883a 	mov	r18,r4
   40580:	a8803726 	beq	r21,r2,40660 <__divdf3+0x134>
   40584:	80800434 	orhi	r2,r16,16
   40588:	100490fa 	slli	r2,r2,3
   4058c:	2020d77a 	srli	r16,r4,29
   40590:	202490fa 	slli	r18,r4,3
   40594:	ad7f0044 	addi	r21,r21,-1023
   40598:	80a0b03a 	or	r16,r16,r2
   4059c:	0027883a 	mov	r19,zero
   405a0:	0013883a 	mov	r9,zero
   405a4:	3804d53a 	srli	r2,r7,20
   405a8:	382cd7fa 	srli	r22,r7,31
   405ac:	04400434 	movhi	r17,16
   405b0:	8c7fffc4 	addi	r17,r17,-1
   405b4:	1081ffcc 	andi	r2,r2,2047
   405b8:	3011883a 	mov	r8,r6
   405bc:	3c62703a 	and	r17,r7,r17
   405c0:	b5c03fcc 	andi	r23,r22,255
   405c4:	10006c26 	beq	r2,zero,40778 <__divdf3+0x24c>
   405c8:	00c1ffc4 	movi	r3,2047
   405cc:	10c06426 	beq	r2,r3,40760 <__divdf3+0x234>
   405d0:	88c00434 	orhi	r3,r17,16
   405d4:	180690fa 	slli	r3,r3,3
   405d8:	3022d77a 	srli	r17,r6,29
   405dc:	301090fa 	slli	r8,r6,3
   405e0:	10bf0044 	addi	r2,r2,-1023
   405e4:	88e2b03a 	or	r17,r17,r3
   405e8:	000f883a 	mov	r7,zero
   405ec:	a58cf03a 	xor	r6,r20,r22
   405f0:	3cc8b03a 	or	r4,r7,r19
   405f4:	a8abc83a 	sub	r21,r21,r2
   405f8:	008003c4 	movi	r2,15
   405fc:	3007883a 	mov	r3,r6
   40600:	34c03fcc 	andi	r19,r6,255
   40604:	11009036 	bltu	r2,r4,40848 <__divdf3+0x31c>
   40608:	200890ba 	slli	r4,r4,2
   4060c:	00800134 	movhi	r2,4
   40610:	10818804 	addi	r2,r2,1568
   40614:	2089883a 	add	r4,r4,r2
   40618:	20800017 	ldw	r2,0(r4)
   4061c:	1000683a 	jmp	r2
   40620:	00040848 	cmpgei	zero,zero,4129
   40624:	00040698 	cmpnei	zero,zero,4122
   40628:	00040838 	rdprs	zero,zero,4128
   4062c:	0004068c 	andi	zero,zero,4122
   40630:	00040838 	rdprs	zero,zero,4128
   40634:	0004080c 	andi	zero,zero,4128
   40638:	00040838 	rdprs	zero,zero,4128
   4063c:	0004068c 	andi	zero,zero,4122
   40640:	00040698 	cmpnei	zero,zero,4122
   40644:	00040698 	cmpnei	zero,zero,4122
   40648:	0004080c 	andi	zero,zero,4128
   4064c:	0004068c 	andi	zero,zero,4122
   40650:	0004067c 	xorhi	zero,zero,4121
   40654:	0004067c 	xorhi	zero,zero,4121
   40658:	0004067c 	xorhi	zero,zero,4121
   4065c:	00040b2c 	andhi	zero,zero,4140
   40660:	2404b03a 	or	r2,r4,r16
   40664:	1000661e 	bne	r2,zero,40800 <__divdf3+0x2d4>
   40668:	04c00204 	movi	r19,8
   4066c:	0021883a 	mov	r16,zero
   40670:	0025883a 	mov	r18,zero
   40674:	02400084 	movi	r9,2
   40678:	003fca06 	br	405a4 <__alt_data_end+0xfffd94a4>
   4067c:	8023883a 	mov	r17,r16
   40680:	9011883a 	mov	r8,r18
   40684:	e02f883a 	mov	r23,fp
   40688:	480f883a 	mov	r7,r9
   4068c:	00800084 	movi	r2,2
   40690:	3881311e 	bne	r7,r2,40b58 <__divdf3+0x62c>
   40694:	b827883a 	mov	r19,r23
   40698:	98c0004c 	andi	r3,r19,1
   4069c:	0081ffc4 	movi	r2,2047
   406a0:	000b883a 	mov	r5,zero
   406a4:	0025883a 	mov	r18,zero
   406a8:	1004953a 	slli	r2,r2,20
   406ac:	18c03fcc 	andi	r3,r3,255
   406b0:	04400434 	movhi	r17,16
   406b4:	8c7fffc4 	addi	r17,r17,-1
   406b8:	180697fa 	slli	r3,r3,31
   406bc:	2c4a703a 	and	r5,r5,r17
   406c0:	288ab03a 	or	r5,r5,r2
   406c4:	28c6b03a 	or	r3,r5,r3
   406c8:	9005883a 	mov	r2,r18
   406cc:	dfc00d17 	ldw	ra,52(sp)
   406d0:	df000c17 	ldw	fp,48(sp)
   406d4:	ddc00b17 	ldw	r23,44(sp)
   406d8:	dd800a17 	ldw	r22,40(sp)
   406dc:	dd400917 	ldw	r21,36(sp)
   406e0:	dd000817 	ldw	r20,32(sp)
   406e4:	dcc00717 	ldw	r19,28(sp)
   406e8:	dc800617 	ldw	r18,24(sp)
   406ec:	dc400517 	ldw	r17,20(sp)
   406f0:	dc000417 	ldw	r16,16(sp)
   406f4:	dec00e04 	addi	sp,sp,56
   406f8:	f800283a 	ret
   406fc:	2404b03a 	or	r2,r4,r16
   40700:	2027883a 	mov	r19,r4
   40704:	10003926 	beq	r2,zero,407ec <__divdf3+0x2c0>
   40708:	80012e26 	beq	r16,zero,40bc4 <__divdf3+0x698>
   4070c:	8009883a 	mov	r4,r16
   40710:	d9800315 	stw	r6,12(sp)
   40714:	d9c00215 	stw	r7,8(sp)
   40718:	0040f240 	call	40f24 <__clzsi2>
   4071c:	d9800317 	ldw	r6,12(sp)
   40720:	d9c00217 	ldw	r7,8(sp)
   40724:	113ffd44 	addi	r4,r2,-11
   40728:	00c00704 	movi	r3,28
   4072c:	19012116 	blt	r3,r4,40bb4 <__divdf3+0x688>
   40730:	00c00744 	movi	r3,29
   40734:	147ffe04 	addi	r17,r2,-8
   40738:	1907c83a 	sub	r3,r3,r4
   4073c:	8460983a 	sll	r16,r16,r17
   40740:	98c6d83a 	srl	r3,r19,r3
   40744:	9c64983a 	sll	r18,r19,r17
   40748:	1c20b03a 	or	r16,r3,r16
   4074c:	1080fcc4 	addi	r2,r2,1011
   40750:	00abc83a 	sub	r21,zero,r2
   40754:	0027883a 	mov	r19,zero
   40758:	0013883a 	mov	r9,zero
   4075c:	003f9106 	br	405a4 <__alt_data_end+0xfffd94a4>
   40760:	3446b03a 	or	r3,r6,r17
   40764:	18001f1e 	bne	r3,zero,407e4 <__divdf3+0x2b8>
   40768:	0023883a 	mov	r17,zero
   4076c:	0011883a 	mov	r8,zero
   40770:	01c00084 	movi	r7,2
   40774:	003f9d06 	br	405ec <__alt_data_end+0xfffd94ec>
   40778:	3446b03a 	or	r3,r6,r17
   4077c:	18001526 	beq	r3,zero,407d4 <__divdf3+0x2a8>
   40780:	88011b26 	beq	r17,zero,40bf0 <__divdf3+0x6c4>
   40784:	8809883a 	mov	r4,r17
   40788:	d9800315 	stw	r6,12(sp)
   4078c:	da400115 	stw	r9,4(sp)
   40790:	0040f240 	call	40f24 <__clzsi2>
   40794:	d9800317 	ldw	r6,12(sp)
   40798:	da400117 	ldw	r9,4(sp)
   4079c:	113ffd44 	addi	r4,r2,-11
   407a0:	00c00704 	movi	r3,28
   407a4:	19010e16 	blt	r3,r4,40be0 <__divdf3+0x6b4>
   407a8:	00c00744 	movi	r3,29
   407ac:	123ffe04 	addi	r8,r2,-8
   407b0:	1907c83a 	sub	r3,r3,r4
   407b4:	8a22983a 	sll	r17,r17,r8
   407b8:	30c6d83a 	srl	r3,r6,r3
   407bc:	3210983a 	sll	r8,r6,r8
   407c0:	1c62b03a 	or	r17,r3,r17
   407c4:	1080fcc4 	addi	r2,r2,1011
   407c8:	0085c83a 	sub	r2,zero,r2
   407cc:	000f883a 	mov	r7,zero
   407d0:	003f8606 	br	405ec <__alt_data_end+0xfffd94ec>
   407d4:	0023883a 	mov	r17,zero
   407d8:	0011883a 	mov	r8,zero
   407dc:	01c00044 	movi	r7,1
   407e0:	003f8206 	br	405ec <__alt_data_end+0xfffd94ec>
   407e4:	01c000c4 	movi	r7,3
   407e8:	003f8006 	br	405ec <__alt_data_end+0xfffd94ec>
   407ec:	04c00104 	movi	r19,4
   407f0:	0021883a 	mov	r16,zero
   407f4:	0025883a 	mov	r18,zero
   407f8:	02400044 	movi	r9,1
   407fc:	003f6906 	br	405a4 <__alt_data_end+0xfffd94a4>
   40800:	04c00304 	movi	r19,12
   40804:	024000c4 	movi	r9,3
   40808:	003f6606 	br	405a4 <__alt_data_end+0xfffd94a4>
   4080c:	01400434 	movhi	r5,16
   40810:	0007883a 	mov	r3,zero
   40814:	297fffc4 	addi	r5,r5,-1
   40818:	04bfffc4 	movi	r18,-1
   4081c:	0081ffc4 	movi	r2,2047
   40820:	003fa106 	br	406a8 <__alt_data_end+0xfffd95a8>
   40824:	00c00044 	movi	r3,1
   40828:	1887c83a 	sub	r3,r3,r2
   4082c:	01000e04 	movi	r4,56
   40830:	20c1210e 	bge	r4,r3,40cb8 <__divdf3+0x78c>
   40834:	98c0004c 	andi	r3,r19,1
   40838:	0005883a 	mov	r2,zero
   4083c:	000b883a 	mov	r5,zero
   40840:	0025883a 	mov	r18,zero
   40844:	003f9806 	br	406a8 <__alt_data_end+0xfffd95a8>
   40848:	8c00fd36 	bltu	r17,r16,40c40 <__divdf3+0x714>
   4084c:	8440fb26 	beq	r16,r17,40c3c <__divdf3+0x710>
   40850:	8007883a 	mov	r3,r16
   40854:	ad7fffc4 	addi	r21,r21,-1
   40858:	0021883a 	mov	r16,zero
   4085c:	4004d63a 	srli	r2,r8,24
   40860:	8822923a 	slli	r17,r17,8
   40864:	1809883a 	mov	r4,r3
   40868:	402c923a 	slli	r22,r8,8
   4086c:	88b8b03a 	or	fp,r17,r2
   40870:	e028d43a 	srli	r20,fp,16
   40874:	d8c00015 	stw	r3,0(sp)
   40878:	e5ffffcc 	andi	r23,fp,65535
   4087c:	a00b883a 	mov	r5,r20
   40880:	00410800 	call	41080 <__udivsi3>
   40884:	d8c00017 	ldw	r3,0(sp)
   40888:	a00b883a 	mov	r5,r20
   4088c:	d8800315 	stw	r2,12(sp)
   40890:	1809883a 	mov	r4,r3
   40894:	00410e40 	call	410e4 <__umodsi3>
   40898:	d9800317 	ldw	r6,12(sp)
   4089c:	1006943a 	slli	r3,r2,16
   408a0:	9004d43a 	srli	r2,r18,16
   408a4:	b9a3383a 	mul	r17,r23,r6
   408a8:	10c4b03a 	or	r2,r2,r3
   408ac:	1440062e 	bgeu	r2,r17,408c8 <__divdf3+0x39c>
   408b0:	1705883a 	add	r2,r2,fp
   408b4:	30ffffc4 	addi	r3,r6,-1
   408b8:	1700ee36 	bltu	r2,fp,40c74 <__divdf3+0x748>
   408bc:	1440ed2e 	bgeu	r2,r17,40c74 <__divdf3+0x748>
   408c0:	31bfff84 	addi	r6,r6,-2
   408c4:	1705883a 	add	r2,r2,fp
   408c8:	1463c83a 	sub	r17,r2,r17
   408cc:	a00b883a 	mov	r5,r20
   408d0:	8809883a 	mov	r4,r17
   408d4:	d9800315 	stw	r6,12(sp)
   408d8:	00410800 	call	41080 <__udivsi3>
   408dc:	a00b883a 	mov	r5,r20
   408e0:	8809883a 	mov	r4,r17
   408e4:	d8800215 	stw	r2,8(sp)
   408e8:	00410e40 	call	410e4 <__umodsi3>
   408ec:	d9c00217 	ldw	r7,8(sp)
   408f0:	1004943a 	slli	r2,r2,16
   408f4:	94bfffcc 	andi	r18,r18,65535
   408f8:	b9d1383a 	mul	r8,r23,r7
   408fc:	90a4b03a 	or	r18,r18,r2
   40900:	d9800317 	ldw	r6,12(sp)
   40904:	9200062e 	bgeu	r18,r8,40920 <__divdf3+0x3f4>
   40908:	9725883a 	add	r18,r18,fp
   4090c:	38bfffc4 	addi	r2,r7,-1
   40910:	9700d636 	bltu	r18,fp,40c6c <__divdf3+0x740>
   40914:	9200d52e 	bgeu	r18,r8,40c6c <__divdf3+0x740>
   40918:	39ffff84 	addi	r7,r7,-2
   4091c:	9725883a 	add	r18,r18,fp
   40920:	3004943a 	slli	r2,r6,16
   40924:	b012d43a 	srli	r9,r22,16
   40928:	b1bfffcc 	andi	r6,r22,65535
   4092c:	11e2b03a 	or	r17,r2,r7
   40930:	8806d43a 	srli	r3,r17,16
   40934:	893fffcc 	andi	r4,r17,65535
   40938:	218b383a 	mul	r5,r4,r6
   4093c:	30c5383a 	mul	r2,r6,r3
   40940:	2249383a 	mul	r4,r4,r9
   40944:	280ed43a 	srli	r7,r5,16
   40948:	9225c83a 	sub	r18,r18,r8
   4094c:	2089883a 	add	r4,r4,r2
   40950:	3909883a 	add	r4,r7,r4
   40954:	1a47383a 	mul	r3,r3,r9
   40958:	2080022e 	bgeu	r4,r2,40964 <__divdf3+0x438>
   4095c:	00800074 	movhi	r2,1
   40960:	1887883a 	add	r3,r3,r2
   40964:	2004d43a 	srli	r2,r4,16
   40968:	2008943a 	slli	r4,r4,16
   4096c:	297fffcc 	andi	r5,r5,65535
   40970:	10c7883a 	add	r3,r2,r3
   40974:	2149883a 	add	r4,r4,r5
   40978:	90c0a536 	bltu	r18,r3,40c10 <__divdf3+0x6e4>
   4097c:	90c0bf26 	beq	r18,r3,40c7c <__divdf3+0x750>
   40980:	90c7c83a 	sub	r3,r18,r3
   40984:	810fc83a 	sub	r7,r16,r4
   40988:	81e5803a 	cmpltu	r18,r16,r7
   4098c:	1ca5c83a 	sub	r18,r3,r18
   40990:	e480c126 	beq	fp,r18,40c98 <__divdf3+0x76c>
   40994:	a00b883a 	mov	r5,r20
   40998:	9009883a 	mov	r4,r18
   4099c:	d9800315 	stw	r6,12(sp)
   409a0:	d9c00215 	stw	r7,8(sp)
   409a4:	da400115 	stw	r9,4(sp)
   409a8:	00410800 	call	41080 <__udivsi3>
   409ac:	a00b883a 	mov	r5,r20
   409b0:	9009883a 	mov	r4,r18
   409b4:	d8800015 	stw	r2,0(sp)
   409b8:	00410e40 	call	410e4 <__umodsi3>
   409bc:	d9c00217 	ldw	r7,8(sp)
   409c0:	da000017 	ldw	r8,0(sp)
   409c4:	1006943a 	slli	r3,r2,16
   409c8:	3804d43a 	srli	r2,r7,16
   409cc:	ba21383a 	mul	r16,r23,r8
   409d0:	d9800317 	ldw	r6,12(sp)
   409d4:	10c4b03a 	or	r2,r2,r3
   409d8:	da400117 	ldw	r9,4(sp)
   409dc:	1400062e 	bgeu	r2,r16,409f8 <__divdf3+0x4cc>
   409e0:	1705883a 	add	r2,r2,fp
   409e4:	40ffffc4 	addi	r3,r8,-1
   409e8:	1700ad36 	bltu	r2,fp,40ca0 <__divdf3+0x774>
   409ec:	1400ac2e 	bgeu	r2,r16,40ca0 <__divdf3+0x774>
   409f0:	423fff84 	addi	r8,r8,-2
   409f4:	1705883a 	add	r2,r2,fp
   409f8:	1421c83a 	sub	r16,r2,r16
   409fc:	a00b883a 	mov	r5,r20
   40a00:	8009883a 	mov	r4,r16
   40a04:	d9800315 	stw	r6,12(sp)
   40a08:	d9c00215 	stw	r7,8(sp)
   40a0c:	da000015 	stw	r8,0(sp)
   40a10:	da400115 	stw	r9,4(sp)
   40a14:	00410800 	call	41080 <__udivsi3>
   40a18:	8009883a 	mov	r4,r16
   40a1c:	a00b883a 	mov	r5,r20
   40a20:	1025883a 	mov	r18,r2
   40a24:	00410e40 	call	410e4 <__umodsi3>
   40a28:	d9c00217 	ldw	r7,8(sp)
   40a2c:	1004943a 	slli	r2,r2,16
   40a30:	bcaf383a 	mul	r23,r23,r18
   40a34:	393fffcc 	andi	r4,r7,65535
   40a38:	2088b03a 	or	r4,r4,r2
   40a3c:	d9800317 	ldw	r6,12(sp)
   40a40:	da000017 	ldw	r8,0(sp)
   40a44:	da400117 	ldw	r9,4(sp)
   40a48:	25c0062e 	bgeu	r4,r23,40a64 <__divdf3+0x538>
   40a4c:	2709883a 	add	r4,r4,fp
   40a50:	90bfffc4 	addi	r2,r18,-1
   40a54:	27009436 	bltu	r4,fp,40ca8 <__divdf3+0x77c>
   40a58:	25c0932e 	bgeu	r4,r23,40ca8 <__divdf3+0x77c>
   40a5c:	94bfff84 	addi	r18,r18,-2
   40a60:	2709883a 	add	r4,r4,fp
   40a64:	4004943a 	slli	r2,r8,16
   40a68:	25efc83a 	sub	r23,r4,r23
   40a6c:	1490b03a 	or	r8,r2,r18
   40a70:	4008d43a 	srli	r4,r8,16
   40a74:	40ffffcc 	andi	r3,r8,65535
   40a78:	30c5383a 	mul	r2,r6,r3
   40a7c:	1a47383a 	mul	r3,r3,r9
   40a80:	310d383a 	mul	r6,r6,r4
   40a84:	100ad43a 	srli	r5,r2,16
   40a88:	4913383a 	mul	r9,r9,r4
   40a8c:	1987883a 	add	r3,r3,r6
   40a90:	28c7883a 	add	r3,r5,r3
   40a94:	1980022e 	bgeu	r3,r6,40aa0 <__divdf3+0x574>
   40a98:	01000074 	movhi	r4,1
   40a9c:	4913883a 	add	r9,r9,r4
   40aa0:	1808d43a 	srli	r4,r3,16
   40aa4:	1806943a 	slli	r3,r3,16
   40aa8:	10bfffcc 	andi	r2,r2,65535
   40aac:	2253883a 	add	r9,r4,r9
   40ab0:	1887883a 	add	r3,r3,r2
   40ab4:	ba403836 	bltu	r23,r9,40b98 <__divdf3+0x66c>
   40ab8:	ba403626 	beq	r23,r9,40b94 <__divdf3+0x668>
   40abc:	42000054 	ori	r8,r8,1
   40ac0:	a880ffc4 	addi	r2,r21,1023
   40ac4:	00bf570e 	bge	zero,r2,40824 <__alt_data_end+0xfffd9724>
   40ac8:	40c001cc 	andi	r3,r8,7
   40acc:	18000726 	beq	r3,zero,40aec <__divdf3+0x5c0>
   40ad0:	40c003cc 	andi	r3,r8,15
   40ad4:	01000104 	movi	r4,4
   40ad8:	19000426 	beq	r3,r4,40aec <__divdf3+0x5c0>
   40adc:	4107883a 	add	r3,r8,r4
   40ae0:	1a11803a 	cmpltu	r8,r3,r8
   40ae4:	8a23883a 	add	r17,r17,r8
   40ae8:	1811883a 	mov	r8,r3
   40aec:	88c0402c 	andhi	r3,r17,256
   40af0:	18000426 	beq	r3,zero,40b04 <__divdf3+0x5d8>
   40af4:	00ffc034 	movhi	r3,65280
   40af8:	18ffffc4 	addi	r3,r3,-1
   40afc:	a8810004 	addi	r2,r21,1024
   40b00:	88e2703a 	and	r17,r17,r3
   40b04:	00c1ff84 	movi	r3,2046
   40b08:	18bee316 	blt	r3,r2,40698 <__alt_data_end+0xfffd9598>
   40b0c:	8824977a 	slli	r18,r17,29
   40b10:	4010d0fa 	srli	r8,r8,3
   40b14:	8822927a 	slli	r17,r17,9
   40b18:	1081ffcc 	andi	r2,r2,2047
   40b1c:	9224b03a 	or	r18,r18,r8
   40b20:	880ad33a 	srli	r5,r17,12
   40b24:	98c0004c 	andi	r3,r19,1
   40b28:	003edf06 	br	406a8 <__alt_data_end+0xfffd95a8>
   40b2c:	8080022c 	andhi	r2,r16,8
   40b30:	10001226 	beq	r2,zero,40b7c <__divdf3+0x650>
   40b34:	8880022c 	andhi	r2,r17,8
   40b38:	1000101e 	bne	r2,zero,40b7c <__divdf3+0x650>
   40b3c:	00800434 	movhi	r2,16
   40b40:	89400234 	orhi	r5,r17,8
   40b44:	10bfffc4 	addi	r2,r2,-1
   40b48:	b007883a 	mov	r3,r22
   40b4c:	288a703a 	and	r5,r5,r2
   40b50:	4025883a 	mov	r18,r8
   40b54:	003f3106 	br	4081c <__alt_data_end+0xfffd971c>
   40b58:	008000c4 	movi	r2,3
   40b5c:	3880a626 	beq	r7,r2,40df8 <__divdf3+0x8cc>
   40b60:	00800044 	movi	r2,1
   40b64:	3880521e 	bne	r7,r2,40cb0 <__divdf3+0x784>
   40b68:	b807883a 	mov	r3,r23
   40b6c:	0005883a 	mov	r2,zero
   40b70:	000b883a 	mov	r5,zero
   40b74:	0025883a 	mov	r18,zero
   40b78:	003ecb06 	br	406a8 <__alt_data_end+0xfffd95a8>
   40b7c:	00800434 	movhi	r2,16
   40b80:	81400234 	orhi	r5,r16,8
   40b84:	10bfffc4 	addi	r2,r2,-1
   40b88:	a007883a 	mov	r3,r20
   40b8c:	288a703a 	and	r5,r5,r2
   40b90:	003f2206 	br	4081c <__alt_data_end+0xfffd971c>
   40b94:	183fca26 	beq	r3,zero,40ac0 <__alt_data_end+0xfffd99c0>
   40b98:	e5ef883a 	add	r23,fp,r23
   40b9c:	40bfffc4 	addi	r2,r8,-1
   40ba0:	bf00392e 	bgeu	r23,fp,40c88 <__divdf3+0x75c>
   40ba4:	1011883a 	mov	r8,r2
   40ba8:	ba7fc41e 	bne	r23,r9,40abc <__alt_data_end+0xfffd99bc>
   40bac:	b0ffc31e 	bne	r22,r3,40abc <__alt_data_end+0xfffd99bc>
   40bb0:	003fc306 	br	40ac0 <__alt_data_end+0xfffd99c0>
   40bb4:	143ff604 	addi	r16,r2,-40
   40bb8:	9c20983a 	sll	r16,r19,r16
   40bbc:	0025883a 	mov	r18,zero
   40bc0:	003ee206 	br	4074c <__alt_data_end+0xfffd964c>
   40bc4:	d9800315 	stw	r6,12(sp)
   40bc8:	d9c00215 	stw	r7,8(sp)
   40bcc:	0040f240 	call	40f24 <__clzsi2>
   40bd0:	10800804 	addi	r2,r2,32
   40bd4:	d9c00217 	ldw	r7,8(sp)
   40bd8:	d9800317 	ldw	r6,12(sp)
   40bdc:	003ed106 	br	40724 <__alt_data_end+0xfffd9624>
   40be0:	147ff604 	addi	r17,r2,-40
   40be4:	3462983a 	sll	r17,r6,r17
   40be8:	0011883a 	mov	r8,zero
   40bec:	003ef506 	br	407c4 <__alt_data_end+0xfffd96c4>
   40bf0:	3009883a 	mov	r4,r6
   40bf4:	d9800315 	stw	r6,12(sp)
   40bf8:	da400115 	stw	r9,4(sp)
   40bfc:	0040f240 	call	40f24 <__clzsi2>
   40c00:	10800804 	addi	r2,r2,32
   40c04:	da400117 	ldw	r9,4(sp)
   40c08:	d9800317 	ldw	r6,12(sp)
   40c0c:	003ee306 	br	4079c <__alt_data_end+0xfffd969c>
   40c10:	85a1883a 	add	r16,r16,r22
   40c14:	8585803a 	cmpltu	r2,r16,r22
   40c18:	1705883a 	add	r2,r2,fp
   40c1c:	14a5883a 	add	r18,r2,r18
   40c20:	88bfffc4 	addi	r2,r17,-1
   40c24:	e4800c2e 	bgeu	fp,r18,40c58 <__divdf3+0x72c>
   40c28:	90c03e36 	bltu	r18,r3,40d24 <__divdf3+0x7f8>
   40c2c:	1c806926 	beq	r3,r18,40dd4 <__divdf3+0x8a8>
   40c30:	90c7c83a 	sub	r3,r18,r3
   40c34:	1023883a 	mov	r17,r2
   40c38:	003f5206 	br	40984 <__alt_data_end+0xfffd9884>
   40c3c:	923f0436 	bltu	r18,r8,40850 <__alt_data_end+0xfffd9750>
   40c40:	800897fa 	slli	r4,r16,31
   40c44:	9004d07a 	srli	r2,r18,1
   40c48:	8006d07a 	srli	r3,r16,1
   40c4c:	902097fa 	slli	r16,r18,31
   40c50:	20a4b03a 	or	r18,r4,r2
   40c54:	003f0106 	br	4085c <__alt_data_end+0xfffd975c>
   40c58:	e4bff51e 	bne	fp,r18,40c30 <__alt_data_end+0xfffd9b30>
   40c5c:	85bff22e 	bgeu	r16,r22,40c28 <__alt_data_end+0xfffd9b28>
   40c60:	e0c7c83a 	sub	r3,fp,r3
   40c64:	1023883a 	mov	r17,r2
   40c68:	003f4606 	br	40984 <__alt_data_end+0xfffd9884>
   40c6c:	100f883a 	mov	r7,r2
   40c70:	003f2b06 	br	40920 <__alt_data_end+0xfffd9820>
   40c74:	180d883a 	mov	r6,r3
   40c78:	003f1306 	br	408c8 <__alt_data_end+0xfffd97c8>
   40c7c:	813fe436 	bltu	r16,r4,40c10 <__alt_data_end+0xfffd9b10>
   40c80:	0007883a 	mov	r3,zero
   40c84:	003f3f06 	br	40984 <__alt_data_end+0xfffd9884>
   40c88:	ba402c36 	bltu	r23,r9,40d3c <__divdf3+0x810>
   40c8c:	4dc05426 	beq	r9,r23,40de0 <__divdf3+0x8b4>
   40c90:	1011883a 	mov	r8,r2
   40c94:	003f8906 	br	40abc <__alt_data_end+0xfffd99bc>
   40c98:	023fffc4 	movi	r8,-1
   40c9c:	003f8806 	br	40ac0 <__alt_data_end+0xfffd99c0>
   40ca0:	1811883a 	mov	r8,r3
   40ca4:	003f5406 	br	409f8 <__alt_data_end+0xfffd98f8>
   40ca8:	1025883a 	mov	r18,r2
   40cac:	003f6d06 	br	40a64 <__alt_data_end+0xfffd9964>
   40cb0:	b827883a 	mov	r19,r23
   40cb4:	003f8206 	br	40ac0 <__alt_data_end+0xfffd99c0>
   40cb8:	010007c4 	movi	r4,31
   40cbc:	20c02616 	blt	r4,r3,40d58 <__divdf3+0x82c>
   40cc0:	00800804 	movi	r2,32
   40cc4:	10c5c83a 	sub	r2,r2,r3
   40cc8:	888a983a 	sll	r5,r17,r2
   40ccc:	40c8d83a 	srl	r4,r8,r3
   40cd0:	4084983a 	sll	r2,r8,r2
   40cd4:	88e2d83a 	srl	r17,r17,r3
   40cd8:	2906b03a 	or	r3,r5,r4
   40cdc:	1004c03a 	cmpne	r2,r2,zero
   40ce0:	1886b03a 	or	r3,r3,r2
   40ce4:	188001cc 	andi	r2,r3,7
   40ce8:	10000726 	beq	r2,zero,40d08 <__divdf3+0x7dc>
   40cec:	188003cc 	andi	r2,r3,15
   40cf0:	01000104 	movi	r4,4
   40cf4:	11000426 	beq	r2,r4,40d08 <__divdf3+0x7dc>
   40cf8:	1805883a 	mov	r2,r3
   40cfc:	10c00104 	addi	r3,r2,4
   40d00:	1885803a 	cmpltu	r2,r3,r2
   40d04:	88a3883a 	add	r17,r17,r2
   40d08:	8880202c 	andhi	r2,r17,128
   40d0c:	10002726 	beq	r2,zero,40dac <__divdf3+0x880>
   40d10:	98c0004c 	andi	r3,r19,1
   40d14:	00800044 	movi	r2,1
   40d18:	000b883a 	mov	r5,zero
   40d1c:	0025883a 	mov	r18,zero
   40d20:	003e6106 	br	406a8 <__alt_data_end+0xfffd95a8>
   40d24:	85a1883a 	add	r16,r16,r22
   40d28:	8585803a 	cmpltu	r2,r16,r22
   40d2c:	1705883a 	add	r2,r2,fp
   40d30:	14a5883a 	add	r18,r2,r18
   40d34:	8c7fff84 	addi	r17,r17,-2
   40d38:	003f1106 	br	40980 <__alt_data_end+0xfffd9880>
   40d3c:	b589883a 	add	r4,r22,r22
   40d40:	25ad803a 	cmpltu	r22,r4,r22
   40d44:	b739883a 	add	fp,r22,fp
   40d48:	40bfff84 	addi	r2,r8,-2
   40d4c:	bf2f883a 	add	r23,r23,fp
   40d50:	202d883a 	mov	r22,r4
   40d54:	003f9306 	br	40ba4 <__alt_data_end+0xfffd9aa4>
   40d58:	013ff844 	movi	r4,-31
   40d5c:	2085c83a 	sub	r2,r4,r2
   40d60:	8888d83a 	srl	r4,r17,r2
   40d64:	00800804 	movi	r2,32
   40d68:	18802126 	beq	r3,r2,40df0 <__divdf3+0x8c4>
   40d6c:	00801004 	movi	r2,64
   40d70:	10c5c83a 	sub	r2,r2,r3
   40d74:	8884983a 	sll	r2,r17,r2
   40d78:	1204b03a 	or	r2,r2,r8
   40d7c:	1004c03a 	cmpne	r2,r2,zero
   40d80:	2084b03a 	or	r2,r4,r2
   40d84:	144001cc 	andi	r17,r2,7
   40d88:	88000d1e 	bne	r17,zero,40dc0 <__divdf3+0x894>
   40d8c:	000b883a 	mov	r5,zero
   40d90:	1024d0fa 	srli	r18,r2,3
   40d94:	98c0004c 	andi	r3,r19,1
   40d98:	0005883a 	mov	r2,zero
   40d9c:	9464b03a 	or	r18,r18,r17
   40da0:	003e4106 	br	406a8 <__alt_data_end+0xfffd95a8>
   40da4:	1007883a 	mov	r3,r2
   40da8:	0023883a 	mov	r17,zero
   40dac:	880a927a 	slli	r5,r17,9
   40db0:	1805883a 	mov	r2,r3
   40db4:	8822977a 	slli	r17,r17,29
   40db8:	280ad33a 	srli	r5,r5,12
   40dbc:	003ff406 	br	40d90 <__alt_data_end+0xfffd9c90>
   40dc0:	10c003cc 	andi	r3,r2,15
   40dc4:	01000104 	movi	r4,4
   40dc8:	193ff626 	beq	r3,r4,40da4 <__alt_data_end+0xfffd9ca4>
   40dcc:	0023883a 	mov	r17,zero
   40dd0:	003fca06 	br	40cfc <__alt_data_end+0xfffd9bfc>
   40dd4:	813fd336 	bltu	r16,r4,40d24 <__alt_data_end+0xfffd9c24>
   40dd8:	1023883a 	mov	r17,r2
   40ddc:	003fa806 	br	40c80 <__alt_data_end+0xfffd9b80>
   40de0:	b0ffd636 	bltu	r22,r3,40d3c <__alt_data_end+0xfffd9c3c>
   40de4:	1011883a 	mov	r8,r2
   40de8:	b0ff341e 	bne	r22,r3,40abc <__alt_data_end+0xfffd99bc>
   40dec:	003f3406 	br	40ac0 <__alt_data_end+0xfffd99c0>
   40df0:	0005883a 	mov	r2,zero
   40df4:	003fe006 	br	40d78 <__alt_data_end+0xfffd9c78>
   40df8:	00800434 	movhi	r2,16
   40dfc:	89400234 	orhi	r5,r17,8
   40e00:	10bfffc4 	addi	r2,r2,-1
   40e04:	b807883a 	mov	r3,r23
   40e08:	288a703a 	and	r5,r5,r2
   40e0c:	4025883a 	mov	r18,r8
   40e10:	003e8206 	br	4081c <__alt_data_end+0xfffd971c>

00040e14 <__extendsfdf2>:
   40e14:	200ad5fa 	srli	r5,r4,23
   40e18:	defffd04 	addi	sp,sp,-12
   40e1c:	dc400115 	stw	r17,4(sp)
   40e20:	29403fcc 	andi	r5,r5,255
   40e24:	29800044 	addi	r6,r5,1
   40e28:	04402034 	movhi	r17,128
   40e2c:	dc000015 	stw	r16,0(sp)
   40e30:	8c7fffc4 	addi	r17,r17,-1
   40e34:	dfc00215 	stw	ra,8(sp)
   40e38:	31803fcc 	andi	r6,r6,255
   40e3c:	00800044 	movi	r2,1
   40e40:	8922703a 	and	r17,r17,r4
   40e44:	2020d7fa 	srli	r16,r4,31
   40e48:	1180110e 	bge	r2,r6,40e90 <__extendsfdf2+0x7c>
   40e4c:	880cd0fa 	srli	r6,r17,3
   40e50:	8822977a 	slli	r17,r17,29
   40e54:	2940e004 	addi	r5,r5,896
   40e58:	2941ffcc 	andi	r5,r5,2047
   40e5c:	2804953a 	slli	r2,r5,20
   40e60:	01400434 	movhi	r5,16
   40e64:	800697fa 	slli	r3,r16,31
   40e68:	297fffc4 	addi	r5,r5,-1
   40e6c:	314a703a 	and	r5,r6,r5
   40e70:	288ab03a 	or	r5,r5,r2
   40e74:	28c6b03a 	or	r3,r5,r3
   40e78:	8805883a 	mov	r2,r17
   40e7c:	dfc00217 	ldw	ra,8(sp)
   40e80:	dc400117 	ldw	r17,4(sp)
   40e84:	dc000017 	ldw	r16,0(sp)
   40e88:	dec00304 	addi	sp,sp,12
   40e8c:	f800283a 	ret
   40e90:	2800111e 	bne	r5,zero,40ed8 <__extendsfdf2+0xc4>
   40e94:	88001c26 	beq	r17,zero,40f08 <__extendsfdf2+0xf4>
   40e98:	8809883a 	mov	r4,r17
   40e9c:	0040f240 	call	40f24 <__clzsi2>
   40ea0:	00c00284 	movi	r3,10
   40ea4:	18801b16 	blt	r3,r2,40f14 <__extendsfdf2+0x100>
   40ea8:	018002c4 	movi	r6,11
   40eac:	308dc83a 	sub	r6,r6,r2
   40eb0:	11000544 	addi	r4,r2,21
   40eb4:	8986d83a 	srl	r3,r17,r6
   40eb8:	8922983a 	sll	r17,r17,r4
   40ebc:	0180e244 	movi	r6,905
   40ec0:	01400434 	movhi	r5,16
   40ec4:	3085c83a 	sub	r2,r6,r2
   40ec8:	297fffc4 	addi	r5,r5,-1
   40ecc:	194c703a 	and	r6,r3,r5
   40ed0:	1141ffcc 	andi	r5,r2,2047
   40ed4:	003fe006 	br	40e58 <__alt_data_end+0xfffd9d58>
   40ed8:	88000826 	beq	r17,zero,40efc <__extendsfdf2+0xe8>
   40edc:	880cd0fa 	srli	r6,r17,3
   40ee0:	00800434 	movhi	r2,16
   40ee4:	10bfffc4 	addi	r2,r2,-1
   40ee8:	31800234 	orhi	r6,r6,8
   40eec:	8822977a 	slli	r17,r17,29
   40ef0:	308c703a 	and	r6,r6,r2
   40ef4:	0141ffc4 	movi	r5,2047
   40ef8:	003fd706 	br	40e58 <__alt_data_end+0xfffd9d58>
   40efc:	0141ffc4 	movi	r5,2047
   40f00:	000d883a 	mov	r6,zero
   40f04:	003fd406 	br	40e58 <__alt_data_end+0xfffd9d58>
   40f08:	000b883a 	mov	r5,zero
   40f0c:	000d883a 	mov	r6,zero
   40f10:	003fd106 	br	40e58 <__alt_data_end+0xfffd9d58>
   40f14:	11bffd44 	addi	r6,r2,-11
   40f18:	8986983a 	sll	r3,r17,r6
   40f1c:	0023883a 	mov	r17,zero
   40f20:	003fe606 	br	40ebc <__alt_data_end+0xfffd9dbc>

00040f24 <__clzsi2>:
   40f24:	00bfffd4 	movui	r2,65535
   40f28:	11000536 	bltu	r2,r4,40f40 <__clzsi2+0x1c>
   40f2c:	00803fc4 	movi	r2,255
   40f30:	11000f36 	bltu	r2,r4,40f70 <__clzsi2+0x4c>
   40f34:	00800804 	movi	r2,32
   40f38:	0007883a 	mov	r3,zero
   40f3c:	00000506 	br	40f54 <__clzsi2+0x30>
   40f40:	00804034 	movhi	r2,256
   40f44:	10bfffc4 	addi	r2,r2,-1
   40f48:	11000c2e 	bgeu	r2,r4,40f7c <__clzsi2+0x58>
   40f4c:	00800204 	movi	r2,8
   40f50:	00c00604 	movi	r3,24
   40f54:	20c8d83a 	srl	r4,r4,r3
   40f58:	00c00174 	movhi	r3,5
   40f5c:	18fdf384 	addi	r3,r3,-2098
   40f60:	1909883a 	add	r4,r3,r4
   40f64:	20c00003 	ldbu	r3,0(r4)
   40f68:	10c5c83a 	sub	r2,r2,r3
   40f6c:	f800283a 	ret
   40f70:	00800604 	movi	r2,24
   40f74:	00c00204 	movi	r3,8
   40f78:	003ff606 	br	40f54 <__alt_data_end+0xfffd9e54>
   40f7c:	00800404 	movi	r2,16
   40f80:	1007883a 	mov	r3,r2
   40f84:	003ff306 	br	40f54 <__alt_data_end+0xfffd9e54>

00040f88 <__divsi3>:
   40f88:	20001b16 	blt	r4,zero,40ff8 <__divsi3+0x70>
   40f8c:	000f883a 	mov	r7,zero
   40f90:	28001616 	blt	r5,zero,40fec <__divsi3+0x64>
   40f94:	200d883a 	mov	r6,r4
   40f98:	29001a2e 	bgeu	r5,r4,41004 <__divsi3+0x7c>
   40f9c:	00800804 	movi	r2,32
   40fa0:	00c00044 	movi	r3,1
   40fa4:	00000106 	br	40fac <__divsi3+0x24>
   40fa8:	10000d26 	beq	r2,zero,40fe0 <__divsi3+0x58>
   40fac:	294b883a 	add	r5,r5,r5
   40fb0:	10bfffc4 	addi	r2,r2,-1
   40fb4:	18c7883a 	add	r3,r3,r3
   40fb8:	293ffb36 	bltu	r5,r4,40fa8 <__alt_data_end+0xfffd9ea8>
   40fbc:	0005883a 	mov	r2,zero
   40fc0:	18000726 	beq	r3,zero,40fe0 <__divsi3+0x58>
   40fc4:	0005883a 	mov	r2,zero
   40fc8:	31400236 	bltu	r6,r5,40fd4 <__divsi3+0x4c>
   40fcc:	314dc83a 	sub	r6,r6,r5
   40fd0:	10c4b03a 	or	r2,r2,r3
   40fd4:	1806d07a 	srli	r3,r3,1
   40fd8:	280ad07a 	srli	r5,r5,1
   40fdc:	183ffa1e 	bne	r3,zero,40fc8 <__alt_data_end+0xfffd9ec8>
   40fe0:	38000126 	beq	r7,zero,40fe8 <__divsi3+0x60>
   40fe4:	0085c83a 	sub	r2,zero,r2
   40fe8:	f800283a 	ret
   40fec:	014bc83a 	sub	r5,zero,r5
   40ff0:	39c0005c 	xori	r7,r7,1
   40ff4:	003fe706 	br	40f94 <__alt_data_end+0xfffd9e94>
   40ff8:	0109c83a 	sub	r4,zero,r4
   40ffc:	01c00044 	movi	r7,1
   41000:	003fe306 	br	40f90 <__alt_data_end+0xfffd9e90>
   41004:	00c00044 	movi	r3,1
   41008:	003fee06 	br	40fc4 <__alt_data_end+0xfffd9ec4>

0004100c <__modsi3>:
   4100c:	20001716 	blt	r4,zero,4106c <__modsi3+0x60>
   41010:	000f883a 	mov	r7,zero
   41014:	2005883a 	mov	r2,r4
   41018:	28001216 	blt	r5,zero,41064 <__modsi3+0x58>
   4101c:	2900162e 	bgeu	r5,r4,41078 <__modsi3+0x6c>
   41020:	01800804 	movi	r6,32
   41024:	00c00044 	movi	r3,1
   41028:	00000106 	br	41030 <__modsi3+0x24>
   4102c:	30000a26 	beq	r6,zero,41058 <__modsi3+0x4c>
   41030:	294b883a 	add	r5,r5,r5
   41034:	31bfffc4 	addi	r6,r6,-1
   41038:	18c7883a 	add	r3,r3,r3
   4103c:	293ffb36 	bltu	r5,r4,4102c <__alt_data_end+0xfffd9f2c>
   41040:	18000526 	beq	r3,zero,41058 <__modsi3+0x4c>
   41044:	1806d07a 	srli	r3,r3,1
   41048:	11400136 	bltu	r2,r5,41050 <__modsi3+0x44>
   4104c:	1145c83a 	sub	r2,r2,r5
   41050:	280ad07a 	srli	r5,r5,1
   41054:	183ffb1e 	bne	r3,zero,41044 <__alt_data_end+0xfffd9f44>
   41058:	38000126 	beq	r7,zero,41060 <__modsi3+0x54>
   4105c:	0085c83a 	sub	r2,zero,r2
   41060:	f800283a 	ret
   41064:	014bc83a 	sub	r5,zero,r5
   41068:	003fec06 	br	4101c <__alt_data_end+0xfffd9f1c>
   4106c:	0109c83a 	sub	r4,zero,r4
   41070:	01c00044 	movi	r7,1
   41074:	003fe706 	br	41014 <__alt_data_end+0xfffd9f14>
   41078:	00c00044 	movi	r3,1
   4107c:	003ff106 	br	41044 <__alt_data_end+0xfffd9f44>

00041080 <__udivsi3>:
   41080:	200d883a 	mov	r6,r4
   41084:	2900152e 	bgeu	r5,r4,410dc <__udivsi3+0x5c>
   41088:	28001416 	blt	r5,zero,410dc <__udivsi3+0x5c>
   4108c:	00800804 	movi	r2,32
   41090:	00c00044 	movi	r3,1
   41094:	00000206 	br	410a0 <__udivsi3+0x20>
   41098:	10000e26 	beq	r2,zero,410d4 <__udivsi3+0x54>
   4109c:	28000516 	blt	r5,zero,410b4 <__udivsi3+0x34>
   410a0:	294b883a 	add	r5,r5,r5
   410a4:	10bfffc4 	addi	r2,r2,-1
   410a8:	18c7883a 	add	r3,r3,r3
   410ac:	293ffa36 	bltu	r5,r4,41098 <__alt_data_end+0xfffd9f98>
   410b0:	18000826 	beq	r3,zero,410d4 <__udivsi3+0x54>
   410b4:	0005883a 	mov	r2,zero
   410b8:	31400236 	bltu	r6,r5,410c4 <__udivsi3+0x44>
   410bc:	314dc83a 	sub	r6,r6,r5
   410c0:	10c4b03a 	or	r2,r2,r3
   410c4:	1806d07a 	srli	r3,r3,1
   410c8:	280ad07a 	srli	r5,r5,1
   410cc:	183ffa1e 	bne	r3,zero,410b8 <__alt_data_end+0xfffd9fb8>
   410d0:	f800283a 	ret
   410d4:	0005883a 	mov	r2,zero
   410d8:	f800283a 	ret
   410dc:	00c00044 	movi	r3,1
   410e0:	003ff406 	br	410b4 <__alt_data_end+0xfffd9fb4>

000410e4 <__umodsi3>:
   410e4:	2005883a 	mov	r2,r4
   410e8:	2900122e 	bgeu	r5,r4,41134 <__umodsi3+0x50>
   410ec:	28001116 	blt	r5,zero,41134 <__umodsi3+0x50>
   410f0:	01800804 	movi	r6,32
   410f4:	00c00044 	movi	r3,1
   410f8:	00000206 	br	41104 <__umodsi3+0x20>
   410fc:	30000c26 	beq	r6,zero,41130 <__umodsi3+0x4c>
   41100:	28000516 	blt	r5,zero,41118 <__umodsi3+0x34>
   41104:	294b883a 	add	r5,r5,r5
   41108:	31bfffc4 	addi	r6,r6,-1
   4110c:	18c7883a 	add	r3,r3,r3
   41110:	293ffa36 	bltu	r5,r4,410fc <__alt_data_end+0xfffd9ffc>
   41114:	18000626 	beq	r3,zero,41130 <__umodsi3+0x4c>
   41118:	1806d07a 	srli	r3,r3,1
   4111c:	11400136 	bltu	r2,r5,41124 <__umodsi3+0x40>
   41120:	1145c83a 	sub	r2,r2,r5
   41124:	280ad07a 	srli	r5,r5,1
   41128:	183ffb1e 	bne	r3,zero,41118 <__alt_data_end+0xfffda018>
   4112c:	f800283a 	ret
   41130:	f800283a 	ret
   41134:	00c00044 	movi	r3,1
   41138:	003ff706 	br	41118 <__alt_data_end+0xfffda018>

0004113c <_printf_r>:
   4113c:	defffd04 	addi	sp,sp,-12
   41140:	2805883a 	mov	r2,r5
   41144:	dfc00015 	stw	ra,0(sp)
   41148:	d9800115 	stw	r6,4(sp)
   4114c:	d9c00215 	stw	r7,8(sp)
   41150:	21400217 	ldw	r5,8(r4)
   41154:	d9c00104 	addi	r7,sp,4
   41158:	100d883a 	mov	r6,r2
   4115c:	00413140 	call	41314 <___vfprintf_internal_r>
   41160:	dfc00017 	ldw	ra,0(sp)
   41164:	dec00304 	addi	sp,sp,12
   41168:	f800283a 	ret

0004116c <printf>:
   4116c:	defffc04 	addi	sp,sp,-16
   41170:	dfc00015 	stw	ra,0(sp)
   41174:	d9400115 	stw	r5,4(sp)
   41178:	d9800215 	stw	r6,8(sp)
   4117c:	d9c00315 	stw	r7,12(sp)
   41180:	00800174 	movhi	r2,5
   41184:	10855e04 	addi	r2,r2,5496
   41188:	10800017 	ldw	r2,0(r2)
   4118c:	200b883a 	mov	r5,r4
   41190:	d9800104 	addi	r6,sp,4
   41194:	11000217 	ldw	r4,8(r2)
   41198:	004350c0 	call	4350c <__vfprintf_internal>
   4119c:	dfc00017 	ldw	ra,0(sp)
   411a0:	dec00404 	addi	sp,sp,16
   411a4:	f800283a 	ret

000411a8 <_puts_r>:
   411a8:	defff604 	addi	sp,sp,-40
   411ac:	dc000715 	stw	r16,28(sp)
   411b0:	2021883a 	mov	r16,r4
   411b4:	2809883a 	mov	r4,r5
   411b8:	dc400815 	stw	r17,32(sp)
   411bc:	dfc00915 	stw	ra,36(sp)
   411c0:	2823883a 	mov	r17,r5
   411c4:	004127c0 	call	4127c <strlen>
   411c8:	10c00044 	addi	r3,r2,1
   411cc:	d8800115 	stw	r2,4(sp)
   411d0:	00800174 	movhi	r2,5
   411d4:	10be3404 	addi	r2,r2,-1840
   411d8:	d8800215 	stw	r2,8(sp)
   411dc:	00800044 	movi	r2,1
   411e0:	d8800315 	stw	r2,12(sp)
   411e4:	00800084 	movi	r2,2
   411e8:	dc400015 	stw	r17,0(sp)
   411ec:	d8c00615 	stw	r3,24(sp)
   411f0:	dec00415 	stw	sp,16(sp)
   411f4:	d8800515 	stw	r2,20(sp)
   411f8:	80000226 	beq	r16,zero,41204 <_puts_r+0x5c>
   411fc:	80800e17 	ldw	r2,56(r16)
   41200:	10001426 	beq	r2,zero,41254 <_puts_r+0xac>
   41204:	81400217 	ldw	r5,8(r16)
   41208:	2880030b 	ldhu	r2,12(r5)
   4120c:	10c8000c 	andi	r3,r2,8192
   41210:	1800061e 	bne	r3,zero,4122c <_puts_r+0x84>
   41214:	29001917 	ldw	r4,100(r5)
   41218:	00f7ffc4 	movi	r3,-8193
   4121c:	10880014 	ori	r2,r2,8192
   41220:	20c6703a 	and	r3,r4,r3
   41224:	2880030d 	sth	r2,12(r5)
   41228:	28c01915 	stw	r3,100(r5)
   4122c:	d9800404 	addi	r6,sp,16
   41230:	8009883a 	mov	r4,r16
   41234:	0045a3c0 	call	45a3c <__sfvwrite_r>
   41238:	1000091e 	bne	r2,zero,41260 <_puts_r+0xb8>
   4123c:	00800284 	movi	r2,10
   41240:	dfc00917 	ldw	ra,36(sp)
   41244:	dc400817 	ldw	r17,32(sp)
   41248:	dc000717 	ldw	r16,28(sp)
   4124c:	dec00a04 	addi	sp,sp,40
   41250:	f800283a 	ret
   41254:	8009883a 	mov	r4,r16
   41258:	00455b80 	call	455b8 <__sinit>
   4125c:	003fe906 	br	41204 <__alt_data_end+0xfffda104>
   41260:	00bfffc4 	movi	r2,-1
   41264:	003ff606 	br	41240 <__alt_data_end+0xfffda140>

00041268 <puts>:
   41268:	00800174 	movhi	r2,5
   4126c:	10855e04 	addi	r2,r2,5496
   41270:	200b883a 	mov	r5,r4
   41274:	11000017 	ldw	r4,0(r2)
   41278:	00411a81 	jmpi	411a8 <_puts_r>

0004127c <strlen>:
   4127c:	208000cc 	andi	r2,r4,3
   41280:	10002026 	beq	r2,zero,41304 <strlen+0x88>
   41284:	20800007 	ldb	r2,0(r4)
   41288:	10002026 	beq	r2,zero,4130c <strlen+0x90>
   4128c:	2005883a 	mov	r2,r4
   41290:	00000206 	br	4129c <strlen+0x20>
   41294:	10c00007 	ldb	r3,0(r2)
   41298:	18001826 	beq	r3,zero,412fc <strlen+0x80>
   4129c:	10800044 	addi	r2,r2,1
   412a0:	10c000cc 	andi	r3,r2,3
   412a4:	183ffb1e 	bne	r3,zero,41294 <__alt_data_end+0xfffda194>
   412a8:	10c00017 	ldw	r3,0(r2)
   412ac:	01ffbff4 	movhi	r7,65279
   412b0:	39ffbfc4 	addi	r7,r7,-257
   412b4:	00ca303a 	nor	r5,zero,r3
   412b8:	01a02074 	movhi	r6,32897
   412bc:	19c7883a 	add	r3,r3,r7
   412c0:	31a02004 	addi	r6,r6,-32640
   412c4:	1946703a 	and	r3,r3,r5
   412c8:	1986703a 	and	r3,r3,r6
   412cc:	1800091e 	bne	r3,zero,412f4 <strlen+0x78>
   412d0:	10800104 	addi	r2,r2,4
   412d4:	10c00017 	ldw	r3,0(r2)
   412d8:	19cb883a 	add	r5,r3,r7
   412dc:	00c6303a 	nor	r3,zero,r3
   412e0:	28c6703a 	and	r3,r5,r3
   412e4:	1986703a 	and	r3,r3,r6
   412e8:	183ff926 	beq	r3,zero,412d0 <__alt_data_end+0xfffda1d0>
   412ec:	00000106 	br	412f4 <strlen+0x78>
   412f0:	10800044 	addi	r2,r2,1
   412f4:	10c00007 	ldb	r3,0(r2)
   412f8:	183ffd1e 	bne	r3,zero,412f0 <__alt_data_end+0xfffda1f0>
   412fc:	1105c83a 	sub	r2,r2,r4
   41300:	f800283a 	ret
   41304:	2005883a 	mov	r2,r4
   41308:	003fe706 	br	412a8 <__alt_data_end+0xfffda1a8>
   4130c:	0005883a 	mov	r2,zero
   41310:	f800283a 	ret

00041314 <___vfprintf_internal_r>:
   41314:	deffb804 	addi	sp,sp,-288
   41318:	dfc04715 	stw	ra,284(sp)
   4131c:	ddc04515 	stw	r23,276(sp)
   41320:	dd404315 	stw	r21,268(sp)
   41324:	d9002c15 	stw	r4,176(sp)
   41328:	282f883a 	mov	r23,r5
   4132c:	302b883a 	mov	r21,r6
   41330:	d9c02d15 	stw	r7,180(sp)
   41334:	df004615 	stw	fp,280(sp)
   41338:	dd804415 	stw	r22,272(sp)
   4133c:	dd004215 	stw	r20,264(sp)
   41340:	dcc04115 	stw	r19,260(sp)
   41344:	dc804015 	stw	r18,256(sp)
   41348:	dc403f15 	stw	r17,252(sp)
   4134c:	dc003e15 	stw	r16,248(sp)
   41350:	004612c0 	call	4612c <_localeconv_r>
   41354:	10800017 	ldw	r2,0(r2)
   41358:	1009883a 	mov	r4,r2
   4135c:	d8803415 	stw	r2,208(sp)
   41360:	004127c0 	call	4127c <strlen>
   41364:	d8803715 	stw	r2,220(sp)
   41368:	d8802c17 	ldw	r2,176(sp)
   4136c:	10000226 	beq	r2,zero,41378 <___vfprintf_internal_r+0x64>
   41370:	10800e17 	ldw	r2,56(r2)
   41374:	1000f926 	beq	r2,zero,4175c <___vfprintf_internal_r+0x448>
   41378:	b880030b 	ldhu	r2,12(r23)
   4137c:	10c8000c 	andi	r3,r2,8192
   41380:	1800061e 	bne	r3,zero,4139c <___vfprintf_internal_r+0x88>
   41384:	b9001917 	ldw	r4,100(r23)
   41388:	00f7ffc4 	movi	r3,-8193
   4138c:	10880014 	ori	r2,r2,8192
   41390:	20c6703a 	and	r3,r4,r3
   41394:	b880030d 	sth	r2,12(r23)
   41398:	b8c01915 	stw	r3,100(r23)
   4139c:	10c0020c 	andi	r3,r2,8
   413a0:	1800c126 	beq	r3,zero,416a8 <___vfprintf_internal_r+0x394>
   413a4:	b8c00417 	ldw	r3,16(r23)
   413a8:	1800bf26 	beq	r3,zero,416a8 <___vfprintf_internal_r+0x394>
   413ac:	1080068c 	andi	r2,r2,26
   413b0:	00c00284 	movi	r3,10
   413b4:	10c0c426 	beq	r2,r3,416c8 <___vfprintf_internal_r+0x3b4>
   413b8:	d8c00404 	addi	r3,sp,16
   413bc:	05000174 	movhi	r20,5
   413c0:	d9001e04 	addi	r4,sp,120
   413c4:	a53e4584 	addi	r20,r20,-1770
   413c8:	d8c01e15 	stw	r3,120(sp)
   413cc:	d8002015 	stw	zero,128(sp)
   413d0:	d8001f15 	stw	zero,124(sp)
   413d4:	d8003315 	stw	zero,204(sp)
   413d8:	d8003615 	stw	zero,216(sp)
   413dc:	d8003815 	stw	zero,224(sp)
   413e0:	1811883a 	mov	r8,r3
   413e4:	d8003915 	stw	zero,228(sp)
   413e8:	d8003a15 	stw	zero,232(sp)
   413ec:	d8002f15 	stw	zero,188(sp)
   413f0:	d9002815 	stw	r4,160(sp)
   413f4:	a8800007 	ldb	r2,0(r21)
   413f8:	10027b26 	beq	r2,zero,41de8 <___vfprintf_internal_r+0xad4>
   413fc:	00c00944 	movi	r3,37
   41400:	a821883a 	mov	r16,r21
   41404:	10c0021e 	bne	r2,r3,41410 <___vfprintf_internal_r+0xfc>
   41408:	00001406 	br	4145c <___vfprintf_internal_r+0x148>
   4140c:	10c00326 	beq	r2,r3,4141c <___vfprintf_internal_r+0x108>
   41410:	84000044 	addi	r16,r16,1
   41414:	80800007 	ldb	r2,0(r16)
   41418:	103ffc1e 	bne	r2,zero,4140c <__alt_data_end+0xfffda30c>
   4141c:	8563c83a 	sub	r17,r16,r21
   41420:	88000e26 	beq	r17,zero,4145c <___vfprintf_internal_r+0x148>
   41424:	d8c02017 	ldw	r3,128(sp)
   41428:	d8801f17 	ldw	r2,124(sp)
   4142c:	45400015 	stw	r21,0(r8)
   41430:	1c47883a 	add	r3,r3,r17
   41434:	10800044 	addi	r2,r2,1
   41438:	d8c02015 	stw	r3,128(sp)
   4143c:	44400115 	stw	r17,4(r8)
   41440:	d8801f15 	stw	r2,124(sp)
   41444:	00c001c4 	movi	r3,7
   41448:	1880a716 	blt	r3,r2,416e8 <___vfprintf_internal_r+0x3d4>
   4144c:	42000204 	addi	r8,r8,8
   41450:	d9402f17 	ldw	r5,188(sp)
   41454:	2c4b883a 	add	r5,r5,r17
   41458:	d9402f15 	stw	r5,188(sp)
   4145c:	80800007 	ldb	r2,0(r16)
   41460:	1000a826 	beq	r2,zero,41704 <___vfprintf_internal_r+0x3f0>
   41464:	84400047 	ldb	r17,1(r16)
   41468:	00bfffc4 	movi	r2,-1
   4146c:	85400044 	addi	r21,r16,1
   41470:	d8002785 	stb	zero,158(sp)
   41474:	0007883a 	mov	r3,zero
   41478:	000f883a 	mov	r7,zero
   4147c:	d8802915 	stw	r2,164(sp)
   41480:	d8003115 	stw	zero,196(sp)
   41484:	0025883a 	mov	r18,zero
   41488:	01401604 	movi	r5,88
   4148c:	01800244 	movi	r6,9
   41490:	02800a84 	movi	r10,42
   41494:	02401b04 	movi	r9,108
   41498:	ad400044 	addi	r21,r21,1
   4149c:	88bff804 	addi	r2,r17,-32
   414a0:	28830436 	bltu	r5,r2,420b4 <___vfprintf_internal_r+0xda0>
   414a4:	100490ba 	slli	r2,r2,2
   414a8:	01000134 	movhi	r4,4
   414ac:	21052f04 	addi	r4,r4,5308
   414b0:	1105883a 	add	r2,r2,r4
   414b4:	10800017 	ldw	r2,0(r2)
   414b8:	1000683a 	jmp	r2
   414bc:	00041fd4 	movui	zero,4223
   414c0:	000420b4 	movhi	zero,4226
   414c4:	000420b4 	movhi	zero,4226
   414c8:	00041ff4 	movhi	zero,4223
   414cc:	000420b4 	movhi	zero,4226
   414d0:	000420b4 	movhi	zero,4226
   414d4:	000420b4 	movhi	zero,4226
   414d8:	000420b4 	movhi	zero,4226
   414dc:	000420b4 	movhi	zero,4226
   414e0:	000420b4 	movhi	zero,4226
   414e4:	00041768 	cmpgeui	zero,zero,4189
   414e8:	00041f10 	cmplti	zero,zero,4220
   414ec:	000420b4 	movhi	zero,4226
   414f0:	00041630 	cmpltui	zero,zero,4184
   414f4:	00041790 	cmplti	zero,zero,4190
   414f8:	000420b4 	movhi	zero,4226
   414fc:	000417d0 	cmplti	zero,zero,4191
   41500:	000417dc 	xori	zero,zero,4191
   41504:	000417dc 	xori	zero,zero,4191
   41508:	000417dc 	xori	zero,zero,4191
   4150c:	000417dc 	xori	zero,zero,4191
   41510:	000417dc 	xori	zero,zero,4191
   41514:	000417dc 	xori	zero,zero,4191
   41518:	000417dc 	xori	zero,zero,4191
   4151c:	000417dc 	xori	zero,zero,4191
   41520:	000417dc 	xori	zero,zero,4191
   41524:	000420b4 	movhi	zero,4226
   41528:	000420b4 	movhi	zero,4226
   4152c:	000420b4 	movhi	zero,4226
   41530:	000420b4 	movhi	zero,4226
   41534:	000420b4 	movhi	zero,4226
   41538:	000420b4 	movhi	zero,4226
   4153c:	000420b4 	movhi	zero,4226
   41540:	000420b4 	movhi	zero,4226
   41544:	000420b4 	movhi	zero,4226
   41548:	000420b4 	movhi	zero,4226
   4154c:	00041810 	cmplti	zero,zero,4192
   41550:	000418cc 	andi	zero,zero,4195
   41554:	000420b4 	movhi	zero,4226
   41558:	000418cc 	andi	zero,zero,4195
   4155c:	000420b4 	movhi	zero,4226
   41560:	000420b4 	movhi	zero,4226
   41564:	000420b4 	movhi	zero,4226
   41568:	000420b4 	movhi	zero,4226
   4156c:	0004196c 	andhi	zero,zero,4197
   41570:	000420b4 	movhi	zero,4226
   41574:	000420b4 	movhi	zero,4226
   41578:	00041978 	rdprs	zero,zero,4197
   4157c:	000420b4 	movhi	zero,4226
   41580:	000420b4 	movhi	zero,4226
   41584:	000420b4 	movhi	zero,4226
   41588:	000420b4 	movhi	zero,4226
   4158c:	000420b4 	movhi	zero,4226
   41590:	00041df0 	cmpltui	zero,zero,4215
   41594:	000420b4 	movhi	zero,4226
   41598:	000420b4 	movhi	zero,4226
   4159c:	00041e50 	cmplti	zero,zero,4217
   415a0:	000420b4 	movhi	zero,4226
   415a4:	000420b4 	movhi	zero,4226
   415a8:	000420b4 	movhi	zero,4226
   415ac:	000420b4 	movhi	zero,4226
   415b0:	000420b4 	movhi	zero,4226
   415b4:	000420b4 	movhi	zero,4226
   415b8:	000420b4 	movhi	zero,4226
   415bc:	000420b4 	movhi	zero,4226
   415c0:	000420b4 	movhi	zero,4226
   415c4:	000420b4 	movhi	zero,4226
   415c8:	00042060 	cmpeqi	zero,zero,4225
   415cc:	00042000 	call	4200 <__alt_mem_onchip_memory2-0x3be00>
   415d0:	000418cc 	andi	zero,zero,4195
   415d4:	000418cc 	andi	zero,zero,4195
   415d8:	000418cc 	andi	zero,zero,4195
   415dc:	00042010 	cmplti	zero,zero,4224
   415e0:	00042000 	call	4200 <__alt_mem_onchip_memory2-0x3be00>
   415e4:	000420b4 	movhi	zero,4226
   415e8:	000420b4 	movhi	zero,4226
   415ec:	0004201c 	xori	zero,zero,4224
   415f0:	000420b4 	movhi	zero,4226
   415f4:	0004202c 	andhi	zero,zero,4224
   415f8:	00041f00 	call	41f0 <__alt_mem_onchip_memory2-0x3be10>
   415fc:	0004163c 	xorhi	zero,zero,4184
   41600:	00041f20 	cmpeqi	zero,zero,4220
   41604:	000420b4 	movhi	zero,4226
   41608:	00041f2c 	andhi	zero,zero,4220
   4160c:	000420b4 	movhi	zero,4226
   41610:	00041f88 	cmpgei	zero,zero,4222
   41614:	000420b4 	movhi	zero,4226
   41618:	000420b4 	movhi	zero,4226
   4161c:	00041f98 	cmpnei	zero,zero,4222
   41620:	d9003117 	ldw	r4,196(sp)
   41624:	d8802d15 	stw	r2,180(sp)
   41628:	0109c83a 	sub	r4,zero,r4
   4162c:	d9003115 	stw	r4,196(sp)
   41630:	94800114 	ori	r18,r18,4
   41634:	ac400007 	ldb	r17,0(r21)
   41638:	003f9706 	br	41498 <__alt_data_end+0xfffda398>
   4163c:	00800c04 	movi	r2,48
   41640:	d9002d17 	ldw	r4,180(sp)
   41644:	d9402917 	ldw	r5,164(sp)
   41648:	d8802705 	stb	r2,156(sp)
   4164c:	00801e04 	movi	r2,120
   41650:	d8802745 	stb	r2,157(sp)
   41654:	d8002785 	stb	zero,158(sp)
   41658:	20c00104 	addi	r3,r4,4
   4165c:	24c00017 	ldw	r19,0(r4)
   41660:	002d883a 	mov	r22,zero
   41664:	90800094 	ori	r2,r18,2
   41668:	28029a16 	blt	r5,zero,420d4 <___vfprintf_internal_r+0xdc0>
   4166c:	00bfdfc4 	movi	r2,-129
   41670:	90a4703a 	and	r18,r18,r2
   41674:	d8c02d15 	stw	r3,180(sp)
   41678:	94800094 	ori	r18,r18,2
   4167c:	9802871e 	bne	r19,zero,4209c <___vfprintf_internal_r+0xd88>
   41680:	00800174 	movhi	r2,5
   41684:	10be3e04 	addi	r2,r2,-1800
   41688:	d8803915 	stw	r2,228(sp)
   4168c:	04401e04 	movi	r17,120
   41690:	d8802917 	ldw	r2,164(sp)
   41694:	0039883a 	mov	fp,zero
   41698:	1001e926 	beq	r2,zero,41e40 <___vfprintf_internal_r+0xb2c>
   4169c:	0027883a 	mov	r19,zero
   416a0:	002d883a 	mov	r22,zero
   416a4:	00020506 	br	41ebc <___vfprintf_internal_r+0xba8>
   416a8:	d9002c17 	ldw	r4,176(sp)
   416ac:	b80b883a 	mov	r5,r23
   416b0:	00435e40 	call	435e4 <__swsetup_r>
   416b4:	1005ac1e 	bne	r2,zero,42d68 <___vfprintf_internal_r+0x1a54>
   416b8:	b880030b 	ldhu	r2,12(r23)
   416bc:	00c00284 	movi	r3,10
   416c0:	1080068c 	andi	r2,r2,26
   416c4:	10ff3c1e 	bne	r2,r3,413b8 <__alt_data_end+0xfffda2b8>
   416c8:	b880038f 	ldh	r2,14(r23)
   416cc:	103f3a16 	blt	r2,zero,413b8 <__alt_data_end+0xfffda2b8>
   416d0:	d9c02d17 	ldw	r7,180(sp)
   416d4:	d9002c17 	ldw	r4,176(sp)
   416d8:	a80d883a 	mov	r6,r21
   416dc:	b80b883a 	mov	r5,r23
   416e0:	00435280 	call	43528 <__sbprintf>
   416e4:	00001106 	br	4172c <___vfprintf_internal_r+0x418>
   416e8:	d9002c17 	ldw	r4,176(sp)
   416ec:	d9801e04 	addi	r6,sp,120
   416f0:	b80b883a 	mov	r5,r23
   416f4:	00489100 	call	48910 <__sprint_r>
   416f8:	1000081e 	bne	r2,zero,4171c <___vfprintf_internal_r+0x408>
   416fc:	da000404 	addi	r8,sp,16
   41700:	003f5306 	br	41450 <__alt_data_end+0xfffda350>
   41704:	d8802017 	ldw	r2,128(sp)
   41708:	10000426 	beq	r2,zero,4171c <___vfprintf_internal_r+0x408>
   4170c:	d9002c17 	ldw	r4,176(sp)
   41710:	d9801e04 	addi	r6,sp,120
   41714:	b80b883a 	mov	r5,r23
   41718:	00489100 	call	48910 <__sprint_r>
   4171c:	b880030b 	ldhu	r2,12(r23)
   41720:	1080100c 	andi	r2,r2,64
   41724:	1005901e 	bne	r2,zero,42d68 <___vfprintf_internal_r+0x1a54>
   41728:	d8802f17 	ldw	r2,188(sp)
   4172c:	dfc04717 	ldw	ra,284(sp)
   41730:	df004617 	ldw	fp,280(sp)
   41734:	ddc04517 	ldw	r23,276(sp)
   41738:	dd804417 	ldw	r22,272(sp)
   4173c:	dd404317 	ldw	r21,268(sp)
   41740:	dd004217 	ldw	r20,264(sp)
   41744:	dcc04117 	ldw	r19,260(sp)
   41748:	dc804017 	ldw	r18,256(sp)
   4174c:	dc403f17 	ldw	r17,252(sp)
   41750:	dc003e17 	ldw	r16,248(sp)
   41754:	dec04804 	addi	sp,sp,288
   41758:	f800283a 	ret
   4175c:	d9002c17 	ldw	r4,176(sp)
   41760:	00455b80 	call	455b8 <__sinit>
   41764:	003f0406 	br	41378 <__alt_data_end+0xfffda278>
   41768:	d8802d17 	ldw	r2,180(sp)
   4176c:	d9002d17 	ldw	r4,180(sp)
   41770:	10800017 	ldw	r2,0(r2)
   41774:	d8803115 	stw	r2,196(sp)
   41778:	20800104 	addi	r2,r4,4
   4177c:	d9003117 	ldw	r4,196(sp)
   41780:	203fa716 	blt	r4,zero,41620 <__alt_data_end+0xfffda520>
   41784:	d8802d15 	stw	r2,180(sp)
   41788:	ac400007 	ldb	r17,0(r21)
   4178c:	003f4206 	br	41498 <__alt_data_end+0xfffda398>
   41790:	ac400007 	ldb	r17,0(r21)
   41794:	aac00044 	addi	r11,r21,1
   41798:	8a872826 	beq	r17,r10,4343c <___vfprintf_internal_r+0x2128>
   4179c:	88bff404 	addi	r2,r17,-48
   417a0:	0009883a 	mov	r4,zero
   417a4:	30867d36 	bltu	r6,r2,4319c <___vfprintf_internal_r+0x1e88>
   417a8:	5c400007 	ldb	r17,0(r11)
   417ac:	210002a4 	muli	r4,r4,10
   417b0:	5d400044 	addi	r21,r11,1
   417b4:	a817883a 	mov	r11,r21
   417b8:	2089883a 	add	r4,r4,r2
   417bc:	88bff404 	addi	r2,r17,-48
   417c0:	30bff92e 	bgeu	r6,r2,417a8 <__alt_data_end+0xfffda6a8>
   417c4:	2005c916 	blt	r4,zero,42eec <___vfprintf_internal_r+0x1bd8>
   417c8:	d9002915 	stw	r4,164(sp)
   417cc:	003f3306 	br	4149c <__alt_data_end+0xfffda39c>
   417d0:	94802014 	ori	r18,r18,128
   417d4:	ac400007 	ldb	r17,0(r21)
   417d8:	003f2f06 	br	41498 <__alt_data_end+0xfffda398>
   417dc:	a809883a 	mov	r4,r21
   417e0:	d8003115 	stw	zero,196(sp)
   417e4:	88bff404 	addi	r2,r17,-48
   417e8:	0017883a 	mov	r11,zero
   417ec:	24400007 	ldb	r17,0(r4)
   417f0:	5ac002a4 	muli	r11,r11,10
   417f4:	ad400044 	addi	r21,r21,1
   417f8:	a809883a 	mov	r4,r21
   417fc:	12d7883a 	add	r11,r2,r11
   41800:	88bff404 	addi	r2,r17,-48
   41804:	30bff92e 	bgeu	r6,r2,417ec <__alt_data_end+0xfffda6ec>
   41808:	dac03115 	stw	r11,196(sp)
   4180c:	003f2306 	br	4149c <__alt_data_end+0xfffda39c>
   41810:	18c03fcc 	andi	r3,r3,255
   41814:	18072b1e 	bne	r3,zero,434c4 <___vfprintf_internal_r+0x21b0>
   41818:	94800414 	ori	r18,r18,16
   4181c:	9080080c 	andi	r2,r18,32
   41820:	10037b26 	beq	r2,zero,42610 <___vfprintf_internal_r+0x12fc>
   41824:	d9402d17 	ldw	r5,180(sp)
   41828:	28800117 	ldw	r2,4(r5)
   4182c:	2cc00017 	ldw	r19,0(r5)
   41830:	29400204 	addi	r5,r5,8
   41834:	d9402d15 	stw	r5,180(sp)
   41838:	102d883a 	mov	r22,r2
   4183c:	10044b16 	blt	r2,zero,4296c <___vfprintf_internal_r+0x1658>
   41840:	d9402917 	ldw	r5,164(sp)
   41844:	df002783 	ldbu	fp,158(sp)
   41848:	2803bc16 	blt	r5,zero,4273c <___vfprintf_internal_r+0x1428>
   4184c:	00ffdfc4 	movi	r3,-129
   41850:	9d84b03a 	or	r2,r19,r22
   41854:	90e4703a 	and	r18,r18,r3
   41858:	10017726 	beq	r2,zero,41e38 <___vfprintf_internal_r+0xb24>
   4185c:	b0038326 	beq	r22,zero,4266c <___vfprintf_internal_r+0x1358>
   41860:	dc402a15 	stw	r17,168(sp)
   41864:	dc001e04 	addi	r16,sp,120
   41868:	b023883a 	mov	r17,r22
   4186c:	402d883a 	mov	r22,r8
   41870:	9809883a 	mov	r4,r19
   41874:	880b883a 	mov	r5,r17
   41878:	01800284 	movi	r6,10
   4187c:	000f883a 	mov	r7,zero
   41880:	004ad080 	call	4ad08 <__umoddi3>
   41884:	10800c04 	addi	r2,r2,48
   41888:	843fffc4 	addi	r16,r16,-1
   4188c:	9809883a 	mov	r4,r19
   41890:	880b883a 	mov	r5,r17
   41894:	80800005 	stb	r2,0(r16)
   41898:	01800284 	movi	r6,10
   4189c:	000f883a 	mov	r7,zero
   418a0:	004a7900 	call	4a790 <__udivdi3>
   418a4:	1027883a 	mov	r19,r2
   418a8:	10c4b03a 	or	r2,r2,r3
   418ac:	1823883a 	mov	r17,r3
   418b0:	103fef1e 	bne	r2,zero,41870 <__alt_data_end+0xfffda770>
   418b4:	d8c02817 	ldw	r3,160(sp)
   418b8:	dc402a17 	ldw	r17,168(sp)
   418bc:	b011883a 	mov	r8,r22
   418c0:	1c07c83a 	sub	r3,r3,r16
   418c4:	d8c02e15 	stw	r3,184(sp)
   418c8:	00005906 	br	41a30 <___vfprintf_internal_r+0x71c>
   418cc:	18c03fcc 	andi	r3,r3,255
   418d0:	1806fa1e 	bne	r3,zero,434bc <___vfprintf_internal_r+0x21a8>
   418d4:	9080020c 	andi	r2,r18,8
   418d8:	10048a26 	beq	r2,zero,42b04 <___vfprintf_internal_r+0x17f0>
   418dc:	d8c02d17 	ldw	r3,180(sp)
   418e0:	d9002d17 	ldw	r4,180(sp)
   418e4:	d9402d17 	ldw	r5,180(sp)
   418e8:	18c00017 	ldw	r3,0(r3)
   418ec:	21000117 	ldw	r4,4(r4)
   418f0:	29400204 	addi	r5,r5,8
   418f4:	d8c03615 	stw	r3,216(sp)
   418f8:	d9003815 	stw	r4,224(sp)
   418fc:	d9402d15 	stw	r5,180(sp)
   41900:	d9003617 	ldw	r4,216(sp)
   41904:	d9403817 	ldw	r5,224(sp)
   41908:	da003d15 	stw	r8,244(sp)
   4190c:	04000044 	movi	r16,1
   41910:	00485340 	call	48534 <__fpclassifyd>
   41914:	da003d17 	ldw	r8,244(sp)
   41918:	14041f1e 	bne	r2,r16,42998 <___vfprintf_internal_r+0x1684>
   4191c:	d9003617 	ldw	r4,216(sp)
   41920:	d9403817 	ldw	r5,224(sp)
   41924:	000d883a 	mov	r6,zero
   41928:	000f883a 	mov	r7,zero
   4192c:	004bc500 	call	4bc50 <__ledf2>
   41930:	da003d17 	ldw	r8,244(sp)
   41934:	1005be16 	blt	r2,zero,43030 <___vfprintf_internal_r+0x1d1c>
   41938:	df002783 	ldbu	fp,158(sp)
   4193c:	008011c4 	movi	r2,71
   41940:	1445330e 	bge	r2,r17,42e10 <___vfprintf_internal_r+0x1afc>
   41944:	04000174 	movhi	r16,5
   41948:	843e3604 	addi	r16,r16,-1832
   4194c:	00c000c4 	movi	r3,3
   41950:	00bfdfc4 	movi	r2,-129
   41954:	d8c02a15 	stw	r3,168(sp)
   41958:	90a4703a 	and	r18,r18,r2
   4195c:	d8c02e15 	stw	r3,184(sp)
   41960:	d8002915 	stw	zero,164(sp)
   41964:	d8003215 	stw	zero,200(sp)
   41968:	00003706 	br	41a48 <___vfprintf_internal_r+0x734>
   4196c:	94800214 	ori	r18,r18,8
   41970:	ac400007 	ldb	r17,0(r21)
   41974:	003ec806 	br	41498 <__alt_data_end+0xfffda398>
   41978:	18c03fcc 	andi	r3,r3,255
   4197c:	1806db1e 	bne	r3,zero,434ec <___vfprintf_internal_r+0x21d8>
   41980:	94800414 	ori	r18,r18,16
   41984:	9080080c 	andi	r2,r18,32
   41988:	1002d826 	beq	r2,zero,424ec <___vfprintf_internal_r+0x11d8>
   4198c:	d9402d17 	ldw	r5,180(sp)
   41990:	d8c02917 	ldw	r3,164(sp)
   41994:	d8002785 	stb	zero,158(sp)
   41998:	28800204 	addi	r2,r5,8
   4199c:	2cc00017 	ldw	r19,0(r5)
   419a0:	2d800117 	ldw	r22,4(r5)
   419a4:	18048f16 	blt	r3,zero,42be4 <___vfprintf_internal_r+0x18d0>
   419a8:	013fdfc4 	movi	r4,-129
   419ac:	9d86b03a 	or	r3,r19,r22
   419b0:	d8802d15 	stw	r2,180(sp)
   419b4:	9124703a 	and	r18,r18,r4
   419b8:	1802d91e 	bne	r3,zero,42520 <___vfprintf_internal_r+0x120c>
   419bc:	d8c02917 	ldw	r3,164(sp)
   419c0:	0039883a 	mov	fp,zero
   419c4:	1805c326 	beq	r3,zero,430d4 <___vfprintf_internal_r+0x1dc0>
   419c8:	0027883a 	mov	r19,zero
   419cc:	002d883a 	mov	r22,zero
   419d0:	dc001e04 	addi	r16,sp,120
   419d4:	9806d0fa 	srli	r3,r19,3
   419d8:	b008977a 	slli	r4,r22,29
   419dc:	b02cd0fa 	srli	r22,r22,3
   419e0:	9cc001cc 	andi	r19,r19,7
   419e4:	98800c04 	addi	r2,r19,48
   419e8:	843fffc4 	addi	r16,r16,-1
   419ec:	20e6b03a 	or	r19,r4,r3
   419f0:	80800005 	stb	r2,0(r16)
   419f4:	9d86b03a 	or	r3,r19,r22
   419f8:	183ff61e 	bne	r3,zero,419d4 <__alt_data_end+0xfffda8d4>
   419fc:	90c0004c 	andi	r3,r18,1
   41a00:	18013b26 	beq	r3,zero,41ef0 <___vfprintf_internal_r+0xbdc>
   41a04:	10803fcc 	andi	r2,r2,255
   41a08:	1080201c 	xori	r2,r2,128
   41a0c:	10bfe004 	addi	r2,r2,-128
   41a10:	00c00c04 	movi	r3,48
   41a14:	10c13626 	beq	r2,r3,41ef0 <___vfprintf_internal_r+0xbdc>
   41a18:	80ffffc5 	stb	r3,-1(r16)
   41a1c:	d8c02817 	ldw	r3,160(sp)
   41a20:	80bfffc4 	addi	r2,r16,-1
   41a24:	1021883a 	mov	r16,r2
   41a28:	1887c83a 	sub	r3,r3,r2
   41a2c:	d8c02e15 	stw	r3,184(sp)
   41a30:	d8802e17 	ldw	r2,184(sp)
   41a34:	d9002917 	ldw	r4,164(sp)
   41a38:	1100010e 	bge	r2,r4,41a40 <___vfprintf_internal_r+0x72c>
   41a3c:	2005883a 	mov	r2,r4
   41a40:	d8802a15 	stw	r2,168(sp)
   41a44:	d8003215 	stw	zero,200(sp)
   41a48:	e7003fcc 	andi	fp,fp,255
   41a4c:	e700201c 	xori	fp,fp,128
   41a50:	e73fe004 	addi	fp,fp,-128
   41a54:	e0000326 	beq	fp,zero,41a64 <___vfprintf_internal_r+0x750>
   41a58:	d8c02a17 	ldw	r3,168(sp)
   41a5c:	18c00044 	addi	r3,r3,1
   41a60:	d8c02a15 	stw	r3,168(sp)
   41a64:	90c0008c 	andi	r3,r18,2
   41a68:	d8c02b15 	stw	r3,172(sp)
   41a6c:	18000326 	beq	r3,zero,41a7c <___vfprintf_internal_r+0x768>
   41a70:	d8c02a17 	ldw	r3,168(sp)
   41a74:	18c00084 	addi	r3,r3,2
   41a78:	d8c02a15 	stw	r3,168(sp)
   41a7c:	90c0210c 	andi	r3,r18,132
   41a80:	d8c03015 	stw	r3,192(sp)
   41a84:	1801a31e 	bne	r3,zero,42114 <___vfprintf_internal_r+0xe00>
   41a88:	d9003117 	ldw	r4,196(sp)
   41a8c:	d8c02a17 	ldw	r3,168(sp)
   41a90:	20e7c83a 	sub	r19,r4,r3
   41a94:	04c19f0e 	bge	zero,r19,42114 <___vfprintf_internal_r+0xe00>
   41a98:	02400404 	movi	r9,16
   41a9c:	d8c02017 	ldw	r3,128(sp)
   41aa0:	d8801f17 	ldw	r2,124(sp)
   41aa4:	4cc50d0e 	bge	r9,r19,42edc <___vfprintf_internal_r+0x1bc8>
   41aa8:	01400174 	movhi	r5,5
   41aac:	297e4984 	addi	r5,r5,-1754
   41ab0:	dc403b15 	stw	r17,236(sp)
   41ab4:	d9403515 	stw	r5,212(sp)
   41ab8:	9823883a 	mov	r17,r19
   41abc:	482d883a 	mov	r22,r9
   41ac0:	9027883a 	mov	r19,r18
   41ac4:	070001c4 	movi	fp,7
   41ac8:	8025883a 	mov	r18,r16
   41acc:	dc002c17 	ldw	r16,176(sp)
   41ad0:	00000306 	br	41ae0 <___vfprintf_internal_r+0x7cc>
   41ad4:	8c7ffc04 	addi	r17,r17,-16
   41ad8:	42000204 	addi	r8,r8,8
   41adc:	b440130e 	bge	r22,r17,41b2c <___vfprintf_internal_r+0x818>
   41ae0:	01000174 	movhi	r4,5
   41ae4:	18c00404 	addi	r3,r3,16
   41ae8:	10800044 	addi	r2,r2,1
   41aec:	213e4984 	addi	r4,r4,-1754
   41af0:	41000015 	stw	r4,0(r8)
   41af4:	45800115 	stw	r22,4(r8)
   41af8:	d8c02015 	stw	r3,128(sp)
   41afc:	d8801f15 	stw	r2,124(sp)
   41b00:	e0bff40e 	bge	fp,r2,41ad4 <__alt_data_end+0xfffda9d4>
   41b04:	d9801e04 	addi	r6,sp,120
   41b08:	b80b883a 	mov	r5,r23
   41b0c:	8009883a 	mov	r4,r16
   41b10:	00489100 	call	48910 <__sprint_r>
   41b14:	103f011e 	bne	r2,zero,4171c <__alt_data_end+0xfffda61c>
   41b18:	8c7ffc04 	addi	r17,r17,-16
   41b1c:	d8c02017 	ldw	r3,128(sp)
   41b20:	d8801f17 	ldw	r2,124(sp)
   41b24:	da000404 	addi	r8,sp,16
   41b28:	b47fed16 	blt	r22,r17,41ae0 <__alt_data_end+0xfffda9e0>
   41b2c:	9021883a 	mov	r16,r18
   41b30:	9825883a 	mov	r18,r19
   41b34:	8827883a 	mov	r19,r17
   41b38:	dc403b17 	ldw	r17,236(sp)
   41b3c:	d9403517 	ldw	r5,212(sp)
   41b40:	98c7883a 	add	r3,r19,r3
   41b44:	10800044 	addi	r2,r2,1
   41b48:	41400015 	stw	r5,0(r8)
   41b4c:	44c00115 	stw	r19,4(r8)
   41b50:	d8c02015 	stw	r3,128(sp)
   41b54:	d8801f15 	stw	r2,124(sp)
   41b58:	010001c4 	movi	r4,7
   41b5c:	2082a316 	blt	r4,r2,425ec <___vfprintf_internal_r+0x12d8>
   41b60:	df002787 	ldb	fp,158(sp)
   41b64:	42000204 	addi	r8,r8,8
   41b68:	e0000c26 	beq	fp,zero,41b9c <___vfprintf_internal_r+0x888>
   41b6c:	d8801f17 	ldw	r2,124(sp)
   41b70:	d9002784 	addi	r4,sp,158
   41b74:	18c00044 	addi	r3,r3,1
   41b78:	10800044 	addi	r2,r2,1
   41b7c:	41000015 	stw	r4,0(r8)
   41b80:	01000044 	movi	r4,1
   41b84:	41000115 	stw	r4,4(r8)
   41b88:	d8c02015 	stw	r3,128(sp)
   41b8c:	d8801f15 	stw	r2,124(sp)
   41b90:	010001c4 	movi	r4,7
   41b94:	20823c16 	blt	r4,r2,42488 <___vfprintf_internal_r+0x1174>
   41b98:	42000204 	addi	r8,r8,8
   41b9c:	d8802b17 	ldw	r2,172(sp)
   41ba0:	10000c26 	beq	r2,zero,41bd4 <___vfprintf_internal_r+0x8c0>
   41ba4:	d8801f17 	ldw	r2,124(sp)
   41ba8:	d9002704 	addi	r4,sp,156
   41bac:	18c00084 	addi	r3,r3,2
   41bb0:	10800044 	addi	r2,r2,1
   41bb4:	41000015 	stw	r4,0(r8)
   41bb8:	01000084 	movi	r4,2
   41bbc:	41000115 	stw	r4,4(r8)
   41bc0:	d8c02015 	stw	r3,128(sp)
   41bc4:	d8801f15 	stw	r2,124(sp)
   41bc8:	010001c4 	movi	r4,7
   41bcc:	20823616 	blt	r4,r2,424a8 <___vfprintf_internal_r+0x1194>
   41bd0:	42000204 	addi	r8,r8,8
   41bd4:	d9003017 	ldw	r4,192(sp)
   41bd8:	00802004 	movi	r2,128
   41bdc:	20819926 	beq	r4,r2,42244 <___vfprintf_internal_r+0xf30>
   41be0:	d9402917 	ldw	r5,164(sp)
   41be4:	d8802e17 	ldw	r2,184(sp)
   41be8:	28adc83a 	sub	r22,r5,r2
   41bec:	0580310e 	bge	zero,r22,41cb4 <___vfprintf_internal_r+0x9a0>
   41bf0:	07000404 	movi	fp,16
   41bf4:	d8801f17 	ldw	r2,124(sp)
   41bf8:	e584140e 	bge	fp,r22,42c4c <___vfprintf_internal_r+0x1938>
   41bfc:	01400174 	movhi	r5,5
   41c00:	297e4584 	addi	r5,r5,-1770
   41c04:	dc402915 	stw	r17,164(sp)
   41c08:	d9402b15 	stw	r5,172(sp)
   41c0c:	b023883a 	mov	r17,r22
   41c10:	04c001c4 	movi	r19,7
   41c14:	a82d883a 	mov	r22,r21
   41c18:	902b883a 	mov	r21,r18
   41c1c:	8025883a 	mov	r18,r16
   41c20:	dc002c17 	ldw	r16,176(sp)
   41c24:	00000306 	br	41c34 <___vfprintf_internal_r+0x920>
   41c28:	8c7ffc04 	addi	r17,r17,-16
   41c2c:	42000204 	addi	r8,r8,8
   41c30:	e440110e 	bge	fp,r17,41c78 <___vfprintf_internal_r+0x964>
   41c34:	18c00404 	addi	r3,r3,16
   41c38:	10800044 	addi	r2,r2,1
   41c3c:	45000015 	stw	r20,0(r8)
   41c40:	47000115 	stw	fp,4(r8)
   41c44:	d8c02015 	stw	r3,128(sp)
   41c48:	d8801f15 	stw	r2,124(sp)
   41c4c:	98bff60e 	bge	r19,r2,41c28 <__alt_data_end+0xfffdab28>
   41c50:	d9801e04 	addi	r6,sp,120
   41c54:	b80b883a 	mov	r5,r23
   41c58:	8009883a 	mov	r4,r16
   41c5c:	00489100 	call	48910 <__sprint_r>
   41c60:	103eae1e 	bne	r2,zero,4171c <__alt_data_end+0xfffda61c>
   41c64:	8c7ffc04 	addi	r17,r17,-16
   41c68:	d8c02017 	ldw	r3,128(sp)
   41c6c:	d8801f17 	ldw	r2,124(sp)
   41c70:	da000404 	addi	r8,sp,16
   41c74:	e47fef16 	blt	fp,r17,41c34 <__alt_data_end+0xfffdab34>
   41c78:	9021883a 	mov	r16,r18
   41c7c:	a825883a 	mov	r18,r21
   41c80:	b02b883a 	mov	r21,r22
   41c84:	882d883a 	mov	r22,r17
   41c88:	dc402917 	ldw	r17,164(sp)
   41c8c:	d9002b17 	ldw	r4,172(sp)
   41c90:	1d87883a 	add	r3,r3,r22
   41c94:	10800044 	addi	r2,r2,1
   41c98:	41000015 	stw	r4,0(r8)
   41c9c:	45800115 	stw	r22,4(r8)
   41ca0:	d8c02015 	stw	r3,128(sp)
   41ca4:	d8801f15 	stw	r2,124(sp)
   41ca8:	010001c4 	movi	r4,7
   41cac:	2081ee16 	blt	r4,r2,42468 <___vfprintf_internal_r+0x1154>
   41cb0:	42000204 	addi	r8,r8,8
   41cb4:	9080400c 	andi	r2,r18,256
   41cb8:	1001181e 	bne	r2,zero,4211c <___vfprintf_internal_r+0xe08>
   41cbc:	d9402e17 	ldw	r5,184(sp)
   41cc0:	d8801f17 	ldw	r2,124(sp)
   41cc4:	44000015 	stw	r16,0(r8)
   41cc8:	1947883a 	add	r3,r3,r5
   41ccc:	10800044 	addi	r2,r2,1
   41cd0:	41400115 	stw	r5,4(r8)
   41cd4:	d8c02015 	stw	r3,128(sp)
   41cd8:	d8801f15 	stw	r2,124(sp)
   41cdc:	010001c4 	movi	r4,7
   41ce0:	2081d316 	blt	r4,r2,42430 <___vfprintf_internal_r+0x111c>
   41ce4:	42000204 	addi	r8,r8,8
   41ce8:	9480010c 	andi	r18,r18,4
   41cec:	90003226 	beq	r18,zero,41db8 <___vfprintf_internal_r+0xaa4>
   41cf0:	d9403117 	ldw	r5,196(sp)
   41cf4:	d8802a17 	ldw	r2,168(sp)
   41cf8:	28a1c83a 	sub	r16,r5,r2
   41cfc:	04002e0e 	bge	zero,r16,41db8 <___vfprintf_internal_r+0xaa4>
   41d00:	04400404 	movi	r17,16
   41d04:	d8801f17 	ldw	r2,124(sp)
   41d08:	8c04a20e 	bge	r17,r16,42f94 <___vfprintf_internal_r+0x1c80>
   41d0c:	01400174 	movhi	r5,5
   41d10:	297e4984 	addi	r5,r5,-1754
   41d14:	d9403515 	stw	r5,212(sp)
   41d18:	048001c4 	movi	r18,7
   41d1c:	dcc02c17 	ldw	r19,176(sp)
   41d20:	00000306 	br	41d30 <___vfprintf_internal_r+0xa1c>
   41d24:	843ffc04 	addi	r16,r16,-16
   41d28:	42000204 	addi	r8,r8,8
   41d2c:	8c00130e 	bge	r17,r16,41d7c <___vfprintf_internal_r+0xa68>
   41d30:	01000174 	movhi	r4,5
   41d34:	18c00404 	addi	r3,r3,16
   41d38:	10800044 	addi	r2,r2,1
   41d3c:	213e4984 	addi	r4,r4,-1754
   41d40:	41000015 	stw	r4,0(r8)
   41d44:	44400115 	stw	r17,4(r8)
   41d48:	d8c02015 	stw	r3,128(sp)
   41d4c:	d8801f15 	stw	r2,124(sp)
   41d50:	90bff40e 	bge	r18,r2,41d24 <__alt_data_end+0xfffdac24>
   41d54:	d9801e04 	addi	r6,sp,120
   41d58:	b80b883a 	mov	r5,r23
   41d5c:	9809883a 	mov	r4,r19
   41d60:	00489100 	call	48910 <__sprint_r>
   41d64:	103e6d1e 	bne	r2,zero,4171c <__alt_data_end+0xfffda61c>
   41d68:	843ffc04 	addi	r16,r16,-16
   41d6c:	d8c02017 	ldw	r3,128(sp)
   41d70:	d8801f17 	ldw	r2,124(sp)
   41d74:	da000404 	addi	r8,sp,16
   41d78:	8c3fed16 	blt	r17,r16,41d30 <__alt_data_end+0xfffdac30>
   41d7c:	d9403517 	ldw	r5,212(sp)
   41d80:	1c07883a 	add	r3,r3,r16
   41d84:	10800044 	addi	r2,r2,1
   41d88:	41400015 	stw	r5,0(r8)
   41d8c:	44000115 	stw	r16,4(r8)
   41d90:	d8c02015 	stw	r3,128(sp)
   41d94:	d8801f15 	stw	r2,124(sp)
   41d98:	010001c4 	movi	r4,7
   41d9c:	2080060e 	bge	r4,r2,41db8 <___vfprintf_internal_r+0xaa4>
   41da0:	d9002c17 	ldw	r4,176(sp)
   41da4:	d9801e04 	addi	r6,sp,120
   41da8:	b80b883a 	mov	r5,r23
   41dac:	00489100 	call	48910 <__sprint_r>
   41db0:	103e5a1e 	bne	r2,zero,4171c <__alt_data_end+0xfffda61c>
   41db4:	d8c02017 	ldw	r3,128(sp)
   41db8:	d8803117 	ldw	r2,196(sp)
   41dbc:	d9002a17 	ldw	r4,168(sp)
   41dc0:	1100010e 	bge	r2,r4,41dc8 <___vfprintf_internal_r+0xab4>
   41dc4:	2005883a 	mov	r2,r4
   41dc8:	d9402f17 	ldw	r5,188(sp)
   41dcc:	288b883a 	add	r5,r5,r2
   41dd0:	d9402f15 	stw	r5,188(sp)
   41dd4:	18019e1e 	bne	r3,zero,42450 <___vfprintf_internal_r+0x113c>
   41dd8:	a8800007 	ldb	r2,0(r21)
   41ddc:	d8001f15 	stw	zero,124(sp)
   41de0:	da000404 	addi	r8,sp,16
   41de4:	103d851e 	bne	r2,zero,413fc <__alt_data_end+0xfffda2fc>
   41de8:	a821883a 	mov	r16,r21
   41dec:	003d9b06 	br	4145c <__alt_data_end+0xfffda35c>
   41df0:	18c03fcc 	andi	r3,r3,255
   41df4:	1805c11e 	bne	r3,zero,434fc <___vfprintf_internal_r+0x21e8>
   41df8:	94800414 	ori	r18,r18,16
   41dfc:	9080080c 	andi	r2,r18,32
   41e00:	10020c26 	beq	r2,zero,42634 <___vfprintf_internal_r+0x1320>
   41e04:	d8802d17 	ldw	r2,180(sp)
   41e08:	d9002917 	ldw	r4,164(sp)
   41e0c:	d8002785 	stb	zero,158(sp)
   41e10:	10c00204 	addi	r3,r2,8
   41e14:	14c00017 	ldw	r19,0(r2)
   41e18:	15800117 	ldw	r22,4(r2)
   41e1c:	20040f16 	blt	r4,zero,42e5c <___vfprintf_internal_r+0x1b48>
   41e20:	013fdfc4 	movi	r4,-129
   41e24:	9d84b03a 	or	r2,r19,r22
   41e28:	d8c02d15 	stw	r3,180(sp)
   41e2c:	9124703a 	and	r18,r18,r4
   41e30:	0039883a 	mov	fp,zero
   41e34:	103e891e 	bne	r2,zero,4185c <__alt_data_end+0xfffda75c>
   41e38:	d9002917 	ldw	r4,164(sp)
   41e3c:	2002c11e 	bne	r4,zero,42944 <___vfprintf_internal_r+0x1630>
   41e40:	d8002915 	stw	zero,164(sp)
   41e44:	d8002e15 	stw	zero,184(sp)
   41e48:	dc001e04 	addi	r16,sp,120
   41e4c:	003ef806 	br	41a30 <__alt_data_end+0xfffda930>
   41e50:	18c03fcc 	andi	r3,r3,255
   41e54:	18059d1e 	bne	r3,zero,434cc <___vfprintf_internal_r+0x21b8>
   41e58:	01400174 	movhi	r5,5
   41e5c:	297e3904 	addi	r5,r5,-1820
   41e60:	d9403915 	stw	r5,228(sp)
   41e64:	9080080c 	andi	r2,r18,32
   41e68:	10005226 	beq	r2,zero,41fb4 <___vfprintf_internal_r+0xca0>
   41e6c:	d8802d17 	ldw	r2,180(sp)
   41e70:	14c00017 	ldw	r19,0(r2)
   41e74:	15800117 	ldw	r22,4(r2)
   41e78:	10800204 	addi	r2,r2,8
   41e7c:	d8802d15 	stw	r2,180(sp)
   41e80:	9080004c 	andi	r2,r18,1
   41e84:	10019026 	beq	r2,zero,424c8 <___vfprintf_internal_r+0x11b4>
   41e88:	9d84b03a 	or	r2,r19,r22
   41e8c:	10036926 	beq	r2,zero,42c34 <___vfprintf_internal_r+0x1920>
   41e90:	d8c02917 	ldw	r3,164(sp)
   41e94:	00800c04 	movi	r2,48
   41e98:	d8802705 	stb	r2,156(sp)
   41e9c:	dc402745 	stb	r17,157(sp)
   41ea0:	d8002785 	stb	zero,158(sp)
   41ea4:	90800094 	ori	r2,r18,2
   41ea8:	18045d16 	blt	r3,zero,43020 <___vfprintf_internal_r+0x1d0c>
   41eac:	00bfdfc4 	movi	r2,-129
   41eb0:	90a4703a 	and	r18,r18,r2
   41eb4:	94800094 	ori	r18,r18,2
   41eb8:	0039883a 	mov	fp,zero
   41ebc:	d9003917 	ldw	r4,228(sp)
   41ec0:	dc001e04 	addi	r16,sp,120
   41ec4:	988003cc 	andi	r2,r19,15
   41ec8:	b006973a 	slli	r3,r22,28
   41ecc:	2085883a 	add	r2,r4,r2
   41ed0:	9826d13a 	srli	r19,r19,4
   41ed4:	10800003 	ldbu	r2,0(r2)
   41ed8:	b02cd13a 	srli	r22,r22,4
   41edc:	843fffc4 	addi	r16,r16,-1
   41ee0:	1ce6b03a 	or	r19,r3,r19
   41ee4:	80800005 	stb	r2,0(r16)
   41ee8:	9d84b03a 	or	r2,r19,r22
   41eec:	103ff51e 	bne	r2,zero,41ec4 <__alt_data_end+0xfffdadc4>
   41ef0:	d8c02817 	ldw	r3,160(sp)
   41ef4:	1c07c83a 	sub	r3,r3,r16
   41ef8:	d8c02e15 	stw	r3,184(sp)
   41efc:	003ecc06 	br	41a30 <__alt_data_end+0xfffda930>
   41f00:	18c03fcc 	andi	r3,r3,255
   41f04:	183e9f26 	beq	r3,zero,41984 <__alt_data_end+0xfffda884>
   41f08:	d9c02785 	stb	r7,158(sp)
   41f0c:	003e9d06 	br	41984 <__alt_data_end+0xfffda884>
   41f10:	00c00044 	movi	r3,1
   41f14:	01c00ac4 	movi	r7,43
   41f18:	ac400007 	ldb	r17,0(r21)
   41f1c:	003d5e06 	br	41498 <__alt_data_end+0xfffda398>
   41f20:	94800814 	ori	r18,r18,32
   41f24:	ac400007 	ldb	r17,0(r21)
   41f28:	003d5b06 	br	41498 <__alt_data_end+0xfffda398>
   41f2c:	d8c02d17 	ldw	r3,180(sp)
   41f30:	d8002785 	stb	zero,158(sp)
   41f34:	1c000017 	ldw	r16,0(r3)
   41f38:	1cc00104 	addi	r19,r3,4
   41f3c:	80041926 	beq	r16,zero,42fa4 <___vfprintf_internal_r+0x1c90>
   41f40:	d9002917 	ldw	r4,164(sp)
   41f44:	2003d016 	blt	r4,zero,42e88 <___vfprintf_internal_r+0x1b74>
   41f48:	200d883a 	mov	r6,r4
   41f4c:	000b883a 	mov	r5,zero
   41f50:	8009883a 	mov	r4,r16
   41f54:	da003d15 	stw	r8,244(sp)
   41f58:	0046b240 	call	46b24 <memchr>
   41f5c:	da003d17 	ldw	r8,244(sp)
   41f60:	10045426 	beq	r2,zero,430b4 <___vfprintf_internal_r+0x1da0>
   41f64:	1405c83a 	sub	r2,r2,r16
   41f68:	d8802e15 	stw	r2,184(sp)
   41f6c:	1003cc16 	blt	r2,zero,42ea0 <___vfprintf_internal_r+0x1b8c>
   41f70:	df002783 	ldbu	fp,158(sp)
   41f74:	d8802a15 	stw	r2,168(sp)
   41f78:	dcc02d15 	stw	r19,180(sp)
   41f7c:	d8002915 	stw	zero,164(sp)
   41f80:	d8003215 	stw	zero,200(sp)
   41f84:	003eb006 	br	41a48 <__alt_data_end+0xfffda948>
   41f88:	18c03fcc 	andi	r3,r3,255
   41f8c:	183f9b26 	beq	r3,zero,41dfc <__alt_data_end+0xfffdacfc>
   41f90:	d9c02785 	stb	r7,158(sp)
   41f94:	003f9906 	br	41dfc <__alt_data_end+0xfffdacfc>
   41f98:	18c03fcc 	andi	r3,r3,255
   41f9c:	1805551e 	bne	r3,zero,434f4 <___vfprintf_internal_r+0x21e0>
   41fa0:	01400174 	movhi	r5,5
   41fa4:	297e3e04 	addi	r5,r5,-1800
   41fa8:	d9403915 	stw	r5,228(sp)
   41fac:	9080080c 	andi	r2,r18,32
   41fb0:	103fae1e 	bne	r2,zero,41e6c <__alt_data_end+0xfffdad6c>
   41fb4:	9080040c 	andi	r2,r18,16
   41fb8:	1002de26 	beq	r2,zero,42b34 <___vfprintf_internal_r+0x1820>
   41fbc:	d8c02d17 	ldw	r3,180(sp)
   41fc0:	002d883a 	mov	r22,zero
   41fc4:	1cc00017 	ldw	r19,0(r3)
   41fc8:	18c00104 	addi	r3,r3,4
   41fcc:	d8c02d15 	stw	r3,180(sp)
   41fd0:	003fab06 	br	41e80 <__alt_data_end+0xfffdad80>
   41fd4:	38803fcc 	andi	r2,r7,255
   41fd8:	1080201c 	xori	r2,r2,128
   41fdc:	10bfe004 	addi	r2,r2,-128
   41fe0:	1002d21e 	bne	r2,zero,42b2c <___vfprintf_internal_r+0x1818>
   41fe4:	00c00044 	movi	r3,1
   41fe8:	01c00804 	movi	r7,32
   41fec:	ac400007 	ldb	r17,0(r21)
   41ff0:	003d2906 	br	41498 <__alt_data_end+0xfffda398>
   41ff4:	94800054 	ori	r18,r18,1
   41ff8:	ac400007 	ldb	r17,0(r21)
   41ffc:	003d2606 	br	41498 <__alt_data_end+0xfffda398>
   42000:	18c03fcc 	andi	r3,r3,255
   42004:	183e0526 	beq	r3,zero,4181c <__alt_data_end+0xfffda71c>
   42008:	d9c02785 	stb	r7,158(sp)
   4200c:	003e0306 	br	4181c <__alt_data_end+0xfffda71c>
   42010:	94801014 	ori	r18,r18,64
   42014:	ac400007 	ldb	r17,0(r21)
   42018:	003d1f06 	br	41498 <__alt_data_end+0xfffda398>
   4201c:	ac400007 	ldb	r17,0(r21)
   42020:	8a438726 	beq	r17,r9,42e40 <___vfprintf_internal_r+0x1b2c>
   42024:	94800414 	ori	r18,r18,16
   42028:	003d1b06 	br	41498 <__alt_data_end+0xfffda398>
   4202c:	18c03fcc 	andi	r3,r3,255
   42030:	1805341e 	bne	r3,zero,43504 <___vfprintf_internal_r+0x21f0>
   42034:	9080080c 	andi	r2,r18,32
   42038:	1002cd26 	beq	r2,zero,42b70 <___vfprintf_internal_r+0x185c>
   4203c:	d9402d17 	ldw	r5,180(sp)
   42040:	d9002f17 	ldw	r4,188(sp)
   42044:	28800017 	ldw	r2,0(r5)
   42048:	2007d7fa 	srai	r3,r4,31
   4204c:	29400104 	addi	r5,r5,4
   42050:	d9402d15 	stw	r5,180(sp)
   42054:	11000015 	stw	r4,0(r2)
   42058:	10c00115 	stw	r3,4(r2)
   4205c:	003ce506 	br	413f4 <__alt_data_end+0xfffda2f4>
   42060:	d8c02d17 	ldw	r3,180(sp)
   42064:	d9002d17 	ldw	r4,180(sp)
   42068:	d8002785 	stb	zero,158(sp)
   4206c:	18800017 	ldw	r2,0(r3)
   42070:	21000104 	addi	r4,r4,4
   42074:	00c00044 	movi	r3,1
   42078:	d8c02a15 	stw	r3,168(sp)
   4207c:	d8801405 	stb	r2,80(sp)
   42080:	d9002d15 	stw	r4,180(sp)
   42084:	d8c02e15 	stw	r3,184(sp)
   42088:	d8002915 	stw	zero,164(sp)
   4208c:	d8003215 	stw	zero,200(sp)
   42090:	dc001404 	addi	r16,sp,80
   42094:	0039883a 	mov	fp,zero
   42098:	003e7206 	br	41a64 <__alt_data_end+0xfffda964>
   4209c:	01000174 	movhi	r4,5
   420a0:	213e3e04 	addi	r4,r4,-1800
   420a4:	0039883a 	mov	fp,zero
   420a8:	d9003915 	stw	r4,228(sp)
   420ac:	04401e04 	movi	r17,120
   420b0:	003f8206 	br	41ebc <__alt_data_end+0xfffdadbc>
   420b4:	18c03fcc 	andi	r3,r3,255
   420b8:	1805061e 	bne	r3,zero,434d4 <___vfprintf_internal_r+0x21c0>
   420bc:	883d9126 	beq	r17,zero,41704 <__alt_data_end+0xfffda604>
   420c0:	00c00044 	movi	r3,1
   420c4:	d8c02a15 	stw	r3,168(sp)
   420c8:	dc401405 	stb	r17,80(sp)
   420cc:	d8002785 	stb	zero,158(sp)
   420d0:	003fec06 	br	42084 <__alt_data_end+0xfffdaf84>
   420d4:	01400174 	movhi	r5,5
   420d8:	297e3e04 	addi	r5,r5,-1800
   420dc:	d9403915 	stw	r5,228(sp)
   420e0:	d8c02d15 	stw	r3,180(sp)
   420e4:	1025883a 	mov	r18,r2
   420e8:	04401e04 	movi	r17,120
   420ec:	9d84b03a 	or	r2,r19,r22
   420f0:	1000fc1e 	bne	r2,zero,424e4 <___vfprintf_internal_r+0x11d0>
   420f4:	0039883a 	mov	fp,zero
   420f8:	00800084 	movi	r2,2
   420fc:	10803fcc 	andi	r2,r2,255
   42100:	00c00044 	movi	r3,1
   42104:	10c20f26 	beq	r2,r3,42944 <___vfprintf_internal_r+0x1630>
   42108:	00c00084 	movi	r3,2
   4210c:	10fd6326 	beq	r2,r3,4169c <__alt_data_end+0xfffda59c>
   42110:	003e2d06 	br	419c8 <__alt_data_end+0xfffda8c8>
   42114:	d8c02017 	ldw	r3,128(sp)
   42118:	003e9306 	br	41b68 <__alt_data_end+0xfffdaa68>
   4211c:	00801944 	movi	r2,101
   42120:	14407e0e 	bge	r2,r17,4231c <___vfprintf_internal_r+0x1008>
   42124:	d9003617 	ldw	r4,216(sp)
   42128:	d9403817 	ldw	r5,224(sp)
   4212c:	000d883a 	mov	r6,zero
   42130:	000f883a 	mov	r7,zero
   42134:	d8c03c15 	stw	r3,240(sp)
   42138:	da003d15 	stw	r8,244(sp)
   4213c:	004baec0 	call	4baec <__eqdf2>
   42140:	d8c03c17 	ldw	r3,240(sp)
   42144:	da003d17 	ldw	r8,244(sp)
   42148:	1000f71e 	bne	r2,zero,42528 <___vfprintf_internal_r+0x1214>
   4214c:	d8801f17 	ldw	r2,124(sp)
   42150:	01000174 	movhi	r4,5
   42154:	213e4504 	addi	r4,r4,-1772
   42158:	18c00044 	addi	r3,r3,1
   4215c:	10800044 	addi	r2,r2,1
   42160:	41000015 	stw	r4,0(r8)
   42164:	01000044 	movi	r4,1
   42168:	41000115 	stw	r4,4(r8)
   4216c:	d8c02015 	stw	r3,128(sp)
   42170:	d8801f15 	stw	r2,124(sp)
   42174:	010001c4 	movi	r4,7
   42178:	2082b816 	blt	r4,r2,42c5c <___vfprintf_internal_r+0x1948>
   4217c:	42000204 	addi	r8,r8,8
   42180:	d8802617 	ldw	r2,152(sp)
   42184:	d9403317 	ldw	r5,204(sp)
   42188:	11400216 	blt	r2,r5,42194 <___vfprintf_internal_r+0xe80>
   4218c:	9080004c 	andi	r2,r18,1
   42190:	103ed526 	beq	r2,zero,41ce8 <__alt_data_end+0xfffdabe8>
   42194:	d8803717 	ldw	r2,220(sp)
   42198:	d9003417 	ldw	r4,208(sp)
   4219c:	d9403717 	ldw	r5,220(sp)
   421a0:	1887883a 	add	r3,r3,r2
   421a4:	d8801f17 	ldw	r2,124(sp)
   421a8:	41000015 	stw	r4,0(r8)
   421ac:	41400115 	stw	r5,4(r8)
   421b0:	10800044 	addi	r2,r2,1
   421b4:	d8c02015 	stw	r3,128(sp)
   421b8:	d8801f15 	stw	r2,124(sp)
   421bc:	010001c4 	movi	r4,7
   421c0:	20832916 	blt	r4,r2,42e68 <___vfprintf_internal_r+0x1b54>
   421c4:	42000204 	addi	r8,r8,8
   421c8:	d8803317 	ldw	r2,204(sp)
   421cc:	143fffc4 	addi	r16,r2,-1
   421d0:	043ec50e 	bge	zero,r16,41ce8 <__alt_data_end+0xfffdabe8>
   421d4:	04400404 	movi	r17,16
   421d8:	d8801f17 	ldw	r2,124(sp)
   421dc:	8c00880e 	bge	r17,r16,42400 <___vfprintf_internal_r+0x10ec>
   421e0:	01400174 	movhi	r5,5
   421e4:	297e4584 	addi	r5,r5,-1770
   421e8:	d9402b15 	stw	r5,172(sp)
   421ec:	058001c4 	movi	r22,7
   421f0:	dcc02c17 	ldw	r19,176(sp)
   421f4:	00000306 	br	42204 <___vfprintf_internal_r+0xef0>
   421f8:	42000204 	addi	r8,r8,8
   421fc:	843ffc04 	addi	r16,r16,-16
   42200:	8c00820e 	bge	r17,r16,4240c <___vfprintf_internal_r+0x10f8>
   42204:	18c00404 	addi	r3,r3,16
   42208:	10800044 	addi	r2,r2,1
   4220c:	45000015 	stw	r20,0(r8)
   42210:	44400115 	stw	r17,4(r8)
   42214:	d8c02015 	stw	r3,128(sp)
   42218:	d8801f15 	stw	r2,124(sp)
   4221c:	b0bff60e 	bge	r22,r2,421f8 <__alt_data_end+0xfffdb0f8>
   42220:	d9801e04 	addi	r6,sp,120
   42224:	b80b883a 	mov	r5,r23
   42228:	9809883a 	mov	r4,r19
   4222c:	00489100 	call	48910 <__sprint_r>
   42230:	103d3a1e 	bne	r2,zero,4171c <__alt_data_end+0xfffda61c>
   42234:	d8c02017 	ldw	r3,128(sp)
   42238:	d8801f17 	ldw	r2,124(sp)
   4223c:	da000404 	addi	r8,sp,16
   42240:	003fee06 	br	421fc <__alt_data_end+0xfffdb0fc>
   42244:	d9403117 	ldw	r5,196(sp)
   42248:	d8802a17 	ldw	r2,168(sp)
   4224c:	28adc83a 	sub	r22,r5,r2
   42250:	05be630e 	bge	zero,r22,41be0 <__alt_data_end+0xfffdaae0>
   42254:	07000404 	movi	fp,16
   42258:	d8801f17 	ldw	r2,124(sp)
   4225c:	e5838f0e 	bge	fp,r22,4309c <___vfprintf_internal_r+0x1d88>
   42260:	01400174 	movhi	r5,5
   42264:	297e4584 	addi	r5,r5,-1770
   42268:	dc403015 	stw	r17,192(sp)
   4226c:	d9402b15 	stw	r5,172(sp)
   42270:	b023883a 	mov	r17,r22
   42274:	04c001c4 	movi	r19,7
   42278:	a82d883a 	mov	r22,r21
   4227c:	902b883a 	mov	r21,r18
   42280:	8025883a 	mov	r18,r16
   42284:	dc002c17 	ldw	r16,176(sp)
   42288:	00000306 	br	42298 <___vfprintf_internal_r+0xf84>
   4228c:	8c7ffc04 	addi	r17,r17,-16
   42290:	42000204 	addi	r8,r8,8
   42294:	e440110e 	bge	fp,r17,422dc <___vfprintf_internal_r+0xfc8>
   42298:	18c00404 	addi	r3,r3,16
   4229c:	10800044 	addi	r2,r2,1
   422a0:	45000015 	stw	r20,0(r8)
   422a4:	47000115 	stw	fp,4(r8)
   422a8:	d8c02015 	stw	r3,128(sp)
   422ac:	d8801f15 	stw	r2,124(sp)
   422b0:	98bff60e 	bge	r19,r2,4228c <__alt_data_end+0xfffdb18c>
   422b4:	d9801e04 	addi	r6,sp,120
   422b8:	b80b883a 	mov	r5,r23
   422bc:	8009883a 	mov	r4,r16
   422c0:	00489100 	call	48910 <__sprint_r>
   422c4:	103d151e 	bne	r2,zero,4171c <__alt_data_end+0xfffda61c>
   422c8:	8c7ffc04 	addi	r17,r17,-16
   422cc:	d8c02017 	ldw	r3,128(sp)
   422d0:	d8801f17 	ldw	r2,124(sp)
   422d4:	da000404 	addi	r8,sp,16
   422d8:	e47fef16 	blt	fp,r17,42298 <__alt_data_end+0xfffdb198>
   422dc:	9021883a 	mov	r16,r18
   422e0:	a825883a 	mov	r18,r21
   422e4:	b02b883a 	mov	r21,r22
   422e8:	882d883a 	mov	r22,r17
   422ec:	dc403017 	ldw	r17,192(sp)
   422f0:	d9002b17 	ldw	r4,172(sp)
   422f4:	1d87883a 	add	r3,r3,r22
   422f8:	10800044 	addi	r2,r2,1
   422fc:	41000015 	stw	r4,0(r8)
   42300:	45800115 	stw	r22,4(r8)
   42304:	d8c02015 	stw	r3,128(sp)
   42308:	d8801f15 	stw	r2,124(sp)
   4230c:	010001c4 	movi	r4,7
   42310:	20818e16 	blt	r4,r2,4294c <___vfprintf_internal_r+0x1638>
   42314:	42000204 	addi	r8,r8,8
   42318:	003e3106 	br	41be0 <__alt_data_end+0xfffdaae0>
   4231c:	d9403317 	ldw	r5,204(sp)
   42320:	00800044 	movi	r2,1
   42324:	18c00044 	addi	r3,r3,1
   42328:	1141530e 	bge	r2,r5,42878 <___vfprintf_internal_r+0x1564>
   4232c:	dc401f17 	ldw	r17,124(sp)
   42330:	00800044 	movi	r2,1
   42334:	40800115 	stw	r2,4(r8)
   42338:	8c400044 	addi	r17,r17,1
   4233c:	44000015 	stw	r16,0(r8)
   42340:	d8c02015 	stw	r3,128(sp)
   42344:	dc401f15 	stw	r17,124(sp)
   42348:	008001c4 	movi	r2,7
   4234c:	14416b16 	blt	r2,r17,428fc <___vfprintf_internal_r+0x15e8>
   42350:	42000204 	addi	r8,r8,8
   42354:	d8803717 	ldw	r2,220(sp)
   42358:	d9003417 	ldw	r4,208(sp)
   4235c:	8c400044 	addi	r17,r17,1
   42360:	10c7883a 	add	r3,r2,r3
   42364:	40800115 	stw	r2,4(r8)
   42368:	41000015 	stw	r4,0(r8)
   4236c:	d8c02015 	stw	r3,128(sp)
   42370:	dc401f15 	stw	r17,124(sp)
   42374:	008001c4 	movi	r2,7
   42378:	14416916 	blt	r2,r17,42920 <___vfprintf_internal_r+0x160c>
   4237c:	45800204 	addi	r22,r8,8
   42380:	d9003617 	ldw	r4,216(sp)
   42384:	d9403817 	ldw	r5,224(sp)
   42388:	000d883a 	mov	r6,zero
   4238c:	000f883a 	mov	r7,zero
   42390:	d8c03c15 	stw	r3,240(sp)
   42394:	004baec0 	call	4baec <__eqdf2>
   42398:	d8c03c17 	ldw	r3,240(sp)
   4239c:	1000bc26 	beq	r2,zero,42690 <___vfprintf_internal_r+0x137c>
   423a0:	d9403317 	ldw	r5,204(sp)
   423a4:	84000044 	addi	r16,r16,1
   423a8:	8c400044 	addi	r17,r17,1
   423ac:	28bfffc4 	addi	r2,r5,-1
   423b0:	1887883a 	add	r3,r3,r2
   423b4:	b0800115 	stw	r2,4(r22)
   423b8:	b4000015 	stw	r16,0(r22)
   423bc:	d8c02015 	stw	r3,128(sp)
   423c0:	dc401f15 	stw	r17,124(sp)
   423c4:	008001c4 	movi	r2,7
   423c8:	14414316 	blt	r2,r17,428d8 <___vfprintf_internal_r+0x15c4>
   423cc:	b5800204 	addi	r22,r22,8
   423d0:	d9003a17 	ldw	r4,232(sp)
   423d4:	df0022c4 	addi	fp,sp,139
   423d8:	8c400044 	addi	r17,r17,1
   423dc:	20c7883a 	add	r3,r4,r3
   423e0:	b7000015 	stw	fp,0(r22)
   423e4:	b1000115 	stw	r4,4(r22)
   423e8:	d8c02015 	stw	r3,128(sp)
   423ec:	dc401f15 	stw	r17,124(sp)
   423f0:	008001c4 	movi	r2,7
   423f4:	14400e16 	blt	r2,r17,42430 <___vfprintf_internal_r+0x111c>
   423f8:	b2000204 	addi	r8,r22,8
   423fc:	003e3a06 	br	41ce8 <__alt_data_end+0xfffdabe8>
   42400:	01000174 	movhi	r4,5
   42404:	213e4584 	addi	r4,r4,-1770
   42408:	d9002b15 	stw	r4,172(sp)
   4240c:	d9002b17 	ldw	r4,172(sp)
   42410:	1c07883a 	add	r3,r3,r16
   42414:	44000115 	stw	r16,4(r8)
   42418:	41000015 	stw	r4,0(r8)
   4241c:	10800044 	addi	r2,r2,1
   42420:	d8c02015 	stw	r3,128(sp)
   42424:	d8801f15 	stw	r2,124(sp)
   42428:	010001c4 	movi	r4,7
   4242c:	20be2d0e 	bge	r4,r2,41ce4 <__alt_data_end+0xfffdabe4>
   42430:	d9002c17 	ldw	r4,176(sp)
   42434:	d9801e04 	addi	r6,sp,120
   42438:	b80b883a 	mov	r5,r23
   4243c:	00489100 	call	48910 <__sprint_r>
   42440:	103cb61e 	bne	r2,zero,4171c <__alt_data_end+0xfffda61c>
   42444:	d8c02017 	ldw	r3,128(sp)
   42448:	da000404 	addi	r8,sp,16
   4244c:	003e2606 	br	41ce8 <__alt_data_end+0xfffdabe8>
   42450:	d9002c17 	ldw	r4,176(sp)
   42454:	d9801e04 	addi	r6,sp,120
   42458:	b80b883a 	mov	r5,r23
   4245c:	00489100 	call	48910 <__sprint_r>
   42460:	103e5d26 	beq	r2,zero,41dd8 <__alt_data_end+0xfffdacd8>
   42464:	003cad06 	br	4171c <__alt_data_end+0xfffda61c>
   42468:	d9002c17 	ldw	r4,176(sp)
   4246c:	d9801e04 	addi	r6,sp,120
   42470:	b80b883a 	mov	r5,r23
   42474:	00489100 	call	48910 <__sprint_r>
   42478:	103ca81e 	bne	r2,zero,4171c <__alt_data_end+0xfffda61c>
   4247c:	d8c02017 	ldw	r3,128(sp)
   42480:	da000404 	addi	r8,sp,16
   42484:	003e0b06 	br	41cb4 <__alt_data_end+0xfffdabb4>
   42488:	d9002c17 	ldw	r4,176(sp)
   4248c:	d9801e04 	addi	r6,sp,120
   42490:	b80b883a 	mov	r5,r23
   42494:	00489100 	call	48910 <__sprint_r>
   42498:	103ca01e 	bne	r2,zero,4171c <__alt_data_end+0xfffda61c>
   4249c:	d8c02017 	ldw	r3,128(sp)
   424a0:	da000404 	addi	r8,sp,16
   424a4:	003dbd06 	br	41b9c <__alt_data_end+0xfffdaa9c>
   424a8:	d9002c17 	ldw	r4,176(sp)
   424ac:	d9801e04 	addi	r6,sp,120
   424b0:	b80b883a 	mov	r5,r23
   424b4:	00489100 	call	48910 <__sprint_r>
   424b8:	103c981e 	bne	r2,zero,4171c <__alt_data_end+0xfffda61c>
   424bc:	d8c02017 	ldw	r3,128(sp)
   424c0:	da000404 	addi	r8,sp,16
   424c4:	003dc306 	br	41bd4 <__alt_data_end+0xfffdaad4>
   424c8:	d8802917 	ldw	r2,164(sp)
   424cc:	d8002785 	stb	zero,158(sp)
   424d0:	103f0616 	blt	r2,zero,420ec <__alt_data_end+0xfffdafec>
   424d4:	00ffdfc4 	movi	r3,-129
   424d8:	9d84b03a 	or	r2,r19,r22
   424dc:	90e4703a 	and	r18,r18,r3
   424e0:	103c6b26 	beq	r2,zero,41690 <__alt_data_end+0xfffda590>
   424e4:	0039883a 	mov	fp,zero
   424e8:	003e7406 	br	41ebc <__alt_data_end+0xfffdadbc>
   424ec:	9080040c 	andi	r2,r18,16
   424f0:	1001b326 	beq	r2,zero,42bc0 <___vfprintf_internal_r+0x18ac>
   424f4:	d9002d17 	ldw	r4,180(sp)
   424f8:	d9402917 	ldw	r5,164(sp)
   424fc:	d8002785 	stb	zero,158(sp)
   42500:	20800104 	addi	r2,r4,4
   42504:	24c00017 	ldw	r19,0(r4)
   42508:	002d883a 	mov	r22,zero
   4250c:	2801b516 	blt	r5,zero,42be4 <___vfprintf_internal_r+0x18d0>
   42510:	00ffdfc4 	movi	r3,-129
   42514:	d8802d15 	stw	r2,180(sp)
   42518:	90e4703a 	and	r18,r18,r3
   4251c:	983d2726 	beq	r19,zero,419bc <__alt_data_end+0xfffda8bc>
   42520:	0039883a 	mov	fp,zero
   42524:	003d2a06 	br	419d0 <__alt_data_end+0xfffda8d0>
   42528:	dc402617 	ldw	r17,152(sp)
   4252c:	0441d30e 	bge	zero,r17,42c7c <___vfprintf_internal_r+0x1968>
   42530:	dc403217 	ldw	r17,200(sp)
   42534:	d8803317 	ldw	r2,204(sp)
   42538:	1440010e 	bge	r2,r17,42540 <___vfprintf_internal_r+0x122c>
   4253c:	1023883a 	mov	r17,r2
   42540:	04400a0e 	bge	zero,r17,4256c <___vfprintf_internal_r+0x1258>
   42544:	d8801f17 	ldw	r2,124(sp)
   42548:	1c47883a 	add	r3,r3,r17
   4254c:	44000015 	stw	r16,0(r8)
   42550:	10800044 	addi	r2,r2,1
   42554:	44400115 	stw	r17,4(r8)
   42558:	d8c02015 	stw	r3,128(sp)
   4255c:	d8801f15 	stw	r2,124(sp)
   42560:	010001c4 	movi	r4,7
   42564:	20826516 	blt	r4,r2,42efc <___vfprintf_internal_r+0x1be8>
   42568:	42000204 	addi	r8,r8,8
   4256c:	88026116 	blt	r17,zero,42ef4 <___vfprintf_internal_r+0x1be0>
   42570:	d9003217 	ldw	r4,200(sp)
   42574:	2463c83a 	sub	r17,r4,r17
   42578:	04407b0e 	bge	zero,r17,42768 <___vfprintf_internal_r+0x1454>
   4257c:	05800404 	movi	r22,16
   42580:	d8801f17 	ldw	r2,124(sp)
   42584:	b4419d0e 	bge	r22,r17,42bfc <___vfprintf_internal_r+0x18e8>
   42588:	01000174 	movhi	r4,5
   4258c:	213e4584 	addi	r4,r4,-1770
   42590:	d9002b15 	stw	r4,172(sp)
   42594:	070001c4 	movi	fp,7
   42598:	dcc02c17 	ldw	r19,176(sp)
   4259c:	00000306 	br	425ac <___vfprintf_internal_r+0x1298>
   425a0:	42000204 	addi	r8,r8,8
   425a4:	8c7ffc04 	addi	r17,r17,-16
   425a8:	b441970e 	bge	r22,r17,42c08 <___vfprintf_internal_r+0x18f4>
   425ac:	18c00404 	addi	r3,r3,16
   425b0:	10800044 	addi	r2,r2,1
   425b4:	45000015 	stw	r20,0(r8)
   425b8:	45800115 	stw	r22,4(r8)
   425bc:	d8c02015 	stw	r3,128(sp)
   425c0:	d8801f15 	stw	r2,124(sp)
   425c4:	e0bff60e 	bge	fp,r2,425a0 <__alt_data_end+0xfffdb4a0>
   425c8:	d9801e04 	addi	r6,sp,120
   425cc:	b80b883a 	mov	r5,r23
   425d0:	9809883a 	mov	r4,r19
   425d4:	00489100 	call	48910 <__sprint_r>
   425d8:	103c501e 	bne	r2,zero,4171c <__alt_data_end+0xfffda61c>
   425dc:	d8c02017 	ldw	r3,128(sp)
   425e0:	d8801f17 	ldw	r2,124(sp)
   425e4:	da000404 	addi	r8,sp,16
   425e8:	003fee06 	br	425a4 <__alt_data_end+0xfffdb4a4>
   425ec:	d9002c17 	ldw	r4,176(sp)
   425f0:	d9801e04 	addi	r6,sp,120
   425f4:	b80b883a 	mov	r5,r23
   425f8:	00489100 	call	48910 <__sprint_r>
   425fc:	103c471e 	bne	r2,zero,4171c <__alt_data_end+0xfffda61c>
   42600:	d8c02017 	ldw	r3,128(sp)
   42604:	df002787 	ldb	fp,158(sp)
   42608:	da000404 	addi	r8,sp,16
   4260c:	003d5606 	br	41b68 <__alt_data_end+0xfffdaa68>
   42610:	9080040c 	andi	r2,r18,16
   42614:	10016126 	beq	r2,zero,42b9c <___vfprintf_internal_r+0x1888>
   42618:	d8802d17 	ldw	r2,180(sp)
   4261c:	14c00017 	ldw	r19,0(r2)
   42620:	10800104 	addi	r2,r2,4
   42624:	d8802d15 	stw	r2,180(sp)
   42628:	982dd7fa 	srai	r22,r19,31
   4262c:	b005883a 	mov	r2,r22
   42630:	003c8206 	br	4183c <__alt_data_end+0xfffda73c>
   42634:	9080040c 	andi	r2,r18,16
   42638:	10003526 	beq	r2,zero,42710 <___vfprintf_internal_r+0x13fc>
   4263c:	d9402d17 	ldw	r5,180(sp)
   42640:	d8c02917 	ldw	r3,164(sp)
   42644:	d8002785 	stb	zero,158(sp)
   42648:	28800104 	addi	r2,r5,4
   4264c:	2cc00017 	ldw	r19,0(r5)
   42650:	002d883a 	mov	r22,zero
   42654:	18003716 	blt	r3,zero,42734 <___vfprintf_internal_r+0x1420>
   42658:	00ffdfc4 	movi	r3,-129
   4265c:	d8802d15 	stw	r2,180(sp)
   42660:	90e4703a 	and	r18,r18,r3
   42664:	0039883a 	mov	fp,zero
   42668:	983df326 	beq	r19,zero,41e38 <__alt_data_end+0xfffdad38>
   4266c:	00800244 	movi	r2,9
   42670:	14fc7b36 	bltu	r2,r19,41860 <__alt_data_end+0xfffda760>
   42674:	d8c02817 	ldw	r3,160(sp)
   42678:	dc001dc4 	addi	r16,sp,119
   4267c:	9cc00c04 	addi	r19,r19,48
   42680:	1c07c83a 	sub	r3,r3,r16
   42684:	dcc01dc5 	stb	r19,119(sp)
   42688:	d8c02e15 	stw	r3,184(sp)
   4268c:	003ce806 	br	41a30 <__alt_data_end+0xfffda930>
   42690:	d8803317 	ldw	r2,204(sp)
   42694:	143fffc4 	addi	r16,r2,-1
   42698:	043f4d0e 	bge	zero,r16,423d0 <__alt_data_end+0xfffdb2d0>
   4269c:	07000404 	movi	fp,16
   426a0:	e400810e 	bge	fp,r16,428a8 <___vfprintf_internal_r+0x1594>
   426a4:	01400174 	movhi	r5,5
   426a8:	297e4584 	addi	r5,r5,-1770
   426ac:	d9402b15 	stw	r5,172(sp)
   426b0:	01c001c4 	movi	r7,7
   426b4:	dcc02c17 	ldw	r19,176(sp)
   426b8:	00000306 	br	426c8 <___vfprintf_internal_r+0x13b4>
   426bc:	b5800204 	addi	r22,r22,8
   426c0:	843ffc04 	addi	r16,r16,-16
   426c4:	e4007b0e 	bge	fp,r16,428b4 <___vfprintf_internal_r+0x15a0>
   426c8:	18c00404 	addi	r3,r3,16
   426cc:	8c400044 	addi	r17,r17,1
   426d0:	b5000015 	stw	r20,0(r22)
   426d4:	b7000115 	stw	fp,4(r22)
   426d8:	d8c02015 	stw	r3,128(sp)
   426dc:	dc401f15 	stw	r17,124(sp)
   426e0:	3c7ff60e 	bge	r7,r17,426bc <__alt_data_end+0xfffdb5bc>
   426e4:	d9801e04 	addi	r6,sp,120
   426e8:	b80b883a 	mov	r5,r23
   426ec:	9809883a 	mov	r4,r19
   426f0:	d9c03c15 	stw	r7,240(sp)
   426f4:	00489100 	call	48910 <__sprint_r>
   426f8:	d9c03c17 	ldw	r7,240(sp)
   426fc:	103c071e 	bne	r2,zero,4171c <__alt_data_end+0xfffda61c>
   42700:	d8c02017 	ldw	r3,128(sp)
   42704:	dc401f17 	ldw	r17,124(sp)
   42708:	dd800404 	addi	r22,sp,16
   4270c:	003fec06 	br	426c0 <__alt_data_end+0xfffdb5c0>
   42710:	9080100c 	andi	r2,r18,64
   42714:	d8002785 	stb	zero,158(sp)
   42718:	10010e26 	beq	r2,zero,42b54 <___vfprintf_internal_r+0x1840>
   4271c:	d9002d17 	ldw	r4,180(sp)
   42720:	d9402917 	ldw	r5,164(sp)
   42724:	002d883a 	mov	r22,zero
   42728:	20800104 	addi	r2,r4,4
   4272c:	24c0000b 	ldhu	r19,0(r4)
   42730:	283fc90e 	bge	r5,zero,42658 <__alt_data_end+0xfffdb558>
   42734:	d8802d15 	stw	r2,180(sp)
   42738:	0039883a 	mov	fp,zero
   4273c:	9d84b03a 	or	r2,r19,r22
   42740:	103c461e 	bne	r2,zero,4185c <__alt_data_end+0xfffda75c>
   42744:	00800044 	movi	r2,1
   42748:	003e6c06 	br	420fc <__alt_data_end+0xfffdaffc>
   4274c:	d9002c17 	ldw	r4,176(sp)
   42750:	d9801e04 	addi	r6,sp,120
   42754:	b80b883a 	mov	r5,r23
   42758:	00489100 	call	48910 <__sprint_r>
   4275c:	103bef1e 	bne	r2,zero,4171c <__alt_data_end+0xfffda61c>
   42760:	d8c02017 	ldw	r3,128(sp)
   42764:	da000404 	addi	r8,sp,16
   42768:	d9003217 	ldw	r4,200(sp)
   4276c:	d8802617 	ldw	r2,152(sp)
   42770:	d9403317 	ldw	r5,204(sp)
   42774:	8123883a 	add	r17,r16,r4
   42778:	11400216 	blt	r2,r5,42784 <___vfprintf_internal_r+0x1470>
   4277c:	9100004c 	andi	r4,r18,1
   42780:	20000d26 	beq	r4,zero,427b8 <___vfprintf_internal_r+0x14a4>
   42784:	d9003717 	ldw	r4,220(sp)
   42788:	d9403417 	ldw	r5,208(sp)
   4278c:	1907883a 	add	r3,r3,r4
   42790:	d9001f17 	ldw	r4,124(sp)
   42794:	41400015 	stw	r5,0(r8)
   42798:	d9403717 	ldw	r5,220(sp)
   4279c:	21000044 	addi	r4,r4,1
   427a0:	d8c02015 	stw	r3,128(sp)
   427a4:	41400115 	stw	r5,4(r8)
   427a8:	d9001f15 	stw	r4,124(sp)
   427ac:	014001c4 	movi	r5,7
   427b0:	2901e816 	blt	r5,r4,42f54 <___vfprintf_internal_r+0x1c40>
   427b4:	42000204 	addi	r8,r8,8
   427b8:	d9003317 	ldw	r4,204(sp)
   427bc:	8121883a 	add	r16,r16,r4
   427c0:	2085c83a 	sub	r2,r4,r2
   427c4:	8461c83a 	sub	r16,r16,r17
   427c8:	1400010e 	bge	r2,r16,427d0 <___vfprintf_internal_r+0x14bc>
   427cc:	1021883a 	mov	r16,r2
   427d0:	04000a0e 	bge	zero,r16,427fc <___vfprintf_internal_r+0x14e8>
   427d4:	d9001f17 	ldw	r4,124(sp)
   427d8:	1c07883a 	add	r3,r3,r16
   427dc:	44400015 	stw	r17,0(r8)
   427e0:	21000044 	addi	r4,r4,1
   427e4:	44000115 	stw	r16,4(r8)
   427e8:	d8c02015 	stw	r3,128(sp)
   427ec:	d9001f15 	stw	r4,124(sp)
   427f0:	014001c4 	movi	r5,7
   427f4:	2901fb16 	blt	r5,r4,42fe4 <___vfprintf_internal_r+0x1cd0>
   427f8:	42000204 	addi	r8,r8,8
   427fc:	8001f716 	blt	r16,zero,42fdc <___vfprintf_internal_r+0x1cc8>
   42800:	1421c83a 	sub	r16,r2,r16
   42804:	043d380e 	bge	zero,r16,41ce8 <__alt_data_end+0xfffdabe8>
   42808:	04400404 	movi	r17,16
   4280c:	d8801f17 	ldw	r2,124(sp)
   42810:	8c3efb0e 	bge	r17,r16,42400 <__alt_data_end+0xfffdb300>
   42814:	01400174 	movhi	r5,5
   42818:	297e4584 	addi	r5,r5,-1770
   4281c:	d9402b15 	stw	r5,172(sp)
   42820:	058001c4 	movi	r22,7
   42824:	dcc02c17 	ldw	r19,176(sp)
   42828:	00000306 	br	42838 <___vfprintf_internal_r+0x1524>
   4282c:	42000204 	addi	r8,r8,8
   42830:	843ffc04 	addi	r16,r16,-16
   42834:	8c3ef50e 	bge	r17,r16,4240c <__alt_data_end+0xfffdb30c>
   42838:	18c00404 	addi	r3,r3,16
   4283c:	10800044 	addi	r2,r2,1
   42840:	45000015 	stw	r20,0(r8)
   42844:	44400115 	stw	r17,4(r8)
   42848:	d8c02015 	stw	r3,128(sp)
   4284c:	d8801f15 	stw	r2,124(sp)
   42850:	b0bff60e 	bge	r22,r2,4282c <__alt_data_end+0xfffdb72c>
   42854:	d9801e04 	addi	r6,sp,120
   42858:	b80b883a 	mov	r5,r23
   4285c:	9809883a 	mov	r4,r19
   42860:	00489100 	call	48910 <__sprint_r>
   42864:	103bad1e 	bne	r2,zero,4171c <__alt_data_end+0xfffda61c>
   42868:	d8c02017 	ldw	r3,128(sp)
   4286c:	d8801f17 	ldw	r2,124(sp)
   42870:	da000404 	addi	r8,sp,16
   42874:	003fee06 	br	42830 <__alt_data_end+0xfffdb730>
   42878:	9088703a 	and	r4,r18,r2
   4287c:	203eab1e 	bne	r4,zero,4232c <__alt_data_end+0xfffdb22c>
   42880:	dc401f17 	ldw	r17,124(sp)
   42884:	40800115 	stw	r2,4(r8)
   42888:	44000015 	stw	r16,0(r8)
   4288c:	8c400044 	addi	r17,r17,1
   42890:	d8c02015 	stw	r3,128(sp)
   42894:	dc401f15 	stw	r17,124(sp)
   42898:	008001c4 	movi	r2,7
   4289c:	14400e16 	blt	r2,r17,428d8 <___vfprintf_internal_r+0x15c4>
   428a0:	45800204 	addi	r22,r8,8
   428a4:	003eca06 	br	423d0 <__alt_data_end+0xfffdb2d0>
   428a8:	01000174 	movhi	r4,5
   428ac:	213e4584 	addi	r4,r4,-1770
   428b0:	d9002b15 	stw	r4,172(sp)
   428b4:	d8802b17 	ldw	r2,172(sp)
   428b8:	1c07883a 	add	r3,r3,r16
   428bc:	8c400044 	addi	r17,r17,1
   428c0:	b0800015 	stw	r2,0(r22)
   428c4:	b4000115 	stw	r16,4(r22)
   428c8:	d8c02015 	stw	r3,128(sp)
   428cc:	dc401f15 	stw	r17,124(sp)
   428d0:	008001c4 	movi	r2,7
   428d4:	147ebd0e 	bge	r2,r17,423cc <__alt_data_end+0xfffdb2cc>
   428d8:	d9002c17 	ldw	r4,176(sp)
   428dc:	d9801e04 	addi	r6,sp,120
   428e0:	b80b883a 	mov	r5,r23
   428e4:	00489100 	call	48910 <__sprint_r>
   428e8:	103b8c1e 	bne	r2,zero,4171c <__alt_data_end+0xfffda61c>
   428ec:	d8c02017 	ldw	r3,128(sp)
   428f0:	dc401f17 	ldw	r17,124(sp)
   428f4:	dd800404 	addi	r22,sp,16
   428f8:	003eb506 	br	423d0 <__alt_data_end+0xfffdb2d0>
   428fc:	d9002c17 	ldw	r4,176(sp)
   42900:	d9801e04 	addi	r6,sp,120
   42904:	b80b883a 	mov	r5,r23
   42908:	00489100 	call	48910 <__sprint_r>
   4290c:	103b831e 	bne	r2,zero,4171c <__alt_data_end+0xfffda61c>
   42910:	d8c02017 	ldw	r3,128(sp)
   42914:	dc401f17 	ldw	r17,124(sp)
   42918:	da000404 	addi	r8,sp,16
   4291c:	003e8d06 	br	42354 <__alt_data_end+0xfffdb254>
   42920:	d9002c17 	ldw	r4,176(sp)
   42924:	d9801e04 	addi	r6,sp,120
   42928:	b80b883a 	mov	r5,r23
   4292c:	00489100 	call	48910 <__sprint_r>
   42930:	103b7a1e 	bne	r2,zero,4171c <__alt_data_end+0xfffda61c>
   42934:	d8c02017 	ldw	r3,128(sp)
   42938:	dc401f17 	ldw	r17,124(sp)
   4293c:	dd800404 	addi	r22,sp,16
   42940:	003e8f06 	br	42380 <__alt_data_end+0xfffdb280>
   42944:	0027883a 	mov	r19,zero
   42948:	003f4a06 	br	42674 <__alt_data_end+0xfffdb574>
   4294c:	d9002c17 	ldw	r4,176(sp)
   42950:	d9801e04 	addi	r6,sp,120
   42954:	b80b883a 	mov	r5,r23
   42958:	00489100 	call	48910 <__sprint_r>
   4295c:	103b6f1e 	bne	r2,zero,4171c <__alt_data_end+0xfffda61c>
   42960:	d8c02017 	ldw	r3,128(sp)
   42964:	da000404 	addi	r8,sp,16
   42968:	003c9d06 	br	41be0 <__alt_data_end+0xfffdaae0>
   4296c:	04e7c83a 	sub	r19,zero,r19
   42970:	9804c03a 	cmpne	r2,r19,zero
   42974:	05adc83a 	sub	r22,zero,r22
   42978:	b0adc83a 	sub	r22,r22,r2
   4297c:	d8802917 	ldw	r2,164(sp)
   42980:	07000b44 	movi	fp,45
   42984:	df002785 	stb	fp,158(sp)
   42988:	10017b16 	blt	r2,zero,42f78 <___vfprintf_internal_r+0x1c64>
   4298c:	00bfdfc4 	movi	r2,-129
   42990:	90a4703a 	and	r18,r18,r2
   42994:	003bb106 	br	4185c <__alt_data_end+0xfffda75c>
   42998:	d9003617 	ldw	r4,216(sp)
   4299c:	d9403817 	ldw	r5,224(sp)
   429a0:	da003d15 	stw	r8,244(sp)
   429a4:	00485340 	call	48534 <__fpclassifyd>
   429a8:	da003d17 	ldw	r8,244(sp)
   429ac:	1000f026 	beq	r2,zero,42d70 <___vfprintf_internal_r+0x1a5c>
   429b0:	d9002917 	ldw	r4,164(sp)
   429b4:	05bff7c4 	movi	r22,-33
   429b8:	00bfffc4 	movi	r2,-1
   429bc:	8dac703a 	and	r22,r17,r22
   429c0:	20820026 	beq	r4,r2,431c4 <___vfprintf_internal_r+0x1eb0>
   429c4:	008011c4 	movi	r2,71
   429c8:	b081f726 	beq	r22,r2,431a8 <___vfprintf_internal_r+0x1e94>
   429cc:	d9003817 	ldw	r4,224(sp)
   429d0:	90c04014 	ori	r3,r18,256
   429d4:	d8c02b15 	stw	r3,172(sp)
   429d8:	20021516 	blt	r4,zero,43230 <___vfprintf_internal_r+0x1f1c>
   429dc:	dcc03817 	ldw	r19,224(sp)
   429e0:	d8002a05 	stb	zero,168(sp)
   429e4:	00801984 	movi	r2,102
   429e8:	8881f926 	beq	r17,r2,431d0 <___vfprintf_internal_r+0x1ebc>
   429ec:	00801184 	movi	r2,70
   429f0:	88821c26 	beq	r17,r2,43264 <___vfprintf_internal_r+0x1f50>
   429f4:	00801144 	movi	r2,69
   429f8:	b081ef26 	beq	r22,r2,431b8 <___vfprintf_internal_r+0x1ea4>
   429fc:	d8c02917 	ldw	r3,164(sp)
   42a00:	d8802104 	addi	r2,sp,132
   42a04:	d8800315 	stw	r2,12(sp)
   42a08:	d9403617 	ldw	r5,216(sp)
   42a0c:	d8802504 	addi	r2,sp,148
   42a10:	d9002c17 	ldw	r4,176(sp)
   42a14:	d8800215 	stw	r2,8(sp)
   42a18:	d8802604 	addi	r2,sp,152
   42a1c:	d8c00015 	stw	r3,0(sp)
   42a20:	d8800115 	stw	r2,4(sp)
   42a24:	01c00084 	movi	r7,2
   42a28:	980d883a 	mov	r6,r19
   42a2c:	d8c03c15 	stw	r3,240(sp)
   42a30:	da003d15 	stw	r8,244(sp)
   42a34:	00439380 	call	43938 <_dtoa_r>
   42a38:	1021883a 	mov	r16,r2
   42a3c:	008019c4 	movi	r2,103
   42a40:	d8c03c17 	ldw	r3,240(sp)
   42a44:	da003d17 	ldw	r8,244(sp)
   42a48:	88817126 	beq	r17,r2,43010 <___vfprintf_internal_r+0x1cfc>
   42a4c:	008011c4 	movi	r2,71
   42a50:	88829226 	beq	r17,r2,4349c <___vfprintf_internal_r+0x2188>
   42a54:	80f9883a 	add	fp,r16,r3
   42a58:	d9003617 	ldw	r4,216(sp)
   42a5c:	000d883a 	mov	r6,zero
   42a60:	000f883a 	mov	r7,zero
   42a64:	980b883a 	mov	r5,r19
   42a68:	da003d15 	stw	r8,244(sp)
   42a6c:	004baec0 	call	4baec <__eqdf2>
   42a70:	da003d17 	ldw	r8,244(sp)
   42a74:	10018d26 	beq	r2,zero,430ac <___vfprintf_internal_r+0x1d98>
   42a78:	d8802117 	ldw	r2,132(sp)
   42a7c:	1700062e 	bgeu	r2,fp,42a98 <___vfprintf_internal_r+0x1784>
   42a80:	01000c04 	movi	r4,48
   42a84:	10c00044 	addi	r3,r2,1
   42a88:	d8c02115 	stw	r3,132(sp)
   42a8c:	11000005 	stb	r4,0(r2)
   42a90:	d8802117 	ldw	r2,132(sp)
   42a94:	173ffb36 	bltu	r2,fp,42a84 <__alt_data_end+0xfffdb984>
   42a98:	1405c83a 	sub	r2,r2,r16
   42a9c:	d8803315 	stw	r2,204(sp)
   42aa0:	008011c4 	movi	r2,71
   42aa4:	b0817626 	beq	r22,r2,43080 <___vfprintf_internal_r+0x1d6c>
   42aa8:	00801944 	movi	r2,101
   42aac:	1442810e 	bge	r2,r17,434b4 <___vfprintf_internal_r+0x21a0>
   42ab0:	d8c02617 	ldw	r3,152(sp)
   42ab4:	00801984 	movi	r2,102
   42ab8:	d8c03215 	stw	r3,200(sp)
   42abc:	8881fe26 	beq	r17,r2,432b8 <___vfprintf_internal_r+0x1fa4>
   42ac0:	d8c03217 	ldw	r3,200(sp)
   42ac4:	d9003317 	ldw	r4,204(sp)
   42ac8:	1901dd16 	blt	r3,r4,43240 <___vfprintf_internal_r+0x1f2c>
   42acc:	9480004c 	andi	r18,r18,1
   42ad0:	90022b1e 	bne	r18,zero,43380 <___vfprintf_internal_r+0x206c>
   42ad4:	1805883a 	mov	r2,r3
   42ad8:	18028016 	blt	r3,zero,434dc <___vfprintf_internal_r+0x21c8>
   42adc:	d8c03217 	ldw	r3,200(sp)
   42ae0:	044019c4 	movi	r17,103
   42ae4:	d8c02e15 	stw	r3,184(sp)
   42ae8:	df002a07 	ldb	fp,168(sp)
   42aec:	e001531e 	bne	fp,zero,4303c <___vfprintf_internal_r+0x1d28>
   42af0:	df002783 	ldbu	fp,158(sp)
   42af4:	d8802a15 	stw	r2,168(sp)
   42af8:	dc802b17 	ldw	r18,172(sp)
   42afc:	d8002915 	stw	zero,164(sp)
   42b00:	003bd106 	br	41a48 <__alt_data_end+0xfffda948>
   42b04:	d8802d17 	ldw	r2,180(sp)
   42b08:	d8c02d17 	ldw	r3,180(sp)
   42b0c:	d9002d17 	ldw	r4,180(sp)
   42b10:	10800017 	ldw	r2,0(r2)
   42b14:	18c00117 	ldw	r3,4(r3)
   42b18:	21000204 	addi	r4,r4,8
   42b1c:	d8803615 	stw	r2,216(sp)
   42b20:	d8c03815 	stw	r3,224(sp)
   42b24:	d9002d15 	stw	r4,180(sp)
   42b28:	003b7506 	br	41900 <__alt_data_end+0xfffda800>
   42b2c:	ac400007 	ldb	r17,0(r21)
   42b30:	003a5906 	br	41498 <__alt_data_end+0xfffda398>
   42b34:	9080100c 	andi	r2,r18,64
   42b38:	1000a826 	beq	r2,zero,42ddc <___vfprintf_internal_r+0x1ac8>
   42b3c:	d9002d17 	ldw	r4,180(sp)
   42b40:	002d883a 	mov	r22,zero
   42b44:	24c0000b 	ldhu	r19,0(r4)
   42b48:	21000104 	addi	r4,r4,4
   42b4c:	d9002d15 	stw	r4,180(sp)
   42b50:	003ccb06 	br	41e80 <__alt_data_end+0xfffdad80>
   42b54:	d8c02d17 	ldw	r3,180(sp)
   42b58:	d9002917 	ldw	r4,164(sp)
   42b5c:	002d883a 	mov	r22,zero
   42b60:	18800104 	addi	r2,r3,4
   42b64:	1cc00017 	ldw	r19,0(r3)
   42b68:	203ebb0e 	bge	r4,zero,42658 <__alt_data_end+0xfffdb558>
   42b6c:	003ef106 	br	42734 <__alt_data_end+0xfffdb634>
   42b70:	9080040c 	andi	r2,r18,16
   42b74:	1000921e 	bne	r2,zero,42dc0 <___vfprintf_internal_r+0x1aac>
   42b78:	9480100c 	andi	r18,r18,64
   42b7c:	90013926 	beq	r18,zero,43064 <___vfprintf_internal_r+0x1d50>
   42b80:	d9002d17 	ldw	r4,180(sp)
   42b84:	d9402f17 	ldw	r5,188(sp)
   42b88:	20800017 	ldw	r2,0(r4)
   42b8c:	21000104 	addi	r4,r4,4
   42b90:	d9002d15 	stw	r4,180(sp)
   42b94:	1140000d 	sth	r5,0(r2)
   42b98:	003a1606 	br	413f4 <__alt_data_end+0xfffda2f4>
   42b9c:	9080100c 	andi	r2,r18,64
   42ba0:	10008026 	beq	r2,zero,42da4 <___vfprintf_internal_r+0x1a90>
   42ba4:	d8c02d17 	ldw	r3,180(sp)
   42ba8:	1cc0000f 	ldh	r19,0(r3)
   42bac:	18c00104 	addi	r3,r3,4
   42bb0:	d8c02d15 	stw	r3,180(sp)
   42bb4:	982dd7fa 	srai	r22,r19,31
   42bb8:	b005883a 	mov	r2,r22
   42bbc:	003b1f06 	br	4183c <__alt_data_end+0xfffda73c>
   42bc0:	9080100c 	andi	r2,r18,64
   42bc4:	d8002785 	stb	zero,158(sp)
   42bc8:	10008a1e 	bne	r2,zero,42df4 <___vfprintf_internal_r+0x1ae0>
   42bcc:	d9402d17 	ldw	r5,180(sp)
   42bd0:	d8c02917 	ldw	r3,164(sp)
   42bd4:	002d883a 	mov	r22,zero
   42bd8:	28800104 	addi	r2,r5,4
   42bdc:	2cc00017 	ldw	r19,0(r5)
   42be0:	183e4b0e 	bge	r3,zero,42510 <__alt_data_end+0xfffdb410>
   42be4:	9d86b03a 	or	r3,r19,r22
   42be8:	d8802d15 	stw	r2,180(sp)
   42bec:	183e4c1e 	bne	r3,zero,42520 <__alt_data_end+0xfffdb420>
   42bf0:	0039883a 	mov	fp,zero
   42bf4:	0005883a 	mov	r2,zero
   42bf8:	003d4006 	br	420fc <__alt_data_end+0xfffdaffc>
   42bfc:	01400174 	movhi	r5,5
   42c00:	297e4584 	addi	r5,r5,-1770
   42c04:	d9402b15 	stw	r5,172(sp)
   42c08:	d9402b17 	ldw	r5,172(sp)
   42c0c:	1c47883a 	add	r3,r3,r17
   42c10:	10800044 	addi	r2,r2,1
   42c14:	41400015 	stw	r5,0(r8)
   42c18:	44400115 	stw	r17,4(r8)
   42c1c:	d8c02015 	stw	r3,128(sp)
   42c20:	d8801f15 	stw	r2,124(sp)
   42c24:	010001c4 	movi	r4,7
   42c28:	20bec816 	blt	r4,r2,4274c <__alt_data_end+0xfffdb64c>
   42c2c:	42000204 	addi	r8,r8,8
   42c30:	003ecd06 	br	42768 <__alt_data_end+0xfffdb668>
   42c34:	d9002917 	ldw	r4,164(sp)
   42c38:	d8002785 	stb	zero,158(sp)
   42c3c:	203d2d16 	blt	r4,zero,420f4 <__alt_data_end+0xfffdaff4>
   42c40:	00bfdfc4 	movi	r2,-129
   42c44:	90a4703a 	and	r18,r18,r2
   42c48:	003a9106 	br	41690 <__alt_data_end+0xfffda590>
   42c4c:	01000174 	movhi	r4,5
   42c50:	213e4584 	addi	r4,r4,-1770
   42c54:	d9002b15 	stw	r4,172(sp)
   42c58:	003c0c06 	br	41c8c <__alt_data_end+0xfffdab8c>
   42c5c:	d9002c17 	ldw	r4,176(sp)
   42c60:	d9801e04 	addi	r6,sp,120
   42c64:	b80b883a 	mov	r5,r23
   42c68:	00489100 	call	48910 <__sprint_r>
   42c6c:	103aab1e 	bne	r2,zero,4171c <__alt_data_end+0xfffda61c>
   42c70:	d8c02017 	ldw	r3,128(sp)
   42c74:	da000404 	addi	r8,sp,16
   42c78:	003d4106 	br	42180 <__alt_data_end+0xfffdb080>
   42c7c:	d8801f17 	ldw	r2,124(sp)
   42c80:	01400174 	movhi	r5,5
   42c84:	01000044 	movi	r4,1
   42c88:	18c00044 	addi	r3,r3,1
   42c8c:	10800044 	addi	r2,r2,1
   42c90:	297e4504 	addi	r5,r5,-1772
   42c94:	41000115 	stw	r4,4(r8)
   42c98:	41400015 	stw	r5,0(r8)
   42c9c:	d8c02015 	stw	r3,128(sp)
   42ca0:	d8801f15 	stw	r2,124(sp)
   42ca4:	010001c4 	movi	r4,7
   42ca8:	20805c16 	blt	r4,r2,42e1c <___vfprintf_internal_r+0x1b08>
   42cac:	42000204 	addi	r8,r8,8
   42cb0:	8800041e 	bne	r17,zero,42cc4 <___vfprintf_internal_r+0x19b0>
   42cb4:	d8803317 	ldw	r2,204(sp)
   42cb8:	1000021e 	bne	r2,zero,42cc4 <___vfprintf_internal_r+0x19b0>
   42cbc:	9080004c 	andi	r2,r18,1
   42cc0:	103c0926 	beq	r2,zero,41ce8 <__alt_data_end+0xfffdabe8>
   42cc4:	d9003717 	ldw	r4,220(sp)
   42cc8:	d8801f17 	ldw	r2,124(sp)
   42ccc:	d9403417 	ldw	r5,208(sp)
   42cd0:	20c7883a 	add	r3,r4,r3
   42cd4:	10800044 	addi	r2,r2,1
   42cd8:	41000115 	stw	r4,4(r8)
   42cdc:	41400015 	stw	r5,0(r8)
   42ce0:	d8c02015 	stw	r3,128(sp)
   42ce4:	d8801f15 	stw	r2,124(sp)
   42ce8:	010001c4 	movi	r4,7
   42cec:	20812116 	blt	r4,r2,43174 <___vfprintf_internal_r+0x1e60>
   42cf0:	42000204 	addi	r8,r8,8
   42cf4:	0463c83a 	sub	r17,zero,r17
   42cf8:	0440730e 	bge	zero,r17,42ec8 <___vfprintf_internal_r+0x1bb4>
   42cfc:	05800404 	movi	r22,16
   42d00:	b440860e 	bge	r22,r17,42f1c <___vfprintf_internal_r+0x1c08>
   42d04:	01400174 	movhi	r5,5
   42d08:	297e4584 	addi	r5,r5,-1770
   42d0c:	d9402b15 	stw	r5,172(sp)
   42d10:	070001c4 	movi	fp,7
   42d14:	dcc02c17 	ldw	r19,176(sp)
   42d18:	00000306 	br	42d28 <___vfprintf_internal_r+0x1a14>
   42d1c:	42000204 	addi	r8,r8,8
   42d20:	8c7ffc04 	addi	r17,r17,-16
   42d24:	b440800e 	bge	r22,r17,42f28 <___vfprintf_internal_r+0x1c14>
   42d28:	18c00404 	addi	r3,r3,16
   42d2c:	10800044 	addi	r2,r2,1
   42d30:	45000015 	stw	r20,0(r8)
   42d34:	45800115 	stw	r22,4(r8)
   42d38:	d8c02015 	stw	r3,128(sp)
   42d3c:	d8801f15 	stw	r2,124(sp)
   42d40:	e0bff60e 	bge	fp,r2,42d1c <__alt_data_end+0xfffdbc1c>
   42d44:	d9801e04 	addi	r6,sp,120
   42d48:	b80b883a 	mov	r5,r23
   42d4c:	9809883a 	mov	r4,r19
   42d50:	00489100 	call	48910 <__sprint_r>
   42d54:	103a711e 	bne	r2,zero,4171c <__alt_data_end+0xfffda61c>
   42d58:	d8c02017 	ldw	r3,128(sp)
   42d5c:	d8801f17 	ldw	r2,124(sp)
   42d60:	da000404 	addi	r8,sp,16
   42d64:	003fee06 	br	42d20 <__alt_data_end+0xfffdbc20>
   42d68:	00bfffc4 	movi	r2,-1
   42d6c:	003a6f06 	br	4172c <__alt_data_end+0xfffda62c>
   42d70:	008011c4 	movi	r2,71
   42d74:	1440b816 	blt	r2,r17,43058 <___vfprintf_internal_r+0x1d44>
   42d78:	04000174 	movhi	r16,5
   42d7c:	843e3704 	addi	r16,r16,-1828
   42d80:	00c000c4 	movi	r3,3
   42d84:	00bfdfc4 	movi	r2,-129
   42d88:	d8c02a15 	stw	r3,168(sp)
   42d8c:	90a4703a 	and	r18,r18,r2
   42d90:	df002783 	ldbu	fp,158(sp)
   42d94:	d8c02e15 	stw	r3,184(sp)
   42d98:	d8002915 	stw	zero,164(sp)
   42d9c:	d8003215 	stw	zero,200(sp)
   42da0:	003b2906 	br	41a48 <__alt_data_end+0xfffda948>
   42da4:	d9002d17 	ldw	r4,180(sp)
   42da8:	24c00017 	ldw	r19,0(r4)
   42dac:	21000104 	addi	r4,r4,4
   42db0:	d9002d15 	stw	r4,180(sp)
   42db4:	982dd7fa 	srai	r22,r19,31
   42db8:	b005883a 	mov	r2,r22
   42dbc:	003a9f06 	br	4183c <__alt_data_end+0xfffda73c>
   42dc0:	d9402d17 	ldw	r5,180(sp)
   42dc4:	d8c02f17 	ldw	r3,188(sp)
   42dc8:	28800017 	ldw	r2,0(r5)
   42dcc:	29400104 	addi	r5,r5,4
   42dd0:	d9402d15 	stw	r5,180(sp)
   42dd4:	10c00015 	stw	r3,0(r2)
   42dd8:	00398606 	br	413f4 <__alt_data_end+0xfffda2f4>
   42ddc:	d9402d17 	ldw	r5,180(sp)
   42de0:	002d883a 	mov	r22,zero
   42de4:	2cc00017 	ldw	r19,0(r5)
   42de8:	29400104 	addi	r5,r5,4
   42dec:	d9402d15 	stw	r5,180(sp)
   42df0:	003c2306 	br	41e80 <__alt_data_end+0xfffdad80>
   42df4:	d8c02d17 	ldw	r3,180(sp)
   42df8:	d9002917 	ldw	r4,164(sp)
   42dfc:	002d883a 	mov	r22,zero
   42e00:	18800104 	addi	r2,r3,4
   42e04:	1cc0000b 	ldhu	r19,0(r3)
   42e08:	203dc10e 	bge	r4,zero,42510 <__alt_data_end+0xfffdb410>
   42e0c:	003f7506 	br	42be4 <__alt_data_end+0xfffdbae4>
   42e10:	04000174 	movhi	r16,5
   42e14:	843e3504 	addi	r16,r16,-1836
   42e18:	003acc06 	br	4194c <__alt_data_end+0xfffda84c>
   42e1c:	d9002c17 	ldw	r4,176(sp)
   42e20:	d9801e04 	addi	r6,sp,120
   42e24:	b80b883a 	mov	r5,r23
   42e28:	00489100 	call	48910 <__sprint_r>
   42e2c:	103a3b1e 	bne	r2,zero,4171c <__alt_data_end+0xfffda61c>
   42e30:	dc402617 	ldw	r17,152(sp)
   42e34:	d8c02017 	ldw	r3,128(sp)
   42e38:	da000404 	addi	r8,sp,16
   42e3c:	003f9c06 	br	42cb0 <__alt_data_end+0xfffdbbb0>
   42e40:	ac400043 	ldbu	r17,1(r21)
   42e44:	94800814 	ori	r18,r18,32
   42e48:	ad400044 	addi	r21,r21,1
   42e4c:	8c403fcc 	andi	r17,r17,255
   42e50:	8c40201c 	xori	r17,r17,128
   42e54:	8c7fe004 	addi	r17,r17,-128
   42e58:	00398f06 	br	41498 <__alt_data_end+0xfffda398>
   42e5c:	d8c02d15 	stw	r3,180(sp)
   42e60:	0039883a 	mov	fp,zero
   42e64:	003e3506 	br	4273c <__alt_data_end+0xfffdb63c>
   42e68:	d9002c17 	ldw	r4,176(sp)
   42e6c:	d9801e04 	addi	r6,sp,120
   42e70:	b80b883a 	mov	r5,r23
   42e74:	00489100 	call	48910 <__sprint_r>
   42e78:	103a281e 	bne	r2,zero,4171c <__alt_data_end+0xfffda61c>
   42e7c:	d8c02017 	ldw	r3,128(sp)
   42e80:	da000404 	addi	r8,sp,16
   42e84:	003cd006 	br	421c8 <__alt_data_end+0xfffdb0c8>
   42e88:	8009883a 	mov	r4,r16
   42e8c:	da003d15 	stw	r8,244(sp)
   42e90:	004127c0 	call	4127c <strlen>
   42e94:	d8802e15 	stw	r2,184(sp)
   42e98:	da003d17 	ldw	r8,244(sp)
   42e9c:	103c340e 	bge	r2,zero,41f70 <__alt_data_end+0xfffdae70>
   42ea0:	0005883a 	mov	r2,zero
   42ea4:	003c3206 	br	41f70 <__alt_data_end+0xfffdae70>
   42ea8:	d9002c17 	ldw	r4,176(sp)
   42eac:	d9801e04 	addi	r6,sp,120
   42eb0:	b80b883a 	mov	r5,r23
   42eb4:	00489100 	call	48910 <__sprint_r>
   42eb8:	103a181e 	bne	r2,zero,4171c <__alt_data_end+0xfffda61c>
   42ebc:	d8c02017 	ldw	r3,128(sp)
   42ec0:	d8801f17 	ldw	r2,124(sp)
   42ec4:	da000404 	addi	r8,sp,16
   42ec8:	d9403317 	ldw	r5,204(sp)
   42ecc:	10800044 	addi	r2,r2,1
   42ed0:	44000015 	stw	r16,0(r8)
   42ed4:	28c7883a 	add	r3,r5,r3
   42ed8:	003b7d06 	br	41cd0 <__alt_data_end+0xfffdabd0>
   42edc:	01000174 	movhi	r4,5
   42ee0:	213e4984 	addi	r4,r4,-1754
   42ee4:	d9003515 	stw	r4,212(sp)
   42ee8:	003b1406 	br	41b3c <__alt_data_end+0xfffdaa3c>
   42eec:	013fffc4 	movi	r4,-1
   42ef0:	003a3506 	br	417c8 <__alt_data_end+0xfffda6c8>
   42ef4:	0023883a 	mov	r17,zero
   42ef8:	003d9d06 	br	42570 <__alt_data_end+0xfffdb470>
   42efc:	d9002c17 	ldw	r4,176(sp)
   42f00:	d9801e04 	addi	r6,sp,120
   42f04:	b80b883a 	mov	r5,r23
   42f08:	00489100 	call	48910 <__sprint_r>
   42f0c:	103a031e 	bne	r2,zero,4171c <__alt_data_end+0xfffda61c>
   42f10:	d8c02017 	ldw	r3,128(sp)
   42f14:	da000404 	addi	r8,sp,16
   42f18:	003d9406 	br	4256c <__alt_data_end+0xfffdb46c>
   42f1c:	01000174 	movhi	r4,5
   42f20:	213e4584 	addi	r4,r4,-1770
   42f24:	d9002b15 	stw	r4,172(sp)
   42f28:	d9002b17 	ldw	r4,172(sp)
   42f2c:	1c47883a 	add	r3,r3,r17
   42f30:	10800044 	addi	r2,r2,1
   42f34:	41000015 	stw	r4,0(r8)
   42f38:	44400115 	stw	r17,4(r8)
   42f3c:	d8c02015 	stw	r3,128(sp)
   42f40:	d8801f15 	stw	r2,124(sp)
   42f44:	010001c4 	movi	r4,7
   42f48:	20bfd716 	blt	r4,r2,42ea8 <__alt_data_end+0xfffdbda8>
   42f4c:	42000204 	addi	r8,r8,8
   42f50:	003fdd06 	br	42ec8 <__alt_data_end+0xfffdbdc8>
   42f54:	d9002c17 	ldw	r4,176(sp)
   42f58:	d9801e04 	addi	r6,sp,120
   42f5c:	b80b883a 	mov	r5,r23
   42f60:	00489100 	call	48910 <__sprint_r>
   42f64:	1039ed1e 	bne	r2,zero,4171c <__alt_data_end+0xfffda61c>
   42f68:	d8802617 	ldw	r2,152(sp)
   42f6c:	d8c02017 	ldw	r3,128(sp)
   42f70:	da000404 	addi	r8,sp,16
   42f74:	003e1006 	br	427b8 <__alt_data_end+0xfffdb6b8>
   42f78:	00800044 	movi	r2,1
   42f7c:	10803fcc 	andi	r2,r2,255
   42f80:	00c00044 	movi	r3,1
   42f84:	10fa3526 	beq	r2,r3,4185c <__alt_data_end+0xfffda75c>
   42f88:	00c00084 	movi	r3,2
   42f8c:	10fbcb26 	beq	r2,r3,41ebc <__alt_data_end+0xfffdadbc>
   42f90:	003a8f06 	br	419d0 <__alt_data_end+0xfffda8d0>
   42f94:	01000174 	movhi	r4,5
   42f98:	213e4984 	addi	r4,r4,-1754
   42f9c:	d9003515 	stw	r4,212(sp)
   42fa0:	003b7606 	br	41d7c <__alt_data_end+0xfffdac7c>
   42fa4:	d8802917 	ldw	r2,164(sp)
   42fa8:	00c00184 	movi	r3,6
   42fac:	1880012e 	bgeu	r3,r2,42fb4 <___vfprintf_internal_r+0x1ca0>
   42fb0:	1805883a 	mov	r2,r3
   42fb4:	d8802e15 	stw	r2,184(sp)
   42fb8:	1000ef16 	blt	r2,zero,43378 <___vfprintf_internal_r+0x2064>
   42fbc:	04000174 	movhi	r16,5
   42fc0:	d8802a15 	stw	r2,168(sp)
   42fc4:	dcc02d15 	stw	r19,180(sp)
   42fc8:	d8002915 	stw	zero,164(sp)
   42fcc:	d8003215 	stw	zero,200(sp)
   42fd0:	843e4304 	addi	r16,r16,-1780
   42fd4:	0039883a 	mov	fp,zero
   42fd8:	003aa206 	br	41a64 <__alt_data_end+0xfffda964>
   42fdc:	0021883a 	mov	r16,zero
   42fe0:	003e0706 	br	42800 <__alt_data_end+0xfffdb700>
   42fe4:	d9002c17 	ldw	r4,176(sp)
   42fe8:	d9801e04 	addi	r6,sp,120
   42fec:	b80b883a 	mov	r5,r23
   42ff0:	00489100 	call	48910 <__sprint_r>
   42ff4:	1039c91e 	bne	r2,zero,4171c <__alt_data_end+0xfffda61c>
   42ff8:	d8802617 	ldw	r2,152(sp)
   42ffc:	d9403317 	ldw	r5,204(sp)
   43000:	d8c02017 	ldw	r3,128(sp)
   43004:	da000404 	addi	r8,sp,16
   43008:	2885c83a 	sub	r2,r5,r2
   4300c:	003dfb06 	br	427fc <__alt_data_end+0xfffdb6fc>
   43010:	9080004c 	andi	r2,r18,1
   43014:	103e8f1e 	bne	r2,zero,42a54 <__alt_data_end+0xfffdb954>
   43018:	d8802117 	ldw	r2,132(sp)
   4301c:	003e9e06 	br	42a98 <__alt_data_end+0xfffdb998>
   43020:	1025883a 	mov	r18,r2
   43024:	0039883a 	mov	fp,zero
   43028:	00800084 	movi	r2,2
   4302c:	003fd306 	br	42f7c <__alt_data_end+0xfffdbe7c>
   43030:	07000b44 	movi	fp,45
   43034:	df002785 	stb	fp,158(sp)
   43038:	003a4006 	br	4193c <__alt_data_end+0xfffda83c>
   4303c:	00c00b44 	movi	r3,45
   43040:	d8c02785 	stb	r3,158(sp)
   43044:	d8802a15 	stw	r2,168(sp)
   43048:	dc802b17 	ldw	r18,172(sp)
   4304c:	d8002915 	stw	zero,164(sp)
   43050:	07000b44 	movi	fp,45
   43054:	003a8006 	br	41a58 <__alt_data_end+0xfffda958>
   43058:	04000174 	movhi	r16,5
   4305c:	843e3804 	addi	r16,r16,-1824
   43060:	003f4706 	br	42d80 <__alt_data_end+0xfffdbc80>
   43064:	d8c02d17 	ldw	r3,180(sp)
   43068:	d9002f17 	ldw	r4,188(sp)
   4306c:	18800017 	ldw	r2,0(r3)
   43070:	18c00104 	addi	r3,r3,4
   43074:	d8c02d15 	stw	r3,180(sp)
   43078:	11000015 	stw	r4,0(r2)
   4307c:	0038dd06 	br	413f4 <__alt_data_end+0xfffda2f4>
   43080:	dd802617 	ldw	r22,152(sp)
   43084:	00bfff44 	movi	r2,-3
   43088:	b0801c16 	blt	r22,r2,430fc <___vfprintf_internal_r+0x1de8>
   4308c:	d9402917 	ldw	r5,164(sp)
   43090:	2d801a16 	blt	r5,r22,430fc <___vfprintf_internal_r+0x1de8>
   43094:	dd803215 	stw	r22,200(sp)
   43098:	003e8906 	br	42ac0 <__alt_data_end+0xfffdb9c0>
   4309c:	01000174 	movhi	r4,5
   430a0:	213e4584 	addi	r4,r4,-1770
   430a4:	d9002b15 	stw	r4,172(sp)
   430a8:	003c9106 	br	422f0 <__alt_data_end+0xfffdb1f0>
   430ac:	e005883a 	mov	r2,fp
   430b0:	003e7906 	br	42a98 <__alt_data_end+0xfffdb998>
   430b4:	d9402917 	ldw	r5,164(sp)
   430b8:	df002783 	ldbu	fp,158(sp)
   430bc:	dcc02d15 	stw	r19,180(sp)
   430c0:	d9402a15 	stw	r5,168(sp)
   430c4:	d9402e15 	stw	r5,184(sp)
   430c8:	d8002915 	stw	zero,164(sp)
   430cc:	d8003215 	stw	zero,200(sp)
   430d0:	003a5d06 	br	41a48 <__alt_data_end+0xfffda948>
   430d4:	9080004c 	andi	r2,r18,1
   430d8:	0039883a 	mov	fp,zero
   430dc:	10000426 	beq	r2,zero,430f0 <___vfprintf_internal_r+0x1ddc>
   430e0:	00800c04 	movi	r2,48
   430e4:	dc001dc4 	addi	r16,sp,119
   430e8:	d8801dc5 	stb	r2,119(sp)
   430ec:	003b8006 	br	41ef0 <__alt_data_end+0xfffdadf0>
   430f0:	d8002e15 	stw	zero,184(sp)
   430f4:	dc001e04 	addi	r16,sp,120
   430f8:	003a4d06 	br	41a30 <__alt_data_end+0xfffda930>
   430fc:	8c7fff84 	addi	r17,r17,-2
   43100:	b5bfffc4 	addi	r22,r22,-1
   43104:	dd802615 	stw	r22,152(sp)
   43108:	dc4022c5 	stb	r17,139(sp)
   4310c:	b000bf16 	blt	r22,zero,4340c <___vfprintf_internal_r+0x20f8>
   43110:	00800ac4 	movi	r2,43
   43114:	d8802305 	stb	r2,140(sp)
   43118:	00800244 	movi	r2,9
   4311c:	15807016 	blt	r2,r22,432e0 <___vfprintf_internal_r+0x1fcc>
   43120:	00800c04 	movi	r2,48
   43124:	b5800c04 	addi	r22,r22,48
   43128:	d8802345 	stb	r2,141(sp)
   4312c:	dd802385 	stb	r22,142(sp)
   43130:	d88023c4 	addi	r2,sp,143
   43134:	df0022c4 	addi	fp,sp,139
   43138:	d8c03317 	ldw	r3,204(sp)
   4313c:	1739c83a 	sub	fp,r2,fp
   43140:	d9003317 	ldw	r4,204(sp)
   43144:	e0c7883a 	add	r3,fp,r3
   43148:	df003a15 	stw	fp,232(sp)
   4314c:	d8c02e15 	stw	r3,184(sp)
   43150:	00800044 	movi	r2,1
   43154:	1100b30e 	bge	r2,r4,43424 <___vfprintf_internal_r+0x2110>
   43158:	d8c02e17 	ldw	r3,184(sp)
   4315c:	18c00044 	addi	r3,r3,1
   43160:	d8c02e15 	stw	r3,184(sp)
   43164:	1805883a 	mov	r2,r3
   43168:	1800ac16 	blt	r3,zero,4341c <___vfprintf_internal_r+0x2108>
   4316c:	d8003215 	stw	zero,200(sp)
   43170:	003e5d06 	br	42ae8 <__alt_data_end+0xfffdb9e8>
   43174:	d9002c17 	ldw	r4,176(sp)
   43178:	d9801e04 	addi	r6,sp,120
   4317c:	b80b883a 	mov	r5,r23
   43180:	00489100 	call	48910 <__sprint_r>
   43184:	1039651e 	bne	r2,zero,4171c <__alt_data_end+0xfffda61c>
   43188:	dc402617 	ldw	r17,152(sp)
   4318c:	d8c02017 	ldw	r3,128(sp)
   43190:	d8801f17 	ldw	r2,124(sp)
   43194:	da000404 	addi	r8,sp,16
   43198:	003ed606 	br	42cf4 <__alt_data_end+0xfffdbbf4>
   4319c:	582b883a 	mov	r21,r11
   431a0:	d8002915 	stw	zero,164(sp)
   431a4:	0038bd06 	br	4149c <__alt_data_end+0xfffda39c>
   431a8:	d8802917 	ldw	r2,164(sp)
   431ac:	103e071e 	bne	r2,zero,429cc <__alt_data_end+0xfffdb8cc>
   431b0:	dc002915 	stw	r16,164(sp)
   431b4:	003e0506 	br	429cc <__alt_data_end+0xfffdb8cc>
   431b8:	d9002917 	ldw	r4,164(sp)
   431bc:	20c00044 	addi	r3,r4,1
   431c0:	003e0f06 	br	42a00 <__alt_data_end+0xfffdb900>
   431c4:	01400184 	movi	r5,6
   431c8:	d9402915 	stw	r5,164(sp)
   431cc:	003dff06 	br	429cc <__alt_data_end+0xfffdb8cc>
   431d0:	d8802104 	addi	r2,sp,132
   431d4:	d8800315 	stw	r2,12(sp)
   431d8:	d8802504 	addi	r2,sp,148
   431dc:	d8800215 	stw	r2,8(sp)
   431e0:	d8802604 	addi	r2,sp,152
   431e4:	d8800115 	stw	r2,4(sp)
   431e8:	d8802917 	ldw	r2,164(sp)
   431ec:	d9403617 	ldw	r5,216(sp)
   431f0:	d9002c17 	ldw	r4,176(sp)
   431f4:	d8800015 	stw	r2,0(sp)
   431f8:	01c000c4 	movi	r7,3
   431fc:	980d883a 	mov	r6,r19
   43200:	da003d15 	stw	r8,244(sp)
   43204:	00439380 	call	43938 <_dtoa_r>
   43208:	d8c02917 	ldw	r3,164(sp)
   4320c:	da003d17 	ldw	r8,244(sp)
   43210:	1021883a 	mov	r16,r2
   43214:	10f9883a 	add	fp,r2,r3
   43218:	81000007 	ldb	r4,0(r16)
   4321c:	00800c04 	movi	r2,48
   43220:	20805e26 	beq	r4,r2,4339c <___vfprintf_internal_r+0x2088>
   43224:	d8c02617 	ldw	r3,152(sp)
   43228:	e0f9883a 	add	fp,fp,r3
   4322c:	003e0a06 	br	42a58 <__alt_data_end+0xfffdb958>
   43230:	00c00b44 	movi	r3,45
   43234:	24e0003c 	xorhi	r19,r4,32768
   43238:	d8c02a05 	stb	r3,168(sp)
   4323c:	003de906 	br	429e4 <__alt_data_end+0xfffdb8e4>
   43240:	d8c03217 	ldw	r3,200(sp)
   43244:	00c07a0e 	bge	zero,r3,43430 <___vfprintf_internal_r+0x211c>
   43248:	00800044 	movi	r2,1
   4324c:	d9003317 	ldw	r4,204(sp)
   43250:	1105883a 	add	r2,r2,r4
   43254:	d8802e15 	stw	r2,184(sp)
   43258:	10004e16 	blt	r2,zero,43394 <___vfprintf_internal_r+0x2080>
   4325c:	044019c4 	movi	r17,103
   43260:	003e2106 	br	42ae8 <__alt_data_end+0xfffdb9e8>
   43264:	d9002917 	ldw	r4,164(sp)
   43268:	d8802104 	addi	r2,sp,132
   4326c:	d8800315 	stw	r2,12(sp)
   43270:	d9000015 	stw	r4,0(sp)
   43274:	d8802504 	addi	r2,sp,148
   43278:	d9403617 	ldw	r5,216(sp)
   4327c:	d9002c17 	ldw	r4,176(sp)
   43280:	d8800215 	stw	r2,8(sp)
   43284:	d8802604 	addi	r2,sp,152
   43288:	d8800115 	stw	r2,4(sp)
   4328c:	01c000c4 	movi	r7,3
   43290:	980d883a 	mov	r6,r19
   43294:	da003d15 	stw	r8,244(sp)
   43298:	00439380 	call	43938 <_dtoa_r>
   4329c:	d8c02917 	ldw	r3,164(sp)
   432a0:	da003d17 	ldw	r8,244(sp)
   432a4:	1021883a 	mov	r16,r2
   432a8:	00801184 	movi	r2,70
   432ac:	80f9883a 	add	fp,r16,r3
   432b0:	88bfd926 	beq	r17,r2,43218 <__alt_data_end+0xfffdc118>
   432b4:	003de806 	br	42a58 <__alt_data_end+0xfffdb958>
   432b8:	d9002917 	ldw	r4,164(sp)
   432bc:	00c04d0e 	bge	zero,r3,433f4 <___vfprintf_internal_r+0x20e0>
   432c0:	2000441e 	bne	r4,zero,433d4 <___vfprintf_internal_r+0x20c0>
   432c4:	9480004c 	andi	r18,r18,1
   432c8:	9000421e 	bne	r18,zero,433d4 <___vfprintf_internal_r+0x20c0>
   432cc:	1805883a 	mov	r2,r3
   432d0:	18007016 	blt	r3,zero,43494 <___vfprintf_internal_r+0x2180>
   432d4:	d8c03217 	ldw	r3,200(sp)
   432d8:	d8c02e15 	stw	r3,184(sp)
   432dc:	003e0206 	br	42ae8 <__alt_data_end+0xfffdb9e8>
   432e0:	df0022c4 	addi	fp,sp,139
   432e4:	dc002915 	stw	r16,164(sp)
   432e8:	4027883a 	mov	r19,r8
   432ec:	e021883a 	mov	r16,fp
   432f0:	b009883a 	mov	r4,r22
   432f4:	01400284 	movi	r5,10
   432f8:	004100c0 	call	4100c <__modsi3>
   432fc:	10800c04 	addi	r2,r2,48
   43300:	843fffc4 	addi	r16,r16,-1
   43304:	b009883a 	mov	r4,r22
   43308:	01400284 	movi	r5,10
   4330c:	80800005 	stb	r2,0(r16)
   43310:	0040f880 	call	40f88 <__divsi3>
   43314:	102d883a 	mov	r22,r2
   43318:	00800244 	movi	r2,9
   4331c:	15bff416 	blt	r2,r22,432f0 <__alt_data_end+0xfffdc1f0>
   43320:	9811883a 	mov	r8,r19
   43324:	b0800c04 	addi	r2,r22,48
   43328:	8027883a 	mov	r19,r16
   4332c:	997fffc4 	addi	r5,r19,-1
   43330:	98bfffc5 	stb	r2,-1(r19)
   43334:	dc002917 	ldw	r16,164(sp)
   43338:	2f006a2e 	bgeu	r5,fp,434e4 <___vfprintf_internal_r+0x21d0>
   4333c:	d9c02384 	addi	r7,sp,142
   43340:	3ccfc83a 	sub	r7,r7,r19
   43344:	d9002344 	addi	r4,sp,141
   43348:	e1cf883a 	add	r7,fp,r7
   4334c:	00000106 	br	43354 <___vfprintf_internal_r+0x2040>
   43350:	28800003 	ldbu	r2,0(r5)
   43354:	20800005 	stb	r2,0(r4)
   43358:	21000044 	addi	r4,r4,1
   4335c:	29400044 	addi	r5,r5,1
   43360:	393ffb1e 	bne	r7,r4,43350 <__alt_data_end+0xfffdc250>
   43364:	d8802304 	addi	r2,sp,140
   43368:	14c5c83a 	sub	r2,r2,r19
   4336c:	d8c02344 	addi	r3,sp,141
   43370:	1885883a 	add	r2,r3,r2
   43374:	003f7006 	br	43138 <__alt_data_end+0xfffdc038>
   43378:	0005883a 	mov	r2,zero
   4337c:	003f0f06 	br	42fbc <__alt_data_end+0xfffdbebc>
   43380:	d8c03217 	ldw	r3,200(sp)
   43384:	18c00044 	addi	r3,r3,1
   43388:	d8c02e15 	stw	r3,184(sp)
   4338c:	1805883a 	mov	r2,r3
   43390:	183fb20e 	bge	r3,zero,4325c <__alt_data_end+0xfffdc15c>
   43394:	0005883a 	mov	r2,zero
   43398:	003fb006 	br	4325c <__alt_data_end+0xfffdc15c>
   4339c:	d9003617 	ldw	r4,216(sp)
   433a0:	000d883a 	mov	r6,zero
   433a4:	000f883a 	mov	r7,zero
   433a8:	980b883a 	mov	r5,r19
   433ac:	d8c03c15 	stw	r3,240(sp)
   433b0:	da003d15 	stw	r8,244(sp)
   433b4:	004baec0 	call	4baec <__eqdf2>
   433b8:	d8c03c17 	ldw	r3,240(sp)
   433bc:	da003d17 	ldw	r8,244(sp)
   433c0:	103f9826 	beq	r2,zero,43224 <__alt_data_end+0xfffdc124>
   433c4:	00800044 	movi	r2,1
   433c8:	10c7c83a 	sub	r3,r2,r3
   433cc:	d8c02615 	stw	r3,152(sp)
   433d0:	003f9506 	br	43228 <__alt_data_end+0xfffdc128>
   433d4:	d9002917 	ldw	r4,164(sp)
   433d8:	d8c03217 	ldw	r3,200(sp)
   433dc:	20800044 	addi	r2,r4,1
   433e0:	1885883a 	add	r2,r3,r2
   433e4:	d8802e15 	stw	r2,184(sp)
   433e8:	103dbf0e 	bge	r2,zero,42ae8 <__alt_data_end+0xfffdb9e8>
   433ec:	0005883a 	mov	r2,zero
   433f0:	003dbd06 	br	42ae8 <__alt_data_end+0xfffdb9e8>
   433f4:	2000211e 	bne	r4,zero,4347c <___vfprintf_internal_r+0x2168>
   433f8:	9480004c 	andi	r18,r18,1
   433fc:	90001f1e 	bne	r18,zero,4347c <___vfprintf_internal_r+0x2168>
   43400:	00800044 	movi	r2,1
   43404:	d8802e15 	stw	r2,184(sp)
   43408:	003db706 	br	42ae8 <__alt_data_end+0xfffdb9e8>
   4340c:	00800b44 	movi	r2,45
   43410:	05adc83a 	sub	r22,zero,r22
   43414:	d8802305 	stb	r2,140(sp)
   43418:	003f3f06 	br	43118 <__alt_data_end+0xfffdc018>
   4341c:	0005883a 	mov	r2,zero
   43420:	003f5206 	br	4316c <__alt_data_end+0xfffdc06c>
   43424:	90a4703a 	and	r18,r18,r2
   43428:	903f4e26 	beq	r18,zero,43164 <__alt_data_end+0xfffdc064>
   4342c:	003f4a06 	br	43158 <__alt_data_end+0xfffdc058>
   43430:	00800084 	movi	r2,2
   43434:	10c5c83a 	sub	r2,r2,r3
   43438:	003f8406 	br	4324c <__alt_data_end+0xfffdc14c>
   4343c:	d8802d17 	ldw	r2,180(sp)
   43440:	d9002d17 	ldw	r4,180(sp)
   43444:	ac400043 	ldbu	r17,1(r21)
   43448:	10800017 	ldw	r2,0(r2)
   4344c:	582b883a 	mov	r21,r11
   43450:	d8802915 	stw	r2,164(sp)
   43454:	20800104 	addi	r2,r4,4
   43458:	d9002917 	ldw	r4,164(sp)
   4345c:	d8802d15 	stw	r2,180(sp)
   43460:	203e7a0e 	bge	r4,zero,42e4c <__alt_data_end+0xfffdbd4c>
   43464:	8c403fcc 	andi	r17,r17,255
   43468:	00bfffc4 	movi	r2,-1
   4346c:	8c40201c 	xori	r17,r17,128
   43470:	d8802915 	stw	r2,164(sp)
   43474:	8c7fe004 	addi	r17,r17,-128
   43478:	00380706 	br	41498 <__alt_data_end+0xfffda398>
   4347c:	d8c02917 	ldw	r3,164(sp)
   43480:	18c00084 	addi	r3,r3,2
   43484:	d8c02e15 	stw	r3,184(sp)
   43488:	1805883a 	mov	r2,r3
   4348c:	183d960e 	bge	r3,zero,42ae8 <__alt_data_end+0xfffdb9e8>
   43490:	003fd606 	br	433ec <__alt_data_end+0xfffdc2ec>
   43494:	0005883a 	mov	r2,zero
   43498:	003f8e06 	br	432d4 <__alt_data_end+0xfffdc1d4>
   4349c:	9080004c 	andi	r2,r18,1
   434a0:	103f811e 	bne	r2,zero,432a8 <__alt_data_end+0xfffdc1a8>
   434a4:	d8802117 	ldw	r2,132(sp)
   434a8:	1405c83a 	sub	r2,r2,r16
   434ac:	d8803315 	stw	r2,204(sp)
   434b0:	b47ef326 	beq	r22,r17,43080 <__alt_data_end+0xfffdbf80>
   434b4:	dd802617 	ldw	r22,152(sp)
   434b8:	003f1106 	br	43100 <__alt_data_end+0xfffdc000>
   434bc:	d9c02785 	stb	r7,158(sp)
   434c0:	00390406 	br	418d4 <__alt_data_end+0xfffda7d4>
   434c4:	d9c02785 	stb	r7,158(sp)
   434c8:	0038d306 	br	41818 <__alt_data_end+0xfffda718>
   434cc:	d9c02785 	stb	r7,158(sp)
   434d0:	003a6106 	br	41e58 <__alt_data_end+0xfffdad58>
   434d4:	d9c02785 	stb	r7,158(sp)
   434d8:	003af806 	br	420bc <__alt_data_end+0xfffdafbc>
   434dc:	0005883a 	mov	r2,zero
   434e0:	003d7e06 	br	42adc <__alt_data_end+0xfffdb9dc>
   434e4:	d8802344 	addi	r2,sp,141
   434e8:	003f1306 	br	43138 <__alt_data_end+0xfffdc038>
   434ec:	d9c02785 	stb	r7,158(sp)
   434f0:	00392306 	br	41980 <__alt_data_end+0xfffda880>
   434f4:	d9c02785 	stb	r7,158(sp)
   434f8:	003aa906 	br	41fa0 <__alt_data_end+0xfffdaea0>
   434fc:	d9c02785 	stb	r7,158(sp)
   43500:	003a3d06 	br	41df8 <__alt_data_end+0xfffdacf8>
   43504:	d9c02785 	stb	r7,158(sp)
   43508:	003aca06 	br	42034 <__alt_data_end+0xfffdaf34>

0004350c <__vfprintf_internal>:
   4350c:	00800174 	movhi	r2,5
   43510:	10855e04 	addi	r2,r2,5496
   43514:	300f883a 	mov	r7,r6
   43518:	280d883a 	mov	r6,r5
   4351c:	200b883a 	mov	r5,r4
   43520:	11000017 	ldw	r4,0(r2)
   43524:	00413141 	jmpi	41314 <___vfprintf_internal_r>

00043528 <__sbprintf>:
   43528:	2880030b 	ldhu	r2,12(r5)
   4352c:	2ac01917 	ldw	r11,100(r5)
   43530:	2a80038b 	ldhu	r10,14(r5)
   43534:	2a400717 	ldw	r9,28(r5)
   43538:	2a000917 	ldw	r8,36(r5)
   4353c:	defee204 	addi	sp,sp,-1144
   43540:	00c10004 	movi	r3,1024
   43544:	dc011a15 	stw	r16,1128(sp)
   43548:	10bfff4c 	andi	r2,r2,65533
   4354c:	2821883a 	mov	r16,r5
   43550:	d8cb883a 	add	r5,sp,r3
   43554:	dc811c15 	stw	r18,1136(sp)
   43558:	dc411b15 	stw	r17,1132(sp)
   4355c:	dfc11d15 	stw	ra,1140(sp)
   43560:	2025883a 	mov	r18,r4
   43564:	d881030d 	sth	r2,1036(sp)
   43568:	dac11915 	stw	r11,1124(sp)
   4356c:	da81038d 	sth	r10,1038(sp)
   43570:	da410715 	stw	r9,1052(sp)
   43574:	da010915 	stw	r8,1060(sp)
   43578:	dec10015 	stw	sp,1024(sp)
   4357c:	dec10415 	stw	sp,1040(sp)
   43580:	d8c10215 	stw	r3,1032(sp)
   43584:	d8c10515 	stw	r3,1044(sp)
   43588:	d8010615 	stw	zero,1048(sp)
   4358c:	00413140 	call	41314 <___vfprintf_internal_r>
   43590:	1023883a 	mov	r17,r2
   43594:	10000416 	blt	r2,zero,435a8 <__sbprintf+0x80>
   43598:	d9410004 	addi	r5,sp,1024
   4359c:	9009883a 	mov	r4,r18
   435a0:	00451dc0 	call	451dc <_fflush_r>
   435a4:	10000d1e 	bne	r2,zero,435dc <__sbprintf+0xb4>
   435a8:	d881030b 	ldhu	r2,1036(sp)
   435ac:	1080100c 	andi	r2,r2,64
   435b0:	10000326 	beq	r2,zero,435c0 <__sbprintf+0x98>
   435b4:	8080030b 	ldhu	r2,12(r16)
   435b8:	10801014 	ori	r2,r2,64
   435bc:	8080030d 	sth	r2,12(r16)
   435c0:	8805883a 	mov	r2,r17
   435c4:	dfc11d17 	ldw	ra,1140(sp)
   435c8:	dc811c17 	ldw	r18,1136(sp)
   435cc:	dc411b17 	ldw	r17,1132(sp)
   435d0:	dc011a17 	ldw	r16,1128(sp)
   435d4:	dec11e04 	addi	sp,sp,1144
   435d8:	f800283a 	ret
   435dc:	047fffc4 	movi	r17,-1
   435e0:	003ff106 	br	435a8 <__alt_data_end+0xfffdc4a8>

000435e4 <__swsetup_r>:
   435e4:	00800174 	movhi	r2,5
   435e8:	defffd04 	addi	sp,sp,-12
   435ec:	10855e04 	addi	r2,r2,5496
   435f0:	dc400115 	stw	r17,4(sp)
   435f4:	2023883a 	mov	r17,r4
   435f8:	11000017 	ldw	r4,0(r2)
   435fc:	dc000015 	stw	r16,0(sp)
   43600:	dfc00215 	stw	ra,8(sp)
   43604:	2821883a 	mov	r16,r5
   43608:	20000226 	beq	r4,zero,43614 <__swsetup_r+0x30>
   4360c:	20800e17 	ldw	r2,56(r4)
   43610:	10003126 	beq	r2,zero,436d8 <__swsetup_r+0xf4>
   43614:	8080030b 	ldhu	r2,12(r16)
   43618:	10c0020c 	andi	r3,r2,8
   4361c:	1009883a 	mov	r4,r2
   43620:	18000f26 	beq	r3,zero,43660 <__swsetup_r+0x7c>
   43624:	80c00417 	ldw	r3,16(r16)
   43628:	18001526 	beq	r3,zero,43680 <__swsetup_r+0x9c>
   4362c:	1100004c 	andi	r4,r2,1
   43630:	20001c1e 	bne	r4,zero,436a4 <__swsetup_r+0xc0>
   43634:	1080008c 	andi	r2,r2,2
   43638:	1000291e 	bne	r2,zero,436e0 <__swsetup_r+0xfc>
   4363c:	80800517 	ldw	r2,20(r16)
   43640:	80800215 	stw	r2,8(r16)
   43644:	18001c26 	beq	r3,zero,436b8 <__swsetup_r+0xd4>
   43648:	0005883a 	mov	r2,zero
   4364c:	dfc00217 	ldw	ra,8(sp)
   43650:	dc400117 	ldw	r17,4(sp)
   43654:	dc000017 	ldw	r16,0(sp)
   43658:	dec00304 	addi	sp,sp,12
   4365c:	f800283a 	ret
   43660:	2080040c 	andi	r2,r4,16
   43664:	10002e26 	beq	r2,zero,43720 <__swsetup_r+0x13c>
   43668:	2080010c 	andi	r2,r4,4
   4366c:	10001e1e 	bne	r2,zero,436e8 <__swsetup_r+0x104>
   43670:	80c00417 	ldw	r3,16(r16)
   43674:	20800214 	ori	r2,r4,8
   43678:	8080030d 	sth	r2,12(r16)
   4367c:	183feb1e 	bne	r3,zero,4362c <__alt_data_end+0xfffdc52c>
   43680:	1100a00c 	andi	r4,r2,640
   43684:	01408004 	movi	r5,512
   43688:	217fe826 	beq	r4,r5,4362c <__alt_data_end+0xfffdc52c>
   4368c:	800b883a 	mov	r5,r16
   43690:	8809883a 	mov	r4,r17
   43694:	004615c0 	call	4615c <__smakebuf_r>
   43698:	8080030b 	ldhu	r2,12(r16)
   4369c:	80c00417 	ldw	r3,16(r16)
   436a0:	003fe206 	br	4362c <__alt_data_end+0xfffdc52c>
   436a4:	80800517 	ldw	r2,20(r16)
   436a8:	80000215 	stw	zero,8(r16)
   436ac:	0085c83a 	sub	r2,zero,r2
   436b0:	80800615 	stw	r2,24(r16)
   436b4:	183fe41e 	bne	r3,zero,43648 <__alt_data_end+0xfffdc548>
   436b8:	80c0030b 	ldhu	r3,12(r16)
   436bc:	0005883a 	mov	r2,zero
   436c0:	1900200c 	andi	r4,r3,128
   436c4:	203fe126 	beq	r4,zero,4364c <__alt_data_end+0xfffdc54c>
   436c8:	18c01014 	ori	r3,r3,64
   436cc:	80c0030d 	sth	r3,12(r16)
   436d0:	00bfffc4 	movi	r2,-1
   436d4:	003fdd06 	br	4364c <__alt_data_end+0xfffdc54c>
   436d8:	00455b80 	call	455b8 <__sinit>
   436dc:	003fcd06 	br	43614 <__alt_data_end+0xfffdc514>
   436e0:	0005883a 	mov	r2,zero
   436e4:	003fd606 	br	43640 <__alt_data_end+0xfffdc540>
   436e8:	81400c17 	ldw	r5,48(r16)
   436ec:	28000626 	beq	r5,zero,43708 <__swsetup_r+0x124>
   436f0:	80801004 	addi	r2,r16,64
   436f4:	28800326 	beq	r5,r2,43704 <__swsetup_r+0x120>
   436f8:	8809883a 	mov	r4,r17
   436fc:	004572c0 	call	4572c <_free_r>
   43700:	8100030b 	ldhu	r4,12(r16)
   43704:	80000c15 	stw	zero,48(r16)
   43708:	80c00417 	ldw	r3,16(r16)
   4370c:	00bff6c4 	movi	r2,-37
   43710:	1108703a 	and	r4,r2,r4
   43714:	80000115 	stw	zero,4(r16)
   43718:	80c00015 	stw	r3,0(r16)
   4371c:	003fd506 	br	43674 <__alt_data_end+0xfffdc574>
   43720:	00800244 	movi	r2,9
   43724:	88800015 	stw	r2,0(r17)
   43728:	20801014 	ori	r2,r4,64
   4372c:	8080030d 	sth	r2,12(r16)
   43730:	00bfffc4 	movi	r2,-1
   43734:	003fc506 	br	4364c <__alt_data_end+0xfffdc54c>

00043738 <quorem>:
   43738:	defff704 	addi	sp,sp,-36
   4373c:	dc800215 	stw	r18,8(sp)
   43740:	20800417 	ldw	r2,16(r4)
   43744:	2c800417 	ldw	r18,16(r5)
   43748:	dfc00815 	stw	ra,32(sp)
   4374c:	ddc00715 	stw	r23,28(sp)
   43750:	dd800615 	stw	r22,24(sp)
   43754:	dd400515 	stw	r21,20(sp)
   43758:	dd000415 	stw	r20,16(sp)
   4375c:	dcc00315 	stw	r19,12(sp)
   43760:	dc400115 	stw	r17,4(sp)
   43764:	dc000015 	stw	r16,0(sp)
   43768:	14807116 	blt	r2,r18,43930 <quorem+0x1f8>
   4376c:	94bfffc4 	addi	r18,r18,-1
   43770:	94ad883a 	add	r22,r18,r18
   43774:	b5ad883a 	add	r22,r22,r22
   43778:	2c400504 	addi	r17,r5,20
   4377c:	8da9883a 	add	r20,r17,r22
   43780:	25400504 	addi	r21,r4,20
   43784:	282f883a 	mov	r23,r5
   43788:	adad883a 	add	r22,r21,r22
   4378c:	a1400017 	ldw	r5,0(r20)
   43790:	2021883a 	mov	r16,r4
   43794:	b1000017 	ldw	r4,0(r22)
   43798:	29400044 	addi	r5,r5,1
   4379c:	00410800 	call	41080 <__udivsi3>
   437a0:	1027883a 	mov	r19,r2
   437a4:	10002c26 	beq	r2,zero,43858 <quorem+0x120>
   437a8:	a813883a 	mov	r9,r21
   437ac:	880b883a 	mov	r5,r17
   437b0:	0009883a 	mov	r4,zero
   437b4:	000d883a 	mov	r6,zero
   437b8:	2a000017 	ldw	r8,0(r5)
   437bc:	49c00017 	ldw	r7,0(r9)
   437c0:	29400104 	addi	r5,r5,4
   437c4:	40bfffcc 	andi	r2,r8,65535
   437c8:	14c5383a 	mul	r2,r2,r19
   437cc:	4010d43a 	srli	r8,r8,16
   437d0:	38ffffcc 	andi	r3,r7,65535
   437d4:	1105883a 	add	r2,r2,r4
   437d8:	1008d43a 	srli	r4,r2,16
   437dc:	44d1383a 	mul	r8,r8,r19
   437e0:	198d883a 	add	r6,r3,r6
   437e4:	10ffffcc 	andi	r3,r2,65535
   437e8:	30c7c83a 	sub	r3,r6,r3
   437ec:	380ed43a 	srli	r7,r7,16
   437f0:	4105883a 	add	r2,r8,r4
   437f4:	180dd43a 	srai	r6,r3,16
   437f8:	113fffcc 	andi	r4,r2,65535
   437fc:	390fc83a 	sub	r7,r7,r4
   43800:	398d883a 	add	r6,r7,r6
   43804:	300e943a 	slli	r7,r6,16
   43808:	18ffffcc 	andi	r3,r3,65535
   4380c:	1008d43a 	srli	r4,r2,16
   43810:	38ceb03a 	or	r7,r7,r3
   43814:	49c00015 	stw	r7,0(r9)
   43818:	300dd43a 	srai	r6,r6,16
   4381c:	4a400104 	addi	r9,r9,4
   43820:	a17fe52e 	bgeu	r20,r5,437b8 <__alt_data_end+0xfffdc6b8>
   43824:	b0800017 	ldw	r2,0(r22)
   43828:	10000b1e 	bne	r2,zero,43858 <quorem+0x120>
   4382c:	b0bfff04 	addi	r2,r22,-4
   43830:	a880082e 	bgeu	r21,r2,43854 <quorem+0x11c>
   43834:	b0ffff17 	ldw	r3,-4(r22)
   43838:	18000326 	beq	r3,zero,43848 <quorem+0x110>
   4383c:	00000506 	br	43854 <quorem+0x11c>
   43840:	10c00017 	ldw	r3,0(r2)
   43844:	1800031e 	bne	r3,zero,43854 <quorem+0x11c>
   43848:	10bfff04 	addi	r2,r2,-4
   4384c:	94bfffc4 	addi	r18,r18,-1
   43850:	a8bffb36 	bltu	r21,r2,43840 <__alt_data_end+0xfffdc740>
   43854:	84800415 	stw	r18,16(r16)
   43858:	b80b883a 	mov	r5,r23
   4385c:	8009883a 	mov	r4,r16
   43860:	004789c0 	call	4789c <__mcmp>
   43864:	10002616 	blt	r2,zero,43900 <quorem+0x1c8>
   43868:	9cc00044 	addi	r19,r19,1
   4386c:	a805883a 	mov	r2,r21
   43870:	000b883a 	mov	r5,zero
   43874:	11000017 	ldw	r4,0(r2)
   43878:	89800017 	ldw	r6,0(r17)
   4387c:	10800104 	addi	r2,r2,4
   43880:	20ffffcc 	andi	r3,r4,65535
   43884:	194b883a 	add	r5,r3,r5
   43888:	30ffffcc 	andi	r3,r6,65535
   4388c:	28c7c83a 	sub	r3,r5,r3
   43890:	300cd43a 	srli	r6,r6,16
   43894:	2008d43a 	srli	r4,r4,16
   43898:	180bd43a 	srai	r5,r3,16
   4389c:	18ffffcc 	andi	r3,r3,65535
   438a0:	2189c83a 	sub	r4,r4,r6
   438a4:	2149883a 	add	r4,r4,r5
   438a8:	200c943a 	slli	r6,r4,16
   438ac:	8c400104 	addi	r17,r17,4
   438b0:	200bd43a 	srai	r5,r4,16
   438b4:	30c6b03a 	or	r3,r6,r3
   438b8:	10ffff15 	stw	r3,-4(r2)
   438bc:	a47fed2e 	bgeu	r20,r17,43874 <__alt_data_end+0xfffdc774>
   438c0:	9485883a 	add	r2,r18,r18
   438c4:	1085883a 	add	r2,r2,r2
   438c8:	a887883a 	add	r3,r21,r2
   438cc:	18800017 	ldw	r2,0(r3)
   438d0:	10000b1e 	bne	r2,zero,43900 <quorem+0x1c8>
   438d4:	18bfff04 	addi	r2,r3,-4
   438d8:	a880082e 	bgeu	r21,r2,438fc <quorem+0x1c4>
   438dc:	18ffff17 	ldw	r3,-4(r3)
   438e0:	18000326 	beq	r3,zero,438f0 <quorem+0x1b8>
   438e4:	00000506 	br	438fc <quorem+0x1c4>
   438e8:	10c00017 	ldw	r3,0(r2)
   438ec:	1800031e 	bne	r3,zero,438fc <quorem+0x1c4>
   438f0:	10bfff04 	addi	r2,r2,-4
   438f4:	94bfffc4 	addi	r18,r18,-1
   438f8:	a8bffb36 	bltu	r21,r2,438e8 <__alt_data_end+0xfffdc7e8>
   438fc:	84800415 	stw	r18,16(r16)
   43900:	9805883a 	mov	r2,r19
   43904:	dfc00817 	ldw	ra,32(sp)
   43908:	ddc00717 	ldw	r23,28(sp)
   4390c:	dd800617 	ldw	r22,24(sp)
   43910:	dd400517 	ldw	r21,20(sp)
   43914:	dd000417 	ldw	r20,16(sp)
   43918:	dcc00317 	ldw	r19,12(sp)
   4391c:	dc800217 	ldw	r18,8(sp)
   43920:	dc400117 	ldw	r17,4(sp)
   43924:	dc000017 	ldw	r16,0(sp)
   43928:	dec00904 	addi	sp,sp,36
   4392c:	f800283a 	ret
   43930:	0005883a 	mov	r2,zero
   43934:	003ff306 	br	43904 <__alt_data_end+0xfffdc804>

00043938 <_dtoa_r>:
   43938:	20801017 	ldw	r2,64(r4)
   4393c:	deffde04 	addi	sp,sp,-136
   43940:	df002015 	stw	fp,128(sp)
   43944:	dcc01b15 	stw	r19,108(sp)
   43948:	dc801a15 	stw	r18,104(sp)
   4394c:	dc401915 	stw	r17,100(sp)
   43950:	dc001815 	stw	r16,96(sp)
   43954:	dfc02115 	stw	ra,132(sp)
   43958:	ddc01f15 	stw	r23,124(sp)
   4395c:	dd801e15 	stw	r22,120(sp)
   43960:	dd401d15 	stw	r21,116(sp)
   43964:	dd001c15 	stw	r20,112(sp)
   43968:	d9c00315 	stw	r7,12(sp)
   4396c:	2039883a 	mov	fp,r4
   43970:	3023883a 	mov	r17,r6
   43974:	2825883a 	mov	r18,r5
   43978:	dc002417 	ldw	r16,144(sp)
   4397c:	3027883a 	mov	r19,r6
   43980:	10000826 	beq	r2,zero,439a4 <_dtoa_r+0x6c>
   43984:	21801117 	ldw	r6,68(r4)
   43988:	00c00044 	movi	r3,1
   4398c:	100b883a 	mov	r5,r2
   43990:	1986983a 	sll	r3,r3,r6
   43994:	11800115 	stw	r6,4(r2)
   43998:	10c00215 	stw	r3,8(r2)
   4399c:	004707c0 	call	4707c <_Bfree>
   439a0:	e0001015 	stw	zero,64(fp)
   439a4:	88002e16 	blt	r17,zero,43a60 <_dtoa_r+0x128>
   439a8:	80000015 	stw	zero,0(r16)
   439ac:	889ffc2c 	andhi	r2,r17,32752
   439b0:	00dffc34 	movhi	r3,32752
   439b4:	10c01c26 	beq	r2,r3,43a28 <_dtoa_r+0xf0>
   439b8:	000d883a 	mov	r6,zero
   439bc:	000f883a 	mov	r7,zero
   439c0:	9009883a 	mov	r4,r18
   439c4:	980b883a 	mov	r5,r19
   439c8:	004baec0 	call	4baec <__eqdf2>
   439cc:	10002b1e 	bne	r2,zero,43a7c <_dtoa_r+0x144>
   439d0:	d9c02317 	ldw	r7,140(sp)
   439d4:	00800044 	movi	r2,1
   439d8:	38800015 	stw	r2,0(r7)
   439dc:	d8802517 	ldw	r2,148(sp)
   439e0:	10019e26 	beq	r2,zero,4405c <_dtoa_r+0x724>
   439e4:	d8c02517 	ldw	r3,148(sp)
   439e8:	00800174 	movhi	r2,5
   439ec:	10be4544 	addi	r2,r2,-1771
   439f0:	18800015 	stw	r2,0(r3)
   439f4:	10bfffc4 	addi	r2,r2,-1
   439f8:	dfc02117 	ldw	ra,132(sp)
   439fc:	df002017 	ldw	fp,128(sp)
   43a00:	ddc01f17 	ldw	r23,124(sp)
   43a04:	dd801e17 	ldw	r22,120(sp)
   43a08:	dd401d17 	ldw	r21,116(sp)
   43a0c:	dd001c17 	ldw	r20,112(sp)
   43a10:	dcc01b17 	ldw	r19,108(sp)
   43a14:	dc801a17 	ldw	r18,104(sp)
   43a18:	dc401917 	ldw	r17,100(sp)
   43a1c:	dc001817 	ldw	r16,96(sp)
   43a20:	dec02204 	addi	sp,sp,136
   43a24:	f800283a 	ret
   43a28:	d8c02317 	ldw	r3,140(sp)
   43a2c:	0089c3c4 	movi	r2,9999
   43a30:	18800015 	stw	r2,0(r3)
   43a34:	90017726 	beq	r18,zero,44014 <_dtoa_r+0x6dc>
   43a38:	00800174 	movhi	r2,5
   43a3c:	10be5104 	addi	r2,r2,-1724
   43a40:	d9002517 	ldw	r4,148(sp)
   43a44:	203fec26 	beq	r4,zero,439f8 <__alt_data_end+0xfffdc8f8>
   43a48:	10c000c7 	ldb	r3,3(r2)
   43a4c:	1801781e 	bne	r3,zero,44030 <_dtoa_r+0x6f8>
   43a50:	10c000c4 	addi	r3,r2,3
   43a54:	d9802517 	ldw	r6,148(sp)
   43a58:	30c00015 	stw	r3,0(r6)
   43a5c:	003fe606 	br	439f8 <__alt_data_end+0xfffdc8f8>
   43a60:	04e00034 	movhi	r19,32768
   43a64:	9cffffc4 	addi	r19,r19,-1
   43a68:	00800044 	movi	r2,1
   43a6c:	8ce6703a 	and	r19,r17,r19
   43a70:	80800015 	stw	r2,0(r16)
   43a74:	9823883a 	mov	r17,r19
   43a78:	003fcc06 	br	439ac <__alt_data_end+0xfffdc8ac>
   43a7c:	d8800204 	addi	r2,sp,8
   43a80:	d8800015 	stw	r2,0(sp)
   43a84:	d9c00104 	addi	r7,sp,4
   43a88:	900b883a 	mov	r5,r18
   43a8c:	980d883a 	mov	r6,r19
   43a90:	e009883a 	mov	r4,fp
   43a94:	8820d53a 	srli	r16,r17,20
   43a98:	0047c680 	call	47c68 <__d2b>
   43a9c:	d8800915 	stw	r2,36(sp)
   43aa0:	8001651e 	bne	r16,zero,44038 <_dtoa_r+0x700>
   43aa4:	dd800217 	ldw	r22,8(sp)
   43aa8:	dc000117 	ldw	r16,4(sp)
   43aac:	00800804 	movi	r2,32
   43ab0:	b421883a 	add	r16,r22,r16
   43ab4:	80c10c84 	addi	r3,r16,1074
   43ab8:	10c2d10e 	bge	r2,r3,44600 <_dtoa_r+0xcc8>
   43abc:	00801004 	movi	r2,64
   43ac0:	81010484 	addi	r4,r16,1042
   43ac4:	10c7c83a 	sub	r3,r2,r3
   43ac8:	9108d83a 	srl	r4,r18,r4
   43acc:	88e2983a 	sll	r17,r17,r3
   43ad0:	2448b03a 	or	r4,r4,r17
   43ad4:	004ceb40 	call	4ceb4 <__floatunsidf>
   43ad8:	017f8434 	movhi	r5,65040
   43adc:	01800044 	movi	r6,1
   43ae0:	1009883a 	mov	r4,r2
   43ae4:	194b883a 	add	r5,r3,r5
   43ae8:	843fffc4 	addi	r16,r16,-1
   43aec:	d9801115 	stw	r6,68(sp)
   43af0:	000d883a 	mov	r6,zero
   43af4:	01cffe34 	movhi	r7,16376
   43af8:	004c45c0 	call	4c45c <__subdf3>
   43afc:	0198dbf4 	movhi	r6,25455
   43b00:	01cff4f4 	movhi	r7,16339
   43b04:	3190d844 	addi	r6,r6,17249
   43b08:	39e1e9c4 	addi	r7,r7,-30809
   43b0c:	1009883a 	mov	r4,r2
   43b10:	180b883a 	mov	r5,r3
   43b14:	004bd440 	call	4bd44 <__muldf3>
   43b18:	01a2d874 	movhi	r6,35681
   43b1c:	01cff1f4 	movhi	r7,16327
   43b20:	31b22cc4 	addi	r6,r6,-14157
   43b24:	39e28a04 	addi	r7,r7,-30168
   43b28:	180b883a 	mov	r5,r3
   43b2c:	1009883a 	mov	r4,r2
   43b30:	004b2400 	call	4b240 <__adddf3>
   43b34:	8009883a 	mov	r4,r16
   43b38:	1029883a 	mov	r20,r2
   43b3c:	1823883a 	mov	r17,r3
   43b40:	004cdd80 	call	4cdd8 <__floatsidf>
   43b44:	019427f4 	movhi	r6,20639
   43b48:	01cff4f4 	movhi	r7,16339
   43b4c:	319e7ec4 	addi	r6,r6,31227
   43b50:	39d104c4 	addi	r7,r7,17427
   43b54:	1009883a 	mov	r4,r2
   43b58:	180b883a 	mov	r5,r3
   43b5c:	004bd440 	call	4bd44 <__muldf3>
   43b60:	100d883a 	mov	r6,r2
   43b64:	180f883a 	mov	r7,r3
   43b68:	a009883a 	mov	r4,r20
   43b6c:	880b883a 	mov	r5,r17
   43b70:	004b2400 	call	4b240 <__adddf3>
   43b74:	1009883a 	mov	r4,r2
   43b78:	180b883a 	mov	r5,r3
   43b7c:	1029883a 	mov	r20,r2
   43b80:	1823883a 	mov	r17,r3
   43b84:	004cd580 	call	4cd58 <__fixdfsi>
   43b88:	000d883a 	mov	r6,zero
   43b8c:	000f883a 	mov	r7,zero
   43b90:	a009883a 	mov	r4,r20
   43b94:	880b883a 	mov	r5,r17
   43b98:	d8800515 	stw	r2,20(sp)
   43b9c:	004bc500 	call	4bc50 <__ledf2>
   43ba0:	10028716 	blt	r2,zero,445c0 <_dtoa_r+0xc88>
   43ba4:	d8c00517 	ldw	r3,20(sp)
   43ba8:	00800584 	movi	r2,22
   43bac:	10c27536 	bltu	r2,r3,44584 <_dtoa_r+0xc4c>
   43bb0:	180490fa 	slli	r2,r3,3
   43bb4:	00c00174 	movhi	r3,5
   43bb8:	18fe6d04 	addi	r3,r3,-1612
   43bbc:	1885883a 	add	r2,r3,r2
   43bc0:	11000017 	ldw	r4,0(r2)
   43bc4:	11400117 	ldw	r5,4(r2)
   43bc8:	900d883a 	mov	r6,r18
   43bcc:	980f883a 	mov	r7,r19
   43bd0:	004bb740 	call	4bb74 <__gedf2>
   43bd4:	00828d0e 	bge	zero,r2,4460c <_dtoa_r+0xcd4>
   43bd8:	d9000517 	ldw	r4,20(sp)
   43bdc:	d8000e15 	stw	zero,56(sp)
   43be0:	213fffc4 	addi	r4,r4,-1
   43be4:	d9000515 	stw	r4,20(sp)
   43be8:	b42dc83a 	sub	r22,r22,r16
   43bec:	b5bfffc4 	addi	r22,r22,-1
   43bf0:	b0026f16 	blt	r22,zero,445b0 <_dtoa_r+0xc78>
   43bf4:	d8000815 	stw	zero,32(sp)
   43bf8:	d9c00517 	ldw	r7,20(sp)
   43bfc:	38026416 	blt	r7,zero,44590 <_dtoa_r+0xc58>
   43c00:	b1ed883a 	add	r22,r22,r7
   43c04:	d9c00d15 	stw	r7,52(sp)
   43c08:	d8000a15 	stw	zero,40(sp)
   43c0c:	d9800317 	ldw	r6,12(sp)
   43c10:	00800244 	movi	r2,9
   43c14:	11811436 	bltu	r2,r6,44068 <_dtoa_r+0x730>
   43c18:	00800144 	movi	r2,5
   43c1c:	1184e10e 	bge	r2,r6,44fa4 <_dtoa_r+0x166c>
   43c20:	31bfff04 	addi	r6,r6,-4
   43c24:	d9800315 	stw	r6,12(sp)
   43c28:	0023883a 	mov	r17,zero
   43c2c:	d9800317 	ldw	r6,12(sp)
   43c30:	008000c4 	movi	r2,3
   43c34:	30836726 	beq	r6,r2,449d4 <_dtoa_r+0x109c>
   43c38:	1183410e 	bge	r2,r6,44940 <_dtoa_r+0x1008>
   43c3c:	d9c00317 	ldw	r7,12(sp)
   43c40:	00800104 	movi	r2,4
   43c44:	38827c26 	beq	r7,r2,44638 <_dtoa_r+0xd00>
   43c48:	00800144 	movi	r2,5
   43c4c:	3884c41e 	bne	r7,r2,44f60 <_dtoa_r+0x1628>
   43c50:	00800044 	movi	r2,1
   43c54:	d8800b15 	stw	r2,44(sp)
   43c58:	d8c00517 	ldw	r3,20(sp)
   43c5c:	d9002217 	ldw	r4,136(sp)
   43c60:	1907883a 	add	r3,r3,r4
   43c64:	19800044 	addi	r6,r3,1
   43c68:	d8c00c15 	stw	r3,48(sp)
   43c6c:	d9800615 	stw	r6,24(sp)
   43c70:	0183a40e 	bge	zero,r6,44b04 <_dtoa_r+0x11cc>
   43c74:	d9800617 	ldw	r6,24(sp)
   43c78:	3021883a 	mov	r16,r6
   43c7c:	e0001115 	stw	zero,68(fp)
   43c80:	008005c4 	movi	r2,23
   43c84:	1184c92e 	bgeu	r2,r6,44fac <_dtoa_r+0x1674>
   43c88:	00c00044 	movi	r3,1
   43c8c:	00800104 	movi	r2,4
   43c90:	1085883a 	add	r2,r2,r2
   43c94:	11000504 	addi	r4,r2,20
   43c98:	180b883a 	mov	r5,r3
   43c9c:	18c00044 	addi	r3,r3,1
   43ca0:	313ffb2e 	bgeu	r6,r4,43c90 <__alt_data_end+0xfffdcb90>
   43ca4:	e1401115 	stw	r5,68(fp)
   43ca8:	e009883a 	mov	r4,fp
   43cac:	0046fd40 	call	46fd4 <_Balloc>
   43cb0:	d8800715 	stw	r2,28(sp)
   43cb4:	e0801015 	stw	r2,64(fp)
   43cb8:	00800384 	movi	r2,14
   43cbc:	1400f736 	bltu	r2,r16,4409c <_dtoa_r+0x764>
   43cc0:	8800f626 	beq	r17,zero,4409c <_dtoa_r+0x764>
   43cc4:	d9c00517 	ldw	r7,20(sp)
   43cc8:	01c39a0e 	bge	zero,r7,44b34 <_dtoa_r+0x11fc>
   43ccc:	388003cc 	andi	r2,r7,15
   43cd0:	100490fa 	slli	r2,r2,3
   43cd4:	382bd13a 	srai	r21,r7,4
   43cd8:	00c00174 	movhi	r3,5
   43cdc:	18fe6d04 	addi	r3,r3,-1612
   43ce0:	1885883a 	add	r2,r3,r2
   43ce4:	a8c0040c 	andi	r3,r21,16
   43ce8:	12400017 	ldw	r9,0(r2)
   43cec:	12000117 	ldw	r8,4(r2)
   43cf0:	18037926 	beq	r3,zero,44ad8 <_dtoa_r+0x11a0>
   43cf4:	00800174 	movhi	r2,5
   43cf8:	10be6304 	addi	r2,r2,-1652
   43cfc:	11800817 	ldw	r6,32(r2)
   43d00:	11c00917 	ldw	r7,36(r2)
   43d04:	9009883a 	mov	r4,r18
   43d08:	980b883a 	mov	r5,r19
   43d0c:	da001715 	stw	r8,92(sp)
   43d10:	da401615 	stw	r9,88(sp)
   43d14:	004052c0 	call	4052c <__divdf3>
   43d18:	da001717 	ldw	r8,92(sp)
   43d1c:	da401617 	ldw	r9,88(sp)
   43d20:	ad4003cc 	andi	r21,r21,15
   43d24:	040000c4 	movi	r16,3
   43d28:	1023883a 	mov	r17,r2
   43d2c:	1829883a 	mov	r20,r3
   43d30:	a8001126 	beq	r21,zero,43d78 <_dtoa_r+0x440>
   43d34:	05c00174 	movhi	r23,5
   43d38:	bdfe6304 	addi	r23,r23,-1652
   43d3c:	4805883a 	mov	r2,r9
   43d40:	4007883a 	mov	r3,r8
   43d44:	a980004c 	andi	r6,r21,1
   43d48:	1009883a 	mov	r4,r2
   43d4c:	a82bd07a 	srai	r21,r21,1
   43d50:	180b883a 	mov	r5,r3
   43d54:	30000426 	beq	r6,zero,43d68 <_dtoa_r+0x430>
   43d58:	b9800017 	ldw	r6,0(r23)
   43d5c:	b9c00117 	ldw	r7,4(r23)
   43d60:	84000044 	addi	r16,r16,1
   43d64:	004bd440 	call	4bd44 <__muldf3>
   43d68:	bdc00204 	addi	r23,r23,8
   43d6c:	a83ff51e 	bne	r21,zero,43d44 <__alt_data_end+0xfffdcc44>
   43d70:	1013883a 	mov	r9,r2
   43d74:	1811883a 	mov	r8,r3
   43d78:	480d883a 	mov	r6,r9
   43d7c:	400f883a 	mov	r7,r8
   43d80:	8809883a 	mov	r4,r17
   43d84:	a00b883a 	mov	r5,r20
   43d88:	004052c0 	call	4052c <__divdf3>
   43d8c:	d8800f15 	stw	r2,60(sp)
   43d90:	d8c01015 	stw	r3,64(sp)
   43d94:	d8c00e17 	ldw	r3,56(sp)
   43d98:	18000626 	beq	r3,zero,43db4 <_dtoa_r+0x47c>
   43d9c:	d9000f17 	ldw	r4,60(sp)
   43da0:	d9401017 	ldw	r5,64(sp)
   43da4:	000d883a 	mov	r6,zero
   43da8:	01cffc34 	movhi	r7,16368
   43dac:	004bc500 	call	4bc50 <__ledf2>
   43db0:	10040b16 	blt	r2,zero,44de0 <_dtoa_r+0x14a8>
   43db4:	8009883a 	mov	r4,r16
   43db8:	004cdd80 	call	4cdd8 <__floatsidf>
   43dbc:	d9800f17 	ldw	r6,60(sp)
   43dc0:	d9c01017 	ldw	r7,64(sp)
   43dc4:	1009883a 	mov	r4,r2
   43dc8:	180b883a 	mov	r5,r3
   43dcc:	004bd440 	call	4bd44 <__muldf3>
   43dd0:	000d883a 	mov	r6,zero
   43dd4:	01d00734 	movhi	r7,16412
   43dd8:	1009883a 	mov	r4,r2
   43ddc:	180b883a 	mov	r5,r3
   43de0:	004b2400 	call	4b240 <__adddf3>
   43de4:	1021883a 	mov	r16,r2
   43de8:	d8800617 	ldw	r2,24(sp)
   43dec:	047f3034 	movhi	r17,64704
   43df0:	1c63883a 	add	r17,r3,r17
   43df4:	10031826 	beq	r2,zero,44a58 <_dtoa_r+0x1120>
   43df8:	d8c00517 	ldw	r3,20(sp)
   43dfc:	db000617 	ldw	r12,24(sp)
   43e00:	d8c01315 	stw	r3,76(sp)
   43e04:	d9000b17 	ldw	r4,44(sp)
   43e08:	20038f26 	beq	r4,zero,44c48 <_dtoa_r+0x1310>
   43e0c:	60bfffc4 	addi	r2,r12,-1
   43e10:	100490fa 	slli	r2,r2,3
   43e14:	00c00174 	movhi	r3,5
   43e18:	18fe6d04 	addi	r3,r3,-1612
   43e1c:	1885883a 	add	r2,r3,r2
   43e20:	11800017 	ldw	r6,0(r2)
   43e24:	11c00117 	ldw	r7,4(r2)
   43e28:	d8800717 	ldw	r2,28(sp)
   43e2c:	0009883a 	mov	r4,zero
   43e30:	014ff834 	movhi	r5,16352
   43e34:	db001615 	stw	r12,88(sp)
   43e38:	15c00044 	addi	r23,r2,1
   43e3c:	004052c0 	call	4052c <__divdf3>
   43e40:	800d883a 	mov	r6,r16
   43e44:	880f883a 	mov	r7,r17
   43e48:	1009883a 	mov	r4,r2
   43e4c:	180b883a 	mov	r5,r3
   43e50:	004c45c0 	call	4c45c <__subdf3>
   43e54:	d9401017 	ldw	r5,64(sp)
   43e58:	d9000f17 	ldw	r4,60(sp)
   43e5c:	102b883a 	mov	r21,r2
   43e60:	d8c01215 	stw	r3,72(sp)
   43e64:	004cd580 	call	4cd58 <__fixdfsi>
   43e68:	1009883a 	mov	r4,r2
   43e6c:	1029883a 	mov	r20,r2
   43e70:	004cdd80 	call	4cdd8 <__floatsidf>
   43e74:	d9000f17 	ldw	r4,60(sp)
   43e78:	d9401017 	ldw	r5,64(sp)
   43e7c:	100d883a 	mov	r6,r2
   43e80:	180f883a 	mov	r7,r3
   43e84:	004c45c0 	call	4c45c <__subdf3>
   43e88:	1823883a 	mov	r17,r3
   43e8c:	d8c00717 	ldw	r3,28(sp)
   43e90:	d9401217 	ldw	r5,72(sp)
   43e94:	a2000c04 	addi	r8,r20,48
   43e98:	1021883a 	mov	r16,r2
   43e9c:	1a000005 	stb	r8,0(r3)
   43ea0:	800d883a 	mov	r6,r16
   43ea4:	880f883a 	mov	r7,r17
   43ea8:	a809883a 	mov	r4,r21
   43eac:	4029883a 	mov	r20,r8
   43eb0:	004bb740 	call	4bb74 <__gedf2>
   43eb4:	00841d16 	blt	zero,r2,44f2c <_dtoa_r+0x15f4>
   43eb8:	800d883a 	mov	r6,r16
   43ebc:	880f883a 	mov	r7,r17
   43ec0:	0009883a 	mov	r4,zero
   43ec4:	014ffc34 	movhi	r5,16368
   43ec8:	004c45c0 	call	4c45c <__subdf3>
   43ecc:	d9401217 	ldw	r5,72(sp)
   43ed0:	100d883a 	mov	r6,r2
   43ed4:	180f883a 	mov	r7,r3
   43ed8:	a809883a 	mov	r4,r21
   43edc:	004bb740 	call	4bb74 <__gedf2>
   43ee0:	db001617 	ldw	r12,88(sp)
   43ee4:	00840e16 	blt	zero,r2,44f20 <_dtoa_r+0x15e8>
   43ee8:	00800044 	movi	r2,1
   43eec:	13006b0e 	bge	r2,r12,4409c <_dtoa_r+0x764>
   43ef0:	d9000717 	ldw	r4,28(sp)
   43ef4:	dd800f15 	stw	r22,60(sp)
   43ef8:	dcc01015 	stw	r19,64(sp)
   43efc:	2319883a 	add	r12,r4,r12
   43f00:	dcc01217 	ldw	r19,72(sp)
   43f04:	602d883a 	mov	r22,r12
   43f08:	dc801215 	stw	r18,72(sp)
   43f0c:	b825883a 	mov	r18,r23
   43f10:	00000906 	br	43f38 <_dtoa_r+0x600>
   43f14:	004c45c0 	call	4c45c <__subdf3>
   43f18:	a80d883a 	mov	r6,r21
   43f1c:	980f883a 	mov	r7,r19
   43f20:	1009883a 	mov	r4,r2
   43f24:	180b883a 	mov	r5,r3
   43f28:	004bc500 	call	4bc50 <__ledf2>
   43f2c:	1003e816 	blt	r2,zero,44ed0 <_dtoa_r+0x1598>
   43f30:	b825883a 	mov	r18,r23
   43f34:	bd83e926 	beq	r23,r22,44edc <_dtoa_r+0x15a4>
   43f38:	a809883a 	mov	r4,r21
   43f3c:	980b883a 	mov	r5,r19
   43f40:	000d883a 	mov	r6,zero
   43f44:	01d00934 	movhi	r7,16420
   43f48:	004bd440 	call	4bd44 <__muldf3>
   43f4c:	000d883a 	mov	r6,zero
   43f50:	01d00934 	movhi	r7,16420
   43f54:	8009883a 	mov	r4,r16
   43f58:	880b883a 	mov	r5,r17
   43f5c:	102b883a 	mov	r21,r2
   43f60:	1827883a 	mov	r19,r3
   43f64:	004bd440 	call	4bd44 <__muldf3>
   43f68:	180b883a 	mov	r5,r3
   43f6c:	1009883a 	mov	r4,r2
   43f70:	1821883a 	mov	r16,r3
   43f74:	1023883a 	mov	r17,r2
   43f78:	004cd580 	call	4cd58 <__fixdfsi>
   43f7c:	1009883a 	mov	r4,r2
   43f80:	1029883a 	mov	r20,r2
   43f84:	004cdd80 	call	4cdd8 <__floatsidf>
   43f88:	8809883a 	mov	r4,r17
   43f8c:	800b883a 	mov	r5,r16
   43f90:	100d883a 	mov	r6,r2
   43f94:	180f883a 	mov	r7,r3
   43f98:	004c45c0 	call	4c45c <__subdf3>
   43f9c:	a5000c04 	addi	r20,r20,48
   43fa0:	a80d883a 	mov	r6,r21
   43fa4:	980f883a 	mov	r7,r19
   43fa8:	1009883a 	mov	r4,r2
   43fac:	180b883a 	mov	r5,r3
   43fb0:	95000005 	stb	r20,0(r18)
   43fb4:	1021883a 	mov	r16,r2
   43fb8:	1823883a 	mov	r17,r3
   43fbc:	004bc500 	call	4bc50 <__ledf2>
   43fc0:	bdc00044 	addi	r23,r23,1
   43fc4:	800d883a 	mov	r6,r16
   43fc8:	880f883a 	mov	r7,r17
   43fcc:	0009883a 	mov	r4,zero
   43fd0:	014ffc34 	movhi	r5,16368
   43fd4:	103fcf0e 	bge	r2,zero,43f14 <__alt_data_end+0xfffdce14>
   43fd8:	d8c01317 	ldw	r3,76(sp)
   43fdc:	d8c00515 	stw	r3,20(sp)
   43fe0:	d9400917 	ldw	r5,36(sp)
   43fe4:	e009883a 	mov	r4,fp
   43fe8:	004707c0 	call	4707c <_Bfree>
   43fec:	d9000517 	ldw	r4,20(sp)
   43ff0:	d9802317 	ldw	r6,140(sp)
   43ff4:	d9c02517 	ldw	r7,148(sp)
   43ff8:	b8000005 	stb	zero,0(r23)
   43ffc:	20800044 	addi	r2,r4,1
   44000:	30800015 	stw	r2,0(r6)
   44004:	3802aa26 	beq	r7,zero,44ab0 <_dtoa_r+0x1178>
   44008:	3dc00015 	stw	r23,0(r7)
   4400c:	d8800717 	ldw	r2,28(sp)
   44010:	003e7906 	br	439f8 <__alt_data_end+0xfffdc8f8>
   44014:	00800434 	movhi	r2,16
   44018:	10bfffc4 	addi	r2,r2,-1
   4401c:	88a2703a 	and	r17,r17,r2
   44020:	883e851e 	bne	r17,zero,43a38 <__alt_data_end+0xfffdc938>
   44024:	00800174 	movhi	r2,5
   44028:	10be4e04 	addi	r2,r2,-1736
   4402c:	003e8406 	br	43a40 <__alt_data_end+0xfffdc940>
   44030:	10c00204 	addi	r3,r2,8
   44034:	003e8706 	br	43a54 <__alt_data_end+0xfffdc954>
   44038:	01400434 	movhi	r5,16
   4403c:	297fffc4 	addi	r5,r5,-1
   44040:	994a703a 	and	r5,r19,r5
   44044:	9009883a 	mov	r4,r18
   44048:	843f0044 	addi	r16,r16,-1023
   4404c:	294ffc34 	orhi	r5,r5,16368
   44050:	dd800217 	ldw	r22,8(sp)
   44054:	d8001115 	stw	zero,68(sp)
   44058:	003ea506 	br	43af0 <__alt_data_end+0xfffdc9f0>
   4405c:	00800174 	movhi	r2,5
   44060:	10be4504 	addi	r2,r2,-1772
   44064:	003e6406 	br	439f8 <__alt_data_end+0xfffdc8f8>
   44068:	e0001115 	stw	zero,68(fp)
   4406c:	000b883a 	mov	r5,zero
   44070:	e009883a 	mov	r4,fp
   44074:	0046fd40 	call	46fd4 <_Balloc>
   44078:	01bfffc4 	movi	r6,-1
   4407c:	01c00044 	movi	r7,1
   44080:	d8800715 	stw	r2,28(sp)
   44084:	d9800c15 	stw	r6,48(sp)
   44088:	e0801015 	stw	r2,64(fp)
   4408c:	d8000315 	stw	zero,12(sp)
   44090:	d9c00b15 	stw	r7,44(sp)
   44094:	d9800615 	stw	r6,24(sp)
   44098:	d8002215 	stw	zero,136(sp)
   4409c:	d8800117 	ldw	r2,4(sp)
   440a0:	10008916 	blt	r2,zero,442c8 <_dtoa_r+0x990>
   440a4:	d9000517 	ldw	r4,20(sp)
   440a8:	00c00384 	movi	r3,14
   440ac:	19008616 	blt	r3,r4,442c8 <_dtoa_r+0x990>
   440b0:	200490fa 	slli	r2,r4,3
   440b4:	00c00174 	movhi	r3,5
   440b8:	d9802217 	ldw	r6,136(sp)
   440bc:	18fe6d04 	addi	r3,r3,-1612
   440c0:	1885883a 	add	r2,r3,r2
   440c4:	14000017 	ldw	r16,0(r2)
   440c8:	14400117 	ldw	r17,4(r2)
   440cc:	30016316 	blt	r6,zero,4465c <_dtoa_r+0xd24>
   440d0:	800d883a 	mov	r6,r16
   440d4:	880f883a 	mov	r7,r17
   440d8:	9009883a 	mov	r4,r18
   440dc:	980b883a 	mov	r5,r19
   440e0:	004052c0 	call	4052c <__divdf3>
   440e4:	180b883a 	mov	r5,r3
   440e8:	1009883a 	mov	r4,r2
   440ec:	004cd580 	call	4cd58 <__fixdfsi>
   440f0:	1009883a 	mov	r4,r2
   440f4:	102b883a 	mov	r21,r2
   440f8:	004cdd80 	call	4cdd8 <__floatsidf>
   440fc:	800d883a 	mov	r6,r16
   44100:	880f883a 	mov	r7,r17
   44104:	1009883a 	mov	r4,r2
   44108:	180b883a 	mov	r5,r3
   4410c:	004bd440 	call	4bd44 <__muldf3>
   44110:	100d883a 	mov	r6,r2
   44114:	180f883a 	mov	r7,r3
   44118:	9009883a 	mov	r4,r18
   4411c:	980b883a 	mov	r5,r19
   44120:	004c45c0 	call	4c45c <__subdf3>
   44124:	d9c00717 	ldw	r7,28(sp)
   44128:	1009883a 	mov	r4,r2
   4412c:	a8800c04 	addi	r2,r21,48
   44130:	38800005 	stb	r2,0(r7)
   44134:	3dc00044 	addi	r23,r7,1
   44138:	d9c00617 	ldw	r7,24(sp)
   4413c:	01800044 	movi	r6,1
   44140:	180b883a 	mov	r5,r3
   44144:	2005883a 	mov	r2,r4
   44148:	39803826 	beq	r7,r6,4422c <_dtoa_r+0x8f4>
   4414c:	000d883a 	mov	r6,zero
   44150:	01d00934 	movhi	r7,16420
   44154:	004bd440 	call	4bd44 <__muldf3>
   44158:	000d883a 	mov	r6,zero
   4415c:	000f883a 	mov	r7,zero
   44160:	1009883a 	mov	r4,r2
   44164:	180b883a 	mov	r5,r3
   44168:	1025883a 	mov	r18,r2
   4416c:	1827883a 	mov	r19,r3
   44170:	004baec0 	call	4baec <__eqdf2>
   44174:	103f9a26 	beq	r2,zero,43fe0 <__alt_data_end+0xfffdcee0>
   44178:	d9c00617 	ldw	r7,24(sp)
   4417c:	d8c00717 	ldw	r3,28(sp)
   44180:	b829883a 	mov	r20,r23
   44184:	38bfffc4 	addi	r2,r7,-1
   44188:	18ad883a 	add	r22,r3,r2
   4418c:	00000a06 	br	441b8 <_dtoa_r+0x880>
   44190:	004bd440 	call	4bd44 <__muldf3>
   44194:	000d883a 	mov	r6,zero
   44198:	000f883a 	mov	r7,zero
   4419c:	1009883a 	mov	r4,r2
   441a0:	180b883a 	mov	r5,r3
   441a4:	1025883a 	mov	r18,r2
   441a8:	1827883a 	mov	r19,r3
   441ac:	b829883a 	mov	r20,r23
   441b0:	004baec0 	call	4baec <__eqdf2>
   441b4:	103f8a26 	beq	r2,zero,43fe0 <__alt_data_end+0xfffdcee0>
   441b8:	800d883a 	mov	r6,r16
   441bc:	880f883a 	mov	r7,r17
   441c0:	9009883a 	mov	r4,r18
   441c4:	980b883a 	mov	r5,r19
   441c8:	004052c0 	call	4052c <__divdf3>
   441cc:	180b883a 	mov	r5,r3
   441d0:	1009883a 	mov	r4,r2
   441d4:	004cd580 	call	4cd58 <__fixdfsi>
   441d8:	1009883a 	mov	r4,r2
   441dc:	102b883a 	mov	r21,r2
   441e0:	004cdd80 	call	4cdd8 <__floatsidf>
   441e4:	800d883a 	mov	r6,r16
   441e8:	880f883a 	mov	r7,r17
   441ec:	1009883a 	mov	r4,r2
   441f0:	180b883a 	mov	r5,r3
   441f4:	004bd440 	call	4bd44 <__muldf3>
   441f8:	100d883a 	mov	r6,r2
   441fc:	180f883a 	mov	r7,r3
   44200:	9009883a 	mov	r4,r18
   44204:	980b883a 	mov	r5,r19
   44208:	004c45c0 	call	4c45c <__subdf3>
   4420c:	aa000c04 	addi	r8,r21,48
   44210:	a2000005 	stb	r8,0(r20)
   44214:	000d883a 	mov	r6,zero
   44218:	01d00934 	movhi	r7,16420
   4421c:	1009883a 	mov	r4,r2
   44220:	180b883a 	mov	r5,r3
   44224:	a5c00044 	addi	r23,r20,1
   44228:	b53fd91e 	bne	r22,r20,44190 <__alt_data_end+0xfffdd090>
   4422c:	100d883a 	mov	r6,r2
   44230:	180f883a 	mov	r7,r3
   44234:	1009883a 	mov	r4,r2
   44238:	180b883a 	mov	r5,r3
   4423c:	004b2400 	call	4b240 <__adddf3>
   44240:	100d883a 	mov	r6,r2
   44244:	180f883a 	mov	r7,r3
   44248:	8009883a 	mov	r4,r16
   4424c:	880b883a 	mov	r5,r17
   44250:	1027883a 	mov	r19,r2
   44254:	1825883a 	mov	r18,r3
   44258:	004bc500 	call	4bc50 <__ledf2>
   4425c:	10000816 	blt	r2,zero,44280 <_dtoa_r+0x948>
   44260:	980d883a 	mov	r6,r19
   44264:	900f883a 	mov	r7,r18
   44268:	8009883a 	mov	r4,r16
   4426c:	880b883a 	mov	r5,r17
   44270:	004baec0 	call	4baec <__eqdf2>
   44274:	103f5a1e 	bne	r2,zero,43fe0 <__alt_data_end+0xfffdcee0>
   44278:	ad40004c 	andi	r21,r21,1
   4427c:	a83f5826 	beq	r21,zero,43fe0 <__alt_data_end+0xfffdcee0>
   44280:	bd3fffc3 	ldbu	r20,-1(r23)
   44284:	b8bfffc4 	addi	r2,r23,-1
   44288:	1007883a 	mov	r3,r2
   4428c:	01400e44 	movi	r5,57
   44290:	d9800717 	ldw	r6,28(sp)
   44294:	00000506 	br	442ac <_dtoa_r+0x974>
   44298:	18ffffc4 	addi	r3,r3,-1
   4429c:	11824726 	beq	r2,r6,44bbc <_dtoa_r+0x1284>
   442a0:	1d000003 	ldbu	r20,0(r3)
   442a4:	102f883a 	mov	r23,r2
   442a8:	10bfffc4 	addi	r2,r2,-1
   442ac:	a1003fcc 	andi	r4,r20,255
   442b0:	2100201c 	xori	r4,r4,128
   442b4:	213fe004 	addi	r4,r4,-128
   442b8:	217ff726 	beq	r4,r5,44298 <__alt_data_end+0xfffdd198>
   442bc:	a2000044 	addi	r8,r20,1
   442c0:	12000005 	stb	r8,0(r2)
   442c4:	003f4606 	br	43fe0 <__alt_data_end+0xfffdcee0>
   442c8:	d9000b17 	ldw	r4,44(sp)
   442cc:	2000c826 	beq	r4,zero,445f0 <_dtoa_r+0xcb8>
   442d0:	d9800317 	ldw	r6,12(sp)
   442d4:	00c00044 	movi	r3,1
   442d8:	1980f90e 	bge	r3,r6,446c0 <_dtoa_r+0xd88>
   442dc:	d8800617 	ldw	r2,24(sp)
   442e0:	d8c00a17 	ldw	r3,40(sp)
   442e4:	157fffc4 	addi	r21,r2,-1
   442e8:	1d41f316 	blt	r3,r21,44ab8 <_dtoa_r+0x1180>
   442ec:	1d6bc83a 	sub	r21,r3,r21
   442f0:	d9c00617 	ldw	r7,24(sp)
   442f4:	3802aa16 	blt	r7,zero,44da0 <_dtoa_r+0x1468>
   442f8:	dd000817 	ldw	r20,32(sp)
   442fc:	d8800617 	ldw	r2,24(sp)
   44300:	d8c00817 	ldw	r3,32(sp)
   44304:	01400044 	movi	r5,1
   44308:	e009883a 	mov	r4,fp
   4430c:	1887883a 	add	r3,r3,r2
   44310:	d8c00815 	stw	r3,32(sp)
   44314:	b0ad883a 	add	r22,r22,r2
   44318:	00473e00 	call	473e0 <__i2b>
   4431c:	1023883a 	mov	r17,r2
   44320:	a0000826 	beq	r20,zero,44344 <_dtoa_r+0xa0c>
   44324:	0580070e 	bge	zero,r22,44344 <_dtoa_r+0xa0c>
   44328:	a005883a 	mov	r2,r20
   4432c:	b500b916 	blt	r22,r20,44614 <_dtoa_r+0xcdc>
   44330:	d9000817 	ldw	r4,32(sp)
   44334:	a0a9c83a 	sub	r20,r20,r2
   44338:	b0adc83a 	sub	r22,r22,r2
   4433c:	2089c83a 	sub	r4,r4,r2
   44340:	d9000815 	stw	r4,32(sp)
   44344:	d9800a17 	ldw	r6,40(sp)
   44348:	0181810e 	bge	zero,r6,44950 <_dtoa_r+0x1018>
   4434c:	d9c00b17 	ldw	r7,44(sp)
   44350:	3800b326 	beq	r7,zero,44620 <_dtoa_r+0xce8>
   44354:	a800b226 	beq	r21,zero,44620 <_dtoa_r+0xce8>
   44358:	880b883a 	mov	r5,r17
   4435c:	a80d883a 	mov	r6,r21
   44360:	e009883a 	mov	r4,fp
   44364:	00476140 	call	47614 <__pow5mult>
   44368:	d9800917 	ldw	r6,36(sp)
   4436c:	100b883a 	mov	r5,r2
   44370:	e009883a 	mov	r4,fp
   44374:	1023883a 	mov	r17,r2
   44378:	004741c0 	call	4741c <__multiply>
   4437c:	1021883a 	mov	r16,r2
   44380:	d8800a17 	ldw	r2,40(sp)
   44384:	d9400917 	ldw	r5,36(sp)
   44388:	e009883a 	mov	r4,fp
   4438c:	1545c83a 	sub	r2,r2,r21
   44390:	d8800a15 	stw	r2,40(sp)
   44394:	004707c0 	call	4707c <_Bfree>
   44398:	d8c00a17 	ldw	r3,40(sp)
   4439c:	18009f1e 	bne	r3,zero,4461c <_dtoa_r+0xce4>
   443a0:	05c00044 	movi	r23,1
   443a4:	e009883a 	mov	r4,fp
   443a8:	b80b883a 	mov	r5,r23
   443ac:	00473e00 	call	473e0 <__i2b>
   443b0:	d9000d17 	ldw	r4,52(sp)
   443b4:	102b883a 	mov	r21,r2
   443b8:	2000ce26 	beq	r4,zero,446f4 <_dtoa_r+0xdbc>
   443bc:	200d883a 	mov	r6,r4
   443c0:	100b883a 	mov	r5,r2
   443c4:	e009883a 	mov	r4,fp
   443c8:	00476140 	call	47614 <__pow5mult>
   443cc:	d9800317 	ldw	r6,12(sp)
   443d0:	102b883a 	mov	r21,r2
   443d4:	b981810e 	bge	r23,r6,449dc <_dtoa_r+0x10a4>
   443d8:	0027883a 	mov	r19,zero
   443dc:	a8800417 	ldw	r2,16(r21)
   443e0:	05c00804 	movi	r23,32
   443e4:	10800104 	addi	r2,r2,4
   443e8:	1085883a 	add	r2,r2,r2
   443ec:	1085883a 	add	r2,r2,r2
   443f0:	a885883a 	add	r2,r21,r2
   443f4:	11000017 	ldw	r4,0(r2)
   443f8:	00472c80 	call	472c8 <__hi0bits>
   443fc:	b885c83a 	sub	r2,r23,r2
   44400:	1585883a 	add	r2,r2,r22
   44404:	108007cc 	andi	r2,r2,31
   44408:	1000b326 	beq	r2,zero,446d8 <_dtoa_r+0xda0>
   4440c:	00c00804 	movi	r3,32
   44410:	1887c83a 	sub	r3,r3,r2
   44414:	01000104 	movi	r4,4
   44418:	20c2cd0e 	bge	r4,r3,44f50 <_dtoa_r+0x1618>
   4441c:	00c00704 	movi	r3,28
   44420:	1885c83a 	sub	r2,r3,r2
   44424:	d8c00817 	ldw	r3,32(sp)
   44428:	a0a9883a 	add	r20,r20,r2
   4442c:	b0ad883a 	add	r22,r22,r2
   44430:	1887883a 	add	r3,r3,r2
   44434:	d8c00815 	stw	r3,32(sp)
   44438:	d9800817 	ldw	r6,32(sp)
   4443c:	0180040e 	bge	zero,r6,44450 <_dtoa_r+0xb18>
   44440:	800b883a 	mov	r5,r16
   44444:	e009883a 	mov	r4,fp
   44448:	00477540 	call	47754 <__lshift>
   4444c:	1021883a 	mov	r16,r2
   44450:	0580050e 	bge	zero,r22,44468 <_dtoa_r+0xb30>
   44454:	a80b883a 	mov	r5,r21
   44458:	b00d883a 	mov	r6,r22
   4445c:	e009883a 	mov	r4,fp
   44460:	00477540 	call	47754 <__lshift>
   44464:	102b883a 	mov	r21,r2
   44468:	d9c00e17 	ldw	r7,56(sp)
   4446c:	3801211e 	bne	r7,zero,448f4 <_dtoa_r+0xfbc>
   44470:	d9800617 	ldw	r6,24(sp)
   44474:	0181380e 	bge	zero,r6,44958 <_dtoa_r+0x1020>
   44478:	d8c00b17 	ldw	r3,44(sp)
   4447c:	1800ab1e 	bne	r3,zero,4472c <_dtoa_r+0xdf4>
   44480:	dc800717 	ldw	r18,28(sp)
   44484:	dcc00617 	ldw	r19,24(sp)
   44488:	9029883a 	mov	r20,r18
   4448c:	00000206 	br	44498 <_dtoa_r+0xb60>
   44490:	00470a40 	call	470a4 <__multadd>
   44494:	1021883a 	mov	r16,r2
   44498:	a80b883a 	mov	r5,r21
   4449c:	8009883a 	mov	r4,r16
   444a0:	00437380 	call	43738 <quorem>
   444a4:	10800c04 	addi	r2,r2,48
   444a8:	90800005 	stb	r2,0(r18)
   444ac:	94800044 	addi	r18,r18,1
   444b0:	9507c83a 	sub	r3,r18,r20
   444b4:	000f883a 	mov	r7,zero
   444b8:	01800284 	movi	r6,10
   444bc:	800b883a 	mov	r5,r16
   444c0:	e009883a 	mov	r4,fp
   444c4:	1cfff216 	blt	r3,r19,44490 <__alt_data_end+0xfffdd390>
   444c8:	1011883a 	mov	r8,r2
   444cc:	d8800617 	ldw	r2,24(sp)
   444d0:	0082370e 	bge	zero,r2,44db0 <_dtoa_r+0x1478>
   444d4:	d9000717 	ldw	r4,28(sp)
   444d8:	0025883a 	mov	r18,zero
   444dc:	20af883a 	add	r23,r4,r2
   444e0:	01800044 	movi	r6,1
   444e4:	800b883a 	mov	r5,r16
   444e8:	e009883a 	mov	r4,fp
   444ec:	da001715 	stw	r8,92(sp)
   444f0:	00477540 	call	47754 <__lshift>
   444f4:	a80b883a 	mov	r5,r21
   444f8:	1009883a 	mov	r4,r2
   444fc:	d8800915 	stw	r2,36(sp)
   44500:	004789c0 	call	4789c <__mcmp>
   44504:	da001717 	ldw	r8,92(sp)
   44508:	0081800e 	bge	zero,r2,44b0c <_dtoa_r+0x11d4>
   4450c:	b93fffc3 	ldbu	r4,-1(r23)
   44510:	b8bfffc4 	addi	r2,r23,-1
   44514:	1007883a 	mov	r3,r2
   44518:	01800e44 	movi	r6,57
   4451c:	d9c00717 	ldw	r7,28(sp)
   44520:	00000506 	br	44538 <_dtoa_r+0xc00>
   44524:	18ffffc4 	addi	r3,r3,-1
   44528:	11c12326 	beq	r2,r7,449b8 <_dtoa_r+0x1080>
   4452c:	19000003 	ldbu	r4,0(r3)
   44530:	102f883a 	mov	r23,r2
   44534:	10bfffc4 	addi	r2,r2,-1
   44538:	21403fcc 	andi	r5,r4,255
   4453c:	2940201c 	xori	r5,r5,128
   44540:	297fe004 	addi	r5,r5,-128
   44544:	29bff726 	beq	r5,r6,44524 <__alt_data_end+0xfffdd424>
   44548:	21000044 	addi	r4,r4,1
   4454c:	11000005 	stb	r4,0(r2)
   44550:	a80b883a 	mov	r5,r21
   44554:	e009883a 	mov	r4,fp
   44558:	004707c0 	call	4707c <_Bfree>
   4455c:	883ea026 	beq	r17,zero,43fe0 <__alt_data_end+0xfffdcee0>
   44560:	90000426 	beq	r18,zero,44574 <_dtoa_r+0xc3c>
   44564:	94400326 	beq	r18,r17,44574 <_dtoa_r+0xc3c>
   44568:	900b883a 	mov	r5,r18
   4456c:	e009883a 	mov	r4,fp
   44570:	004707c0 	call	4707c <_Bfree>
   44574:	880b883a 	mov	r5,r17
   44578:	e009883a 	mov	r4,fp
   4457c:	004707c0 	call	4707c <_Bfree>
   44580:	003e9706 	br	43fe0 <__alt_data_end+0xfffdcee0>
   44584:	01800044 	movi	r6,1
   44588:	d9800e15 	stw	r6,56(sp)
   4458c:	003d9606 	br	43be8 <__alt_data_end+0xfffdcae8>
   44590:	d8800817 	ldw	r2,32(sp)
   44594:	d8c00517 	ldw	r3,20(sp)
   44598:	d8000d15 	stw	zero,52(sp)
   4459c:	10c5c83a 	sub	r2,r2,r3
   445a0:	00c9c83a 	sub	r4,zero,r3
   445a4:	d8800815 	stw	r2,32(sp)
   445a8:	d9000a15 	stw	r4,40(sp)
   445ac:	003d9706 	br	43c0c <__alt_data_end+0xfffdcb0c>
   445b0:	05adc83a 	sub	r22,zero,r22
   445b4:	dd800815 	stw	r22,32(sp)
   445b8:	002d883a 	mov	r22,zero
   445bc:	003d8e06 	br	43bf8 <__alt_data_end+0xfffdcaf8>
   445c0:	d9000517 	ldw	r4,20(sp)
   445c4:	004cdd80 	call	4cdd8 <__floatsidf>
   445c8:	100d883a 	mov	r6,r2
   445cc:	180f883a 	mov	r7,r3
   445d0:	a009883a 	mov	r4,r20
   445d4:	880b883a 	mov	r5,r17
   445d8:	004baec0 	call	4baec <__eqdf2>
   445dc:	103d7126 	beq	r2,zero,43ba4 <__alt_data_end+0xfffdcaa4>
   445e0:	d9c00517 	ldw	r7,20(sp)
   445e4:	39ffffc4 	addi	r7,r7,-1
   445e8:	d9c00515 	stw	r7,20(sp)
   445ec:	003d6d06 	br	43ba4 <__alt_data_end+0xfffdcaa4>
   445f0:	dd400a17 	ldw	r21,40(sp)
   445f4:	dd000817 	ldw	r20,32(sp)
   445f8:	0023883a 	mov	r17,zero
   445fc:	003f4806 	br	44320 <__alt_data_end+0xfffdd220>
   44600:	10e3c83a 	sub	r17,r2,r3
   44604:	9448983a 	sll	r4,r18,r17
   44608:	003d3206 	br	43ad4 <__alt_data_end+0xfffdc9d4>
   4460c:	d8000e15 	stw	zero,56(sp)
   44610:	003d7506 	br	43be8 <__alt_data_end+0xfffdcae8>
   44614:	b005883a 	mov	r2,r22
   44618:	003f4506 	br	44330 <__alt_data_end+0xfffdd230>
   4461c:	dc000915 	stw	r16,36(sp)
   44620:	d9800a17 	ldw	r6,40(sp)
   44624:	d9400917 	ldw	r5,36(sp)
   44628:	e009883a 	mov	r4,fp
   4462c:	00476140 	call	47614 <__pow5mult>
   44630:	1021883a 	mov	r16,r2
   44634:	003f5a06 	br	443a0 <__alt_data_end+0xfffdd2a0>
   44638:	01c00044 	movi	r7,1
   4463c:	d9c00b15 	stw	r7,44(sp)
   44640:	d8802217 	ldw	r2,136(sp)
   44644:	0081280e 	bge	zero,r2,44ae8 <_dtoa_r+0x11b0>
   44648:	100d883a 	mov	r6,r2
   4464c:	1021883a 	mov	r16,r2
   44650:	d8800c15 	stw	r2,48(sp)
   44654:	d8800615 	stw	r2,24(sp)
   44658:	003d8806 	br	43c7c <__alt_data_end+0xfffdcb7c>
   4465c:	d8800617 	ldw	r2,24(sp)
   44660:	00be9b16 	blt	zero,r2,440d0 <__alt_data_end+0xfffdcfd0>
   44664:	10010f1e 	bne	r2,zero,44aa4 <_dtoa_r+0x116c>
   44668:	880b883a 	mov	r5,r17
   4466c:	000d883a 	mov	r6,zero
   44670:	01d00534 	movhi	r7,16404
   44674:	8009883a 	mov	r4,r16
   44678:	004bd440 	call	4bd44 <__muldf3>
   4467c:	900d883a 	mov	r6,r18
   44680:	980f883a 	mov	r7,r19
   44684:	1009883a 	mov	r4,r2
   44688:	180b883a 	mov	r5,r3
   4468c:	004bb740 	call	4bb74 <__gedf2>
   44690:	002b883a 	mov	r21,zero
   44694:	0023883a 	mov	r17,zero
   44698:	1000bf16 	blt	r2,zero,44998 <_dtoa_r+0x1060>
   4469c:	d9802217 	ldw	r6,136(sp)
   446a0:	ddc00717 	ldw	r23,28(sp)
   446a4:	018c303a 	nor	r6,zero,r6
   446a8:	d9800515 	stw	r6,20(sp)
   446ac:	a80b883a 	mov	r5,r21
   446b0:	e009883a 	mov	r4,fp
   446b4:	004707c0 	call	4707c <_Bfree>
   446b8:	883e4926 	beq	r17,zero,43fe0 <__alt_data_end+0xfffdcee0>
   446bc:	003fad06 	br	44574 <__alt_data_end+0xfffdd474>
   446c0:	d9c01117 	ldw	r7,68(sp)
   446c4:	3801bc26 	beq	r7,zero,44db8 <_dtoa_r+0x1480>
   446c8:	10810cc4 	addi	r2,r2,1075
   446cc:	dd400a17 	ldw	r21,40(sp)
   446d0:	dd000817 	ldw	r20,32(sp)
   446d4:	003f0a06 	br	44300 <__alt_data_end+0xfffdd200>
   446d8:	00800704 	movi	r2,28
   446dc:	d9000817 	ldw	r4,32(sp)
   446e0:	a0a9883a 	add	r20,r20,r2
   446e4:	b0ad883a 	add	r22,r22,r2
   446e8:	2089883a 	add	r4,r4,r2
   446ec:	d9000815 	stw	r4,32(sp)
   446f0:	003f5106 	br	44438 <__alt_data_end+0xfffdd338>
   446f4:	d8c00317 	ldw	r3,12(sp)
   446f8:	b8c1fc0e 	bge	r23,r3,44eec <_dtoa_r+0x15b4>
   446fc:	0027883a 	mov	r19,zero
   44700:	b805883a 	mov	r2,r23
   44704:	003f3e06 	br	44400 <__alt_data_end+0xfffdd300>
   44708:	880b883a 	mov	r5,r17
   4470c:	e009883a 	mov	r4,fp
   44710:	000f883a 	mov	r7,zero
   44714:	01800284 	movi	r6,10
   44718:	00470a40 	call	470a4 <__multadd>
   4471c:	d9000c17 	ldw	r4,48(sp)
   44720:	1023883a 	mov	r17,r2
   44724:	0102040e 	bge	zero,r4,44f38 <_dtoa_r+0x1600>
   44728:	d9000615 	stw	r4,24(sp)
   4472c:	0500050e 	bge	zero,r20,44744 <_dtoa_r+0xe0c>
   44730:	880b883a 	mov	r5,r17
   44734:	a00d883a 	mov	r6,r20
   44738:	e009883a 	mov	r4,fp
   4473c:	00477540 	call	47754 <__lshift>
   44740:	1023883a 	mov	r17,r2
   44744:	9801241e 	bne	r19,zero,44bd8 <_dtoa_r+0x12a0>
   44748:	8829883a 	mov	r20,r17
   4474c:	d9000617 	ldw	r4,24(sp)
   44750:	dcc00717 	ldw	r19,28(sp)
   44754:	9480004c 	andi	r18,r18,1
   44758:	20bfffc4 	addi	r2,r4,-1
   4475c:	9885883a 	add	r2,r19,r2
   44760:	d8800415 	stw	r2,16(sp)
   44764:	dc800615 	stw	r18,24(sp)
   44768:	a80b883a 	mov	r5,r21
   4476c:	8009883a 	mov	r4,r16
   44770:	00437380 	call	43738 <quorem>
   44774:	880b883a 	mov	r5,r17
   44778:	8009883a 	mov	r4,r16
   4477c:	102f883a 	mov	r23,r2
   44780:	004789c0 	call	4789c <__mcmp>
   44784:	a80b883a 	mov	r5,r21
   44788:	a00d883a 	mov	r6,r20
   4478c:	e009883a 	mov	r4,fp
   44790:	102d883a 	mov	r22,r2
   44794:	00478fc0 	call	478fc <__mdiff>
   44798:	1007883a 	mov	r3,r2
   4479c:	10800317 	ldw	r2,12(r2)
   447a0:	bc800c04 	addi	r18,r23,48
   447a4:	180b883a 	mov	r5,r3
   447a8:	10004e1e 	bne	r2,zero,448e4 <_dtoa_r+0xfac>
   447ac:	8009883a 	mov	r4,r16
   447b0:	d8c01615 	stw	r3,88(sp)
   447b4:	004789c0 	call	4789c <__mcmp>
   447b8:	d8c01617 	ldw	r3,88(sp)
   447bc:	e009883a 	mov	r4,fp
   447c0:	d8801615 	stw	r2,88(sp)
   447c4:	180b883a 	mov	r5,r3
   447c8:	004707c0 	call	4707c <_Bfree>
   447cc:	d8801617 	ldw	r2,88(sp)
   447d0:	1000041e 	bne	r2,zero,447e4 <_dtoa_r+0xeac>
   447d4:	d9800317 	ldw	r6,12(sp)
   447d8:	3000021e 	bne	r6,zero,447e4 <_dtoa_r+0xeac>
   447dc:	d8c00617 	ldw	r3,24(sp)
   447e0:	18003726 	beq	r3,zero,448c0 <_dtoa_r+0xf88>
   447e4:	b0002016 	blt	r22,zero,44868 <_dtoa_r+0xf30>
   447e8:	b000041e 	bne	r22,zero,447fc <_dtoa_r+0xec4>
   447ec:	d9000317 	ldw	r4,12(sp)
   447f0:	2000021e 	bne	r4,zero,447fc <_dtoa_r+0xec4>
   447f4:	d8c00617 	ldw	r3,24(sp)
   447f8:	18001b26 	beq	r3,zero,44868 <_dtoa_r+0xf30>
   447fc:	00810716 	blt	zero,r2,44c1c <_dtoa_r+0x12e4>
   44800:	d8c00417 	ldw	r3,16(sp)
   44804:	9d800044 	addi	r22,r19,1
   44808:	9c800005 	stb	r18,0(r19)
   4480c:	b02f883a 	mov	r23,r22
   44810:	98c10626 	beq	r19,r3,44c2c <_dtoa_r+0x12f4>
   44814:	800b883a 	mov	r5,r16
   44818:	000f883a 	mov	r7,zero
   4481c:	01800284 	movi	r6,10
   44820:	e009883a 	mov	r4,fp
   44824:	00470a40 	call	470a4 <__multadd>
   44828:	1021883a 	mov	r16,r2
   4482c:	000f883a 	mov	r7,zero
   44830:	01800284 	movi	r6,10
   44834:	880b883a 	mov	r5,r17
   44838:	e009883a 	mov	r4,fp
   4483c:	8d002526 	beq	r17,r20,448d4 <_dtoa_r+0xf9c>
   44840:	00470a40 	call	470a4 <__multadd>
   44844:	a00b883a 	mov	r5,r20
   44848:	000f883a 	mov	r7,zero
   4484c:	01800284 	movi	r6,10
   44850:	e009883a 	mov	r4,fp
   44854:	1023883a 	mov	r17,r2
   44858:	00470a40 	call	470a4 <__multadd>
   4485c:	1029883a 	mov	r20,r2
   44860:	b027883a 	mov	r19,r22
   44864:	003fc006 	br	44768 <__alt_data_end+0xfffdd668>
   44868:	9011883a 	mov	r8,r18
   4486c:	00800e0e 	bge	zero,r2,448a8 <_dtoa_r+0xf70>
   44870:	800b883a 	mov	r5,r16
   44874:	01800044 	movi	r6,1
   44878:	e009883a 	mov	r4,fp
   4487c:	da001715 	stw	r8,92(sp)
   44880:	00477540 	call	47754 <__lshift>
   44884:	a80b883a 	mov	r5,r21
   44888:	1009883a 	mov	r4,r2
   4488c:	1021883a 	mov	r16,r2
   44890:	004789c0 	call	4789c <__mcmp>
   44894:	da001717 	ldw	r8,92(sp)
   44898:	0081960e 	bge	zero,r2,44ef4 <_dtoa_r+0x15bc>
   4489c:	00800e44 	movi	r2,57
   448a0:	40817026 	beq	r8,r2,44e64 <_dtoa_r+0x152c>
   448a4:	ba000c44 	addi	r8,r23,49
   448a8:	8825883a 	mov	r18,r17
   448ac:	9dc00044 	addi	r23,r19,1
   448b0:	9a000005 	stb	r8,0(r19)
   448b4:	a023883a 	mov	r17,r20
   448b8:	dc000915 	stw	r16,36(sp)
   448bc:	003f2406 	br	44550 <__alt_data_end+0xfffdd450>
   448c0:	00800e44 	movi	r2,57
   448c4:	9011883a 	mov	r8,r18
   448c8:	90816626 	beq	r18,r2,44e64 <_dtoa_r+0x152c>
   448cc:	05bff516 	blt	zero,r22,448a4 <__alt_data_end+0xfffdd7a4>
   448d0:	003ff506 	br	448a8 <__alt_data_end+0xfffdd7a8>
   448d4:	00470a40 	call	470a4 <__multadd>
   448d8:	1023883a 	mov	r17,r2
   448dc:	1029883a 	mov	r20,r2
   448e0:	003fdf06 	br	44860 <__alt_data_end+0xfffdd760>
   448e4:	e009883a 	mov	r4,fp
   448e8:	004707c0 	call	4707c <_Bfree>
   448ec:	00800044 	movi	r2,1
   448f0:	003fbc06 	br	447e4 <__alt_data_end+0xfffdd6e4>
   448f4:	a80b883a 	mov	r5,r21
   448f8:	8009883a 	mov	r4,r16
   448fc:	004789c0 	call	4789c <__mcmp>
   44900:	103edb0e 	bge	r2,zero,44470 <__alt_data_end+0xfffdd370>
   44904:	800b883a 	mov	r5,r16
   44908:	000f883a 	mov	r7,zero
   4490c:	01800284 	movi	r6,10
   44910:	e009883a 	mov	r4,fp
   44914:	00470a40 	call	470a4 <__multadd>
   44918:	1021883a 	mov	r16,r2
   4491c:	d8800517 	ldw	r2,20(sp)
   44920:	d8c00b17 	ldw	r3,44(sp)
   44924:	10bfffc4 	addi	r2,r2,-1
   44928:	d8800515 	stw	r2,20(sp)
   4492c:	183f761e 	bne	r3,zero,44708 <__alt_data_end+0xfffdd608>
   44930:	d9000c17 	ldw	r4,48(sp)
   44934:	0101730e 	bge	zero,r4,44f04 <_dtoa_r+0x15cc>
   44938:	d9000615 	stw	r4,24(sp)
   4493c:	003ed006 	br	44480 <__alt_data_end+0xfffdd380>
   44940:	00800084 	movi	r2,2
   44944:	3081861e 	bne	r6,r2,44f60 <_dtoa_r+0x1628>
   44948:	d8000b15 	stw	zero,44(sp)
   4494c:	003f3c06 	br	44640 <__alt_data_end+0xfffdd540>
   44950:	dc000917 	ldw	r16,36(sp)
   44954:	003e9206 	br	443a0 <__alt_data_end+0xfffdd2a0>
   44958:	d9c00317 	ldw	r7,12(sp)
   4495c:	00800084 	movi	r2,2
   44960:	11fec50e 	bge	r2,r7,44478 <__alt_data_end+0xfffdd378>
   44964:	d9000617 	ldw	r4,24(sp)
   44968:	20013c1e 	bne	r4,zero,44e5c <_dtoa_r+0x1524>
   4496c:	a80b883a 	mov	r5,r21
   44970:	000f883a 	mov	r7,zero
   44974:	01800144 	movi	r6,5
   44978:	e009883a 	mov	r4,fp
   4497c:	00470a40 	call	470a4 <__multadd>
   44980:	100b883a 	mov	r5,r2
   44984:	8009883a 	mov	r4,r16
   44988:	102b883a 	mov	r21,r2
   4498c:	004789c0 	call	4789c <__mcmp>
   44990:	dc000915 	stw	r16,36(sp)
   44994:	00bf410e 	bge	zero,r2,4469c <__alt_data_end+0xfffdd59c>
   44998:	d9c00717 	ldw	r7,28(sp)
   4499c:	00800c44 	movi	r2,49
   449a0:	38800005 	stb	r2,0(r7)
   449a4:	d8800517 	ldw	r2,20(sp)
   449a8:	3dc00044 	addi	r23,r7,1
   449ac:	10800044 	addi	r2,r2,1
   449b0:	d8800515 	stw	r2,20(sp)
   449b4:	003f3d06 	br	446ac <__alt_data_end+0xfffdd5ac>
   449b8:	d9800517 	ldw	r6,20(sp)
   449bc:	d9c00717 	ldw	r7,28(sp)
   449c0:	00800c44 	movi	r2,49
   449c4:	31800044 	addi	r6,r6,1
   449c8:	d9800515 	stw	r6,20(sp)
   449cc:	38800005 	stb	r2,0(r7)
   449d0:	003edf06 	br	44550 <__alt_data_end+0xfffdd450>
   449d4:	d8000b15 	stw	zero,44(sp)
   449d8:	003c9f06 	br	43c58 <__alt_data_end+0xfffdcb58>
   449dc:	903e7e1e 	bne	r18,zero,443d8 <__alt_data_end+0xfffdd2d8>
   449e0:	00800434 	movhi	r2,16
   449e4:	10bfffc4 	addi	r2,r2,-1
   449e8:	9884703a 	and	r2,r19,r2
   449ec:	1000ea1e 	bne	r2,zero,44d98 <_dtoa_r+0x1460>
   449f0:	9cdffc2c 	andhi	r19,r19,32752
   449f4:	9800e826 	beq	r19,zero,44d98 <_dtoa_r+0x1460>
   449f8:	d9c00817 	ldw	r7,32(sp)
   449fc:	b5800044 	addi	r22,r22,1
   44a00:	04c00044 	movi	r19,1
   44a04:	39c00044 	addi	r7,r7,1
   44a08:	d9c00815 	stw	r7,32(sp)
   44a0c:	d8800d17 	ldw	r2,52(sp)
   44a10:	103e721e 	bne	r2,zero,443dc <__alt_data_end+0xfffdd2dc>
   44a14:	00800044 	movi	r2,1
   44a18:	003e7906 	br	44400 <__alt_data_end+0xfffdd300>
   44a1c:	8009883a 	mov	r4,r16
   44a20:	004cdd80 	call	4cdd8 <__floatsidf>
   44a24:	d9800f17 	ldw	r6,60(sp)
   44a28:	d9c01017 	ldw	r7,64(sp)
   44a2c:	1009883a 	mov	r4,r2
   44a30:	180b883a 	mov	r5,r3
   44a34:	004bd440 	call	4bd44 <__muldf3>
   44a38:	000d883a 	mov	r6,zero
   44a3c:	01d00734 	movhi	r7,16412
   44a40:	1009883a 	mov	r4,r2
   44a44:	180b883a 	mov	r5,r3
   44a48:	004b2400 	call	4b240 <__adddf3>
   44a4c:	047f3034 	movhi	r17,64704
   44a50:	1021883a 	mov	r16,r2
   44a54:	1c63883a 	add	r17,r3,r17
   44a58:	d9000f17 	ldw	r4,60(sp)
   44a5c:	d9401017 	ldw	r5,64(sp)
   44a60:	000d883a 	mov	r6,zero
   44a64:	01d00534 	movhi	r7,16404
   44a68:	004c45c0 	call	4c45c <__subdf3>
   44a6c:	800d883a 	mov	r6,r16
   44a70:	880f883a 	mov	r7,r17
   44a74:	1009883a 	mov	r4,r2
   44a78:	180b883a 	mov	r5,r3
   44a7c:	102b883a 	mov	r21,r2
   44a80:	1829883a 	mov	r20,r3
   44a84:	004bb740 	call	4bb74 <__gedf2>
   44a88:	00806c16 	blt	zero,r2,44c3c <_dtoa_r+0x1304>
   44a8c:	89e0003c 	xorhi	r7,r17,32768
   44a90:	800d883a 	mov	r6,r16
   44a94:	a809883a 	mov	r4,r21
   44a98:	a00b883a 	mov	r5,r20
   44a9c:	004bc500 	call	4bc50 <__ledf2>
   44aa0:	103d7e0e 	bge	r2,zero,4409c <__alt_data_end+0xfffdcf9c>
   44aa4:	002b883a 	mov	r21,zero
   44aa8:	0023883a 	mov	r17,zero
   44aac:	003efb06 	br	4469c <__alt_data_end+0xfffdd59c>
   44ab0:	d8800717 	ldw	r2,28(sp)
   44ab4:	003bd006 	br	439f8 <__alt_data_end+0xfffdc8f8>
   44ab8:	d9000a17 	ldw	r4,40(sp)
   44abc:	d9800d17 	ldw	r6,52(sp)
   44ac0:	dd400a15 	stw	r21,40(sp)
   44ac4:	a905c83a 	sub	r2,r21,r4
   44ac8:	308d883a 	add	r6,r6,r2
   44acc:	d9800d15 	stw	r6,52(sp)
   44ad0:	002b883a 	mov	r21,zero
   44ad4:	003e0606 	br	442f0 <__alt_data_end+0xfffdd1f0>
   44ad8:	9023883a 	mov	r17,r18
   44adc:	9829883a 	mov	r20,r19
   44ae0:	04000084 	movi	r16,2
   44ae4:	003c9206 	br	43d30 <__alt_data_end+0xfffdcc30>
   44ae8:	04000044 	movi	r16,1
   44aec:	dc000c15 	stw	r16,48(sp)
   44af0:	dc000615 	stw	r16,24(sp)
   44af4:	dc002215 	stw	r16,136(sp)
   44af8:	e0001115 	stw	zero,68(fp)
   44afc:	000b883a 	mov	r5,zero
   44b00:	003c6906 	br	43ca8 <__alt_data_end+0xfffdcba8>
   44b04:	3021883a 	mov	r16,r6
   44b08:	003ffb06 	br	44af8 <__alt_data_end+0xfffdd9f8>
   44b0c:	1000021e 	bne	r2,zero,44b18 <_dtoa_r+0x11e0>
   44b10:	4200004c 	andi	r8,r8,1
   44b14:	403e7d1e 	bne	r8,zero,4450c <__alt_data_end+0xfffdd40c>
   44b18:	01000c04 	movi	r4,48
   44b1c:	00000106 	br	44b24 <_dtoa_r+0x11ec>
   44b20:	102f883a 	mov	r23,r2
   44b24:	b8bfffc4 	addi	r2,r23,-1
   44b28:	10c00007 	ldb	r3,0(r2)
   44b2c:	193ffc26 	beq	r3,r4,44b20 <__alt_data_end+0xfffdda20>
   44b30:	003e8706 	br	44550 <__alt_data_end+0xfffdd450>
   44b34:	d8800517 	ldw	r2,20(sp)
   44b38:	00a3c83a 	sub	r17,zero,r2
   44b3c:	8800a426 	beq	r17,zero,44dd0 <_dtoa_r+0x1498>
   44b40:	888003cc 	andi	r2,r17,15
   44b44:	100490fa 	slli	r2,r2,3
   44b48:	00c00174 	movhi	r3,5
   44b4c:	18fe6d04 	addi	r3,r3,-1612
   44b50:	1885883a 	add	r2,r3,r2
   44b54:	11800017 	ldw	r6,0(r2)
   44b58:	11c00117 	ldw	r7,4(r2)
   44b5c:	9009883a 	mov	r4,r18
   44b60:	980b883a 	mov	r5,r19
   44b64:	8823d13a 	srai	r17,r17,4
   44b68:	004bd440 	call	4bd44 <__muldf3>
   44b6c:	d8800f15 	stw	r2,60(sp)
   44b70:	d8c01015 	stw	r3,64(sp)
   44b74:	8800e826 	beq	r17,zero,44f18 <_dtoa_r+0x15e0>
   44b78:	05000174 	movhi	r20,5
   44b7c:	a53e6304 	addi	r20,r20,-1652
   44b80:	04000084 	movi	r16,2
   44b84:	8980004c 	andi	r6,r17,1
   44b88:	1009883a 	mov	r4,r2
   44b8c:	8823d07a 	srai	r17,r17,1
   44b90:	180b883a 	mov	r5,r3
   44b94:	30000426 	beq	r6,zero,44ba8 <_dtoa_r+0x1270>
   44b98:	a1800017 	ldw	r6,0(r20)
   44b9c:	a1c00117 	ldw	r7,4(r20)
   44ba0:	84000044 	addi	r16,r16,1
   44ba4:	004bd440 	call	4bd44 <__muldf3>
   44ba8:	a5000204 	addi	r20,r20,8
   44bac:	883ff51e 	bne	r17,zero,44b84 <__alt_data_end+0xfffdda84>
   44bb0:	d8800f15 	stw	r2,60(sp)
   44bb4:	d8c01015 	stw	r3,64(sp)
   44bb8:	003c7606 	br	43d94 <__alt_data_end+0xfffdcc94>
   44bbc:	00c00c04 	movi	r3,48
   44bc0:	10c00005 	stb	r3,0(r2)
   44bc4:	d8c00517 	ldw	r3,20(sp)
   44bc8:	bd3fffc3 	ldbu	r20,-1(r23)
   44bcc:	18c00044 	addi	r3,r3,1
   44bd0:	d8c00515 	stw	r3,20(sp)
   44bd4:	003db906 	br	442bc <__alt_data_end+0xfffdd1bc>
   44bd8:	89400117 	ldw	r5,4(r17)
   44bdc:	e009883a 	mov	r4,fp
   44be0:	0046fd40 	call	46fd4 <_Balloc>
   44be4:	89800417 	ldw	r6,16(r17)
   44be8:	89400304 	addi	r5,r17,12
   44bec:	11000304 	addi	r4,r2,12
   44bf0:	31800084 	addi	r6,r6,2
   44bf4:	318d883a 	add	r6,r6,r6
   44bf8:	318d883a 	add	r6,r6,r6
   44bfc:	1027883a 	mov	r19,r2
   44c00:	0046c080 	call	46c08 <memcpy>
   44c04:	01800044 	movi	r6,1
   44c08:	980b883a 	mov	r5,r19
   44c0c:	e009883a 	mov	r4,fp
   44c10:	00477540 	call	47754 <__lshift>
   44c14:	1029883a 	mov	r20,r2
   44c18:	003ecc06 	br	4474c <__alt_data_end+0xfffdd64c>
   44c1c:	00800e44 	movi	r2,57
   44c20:	90809026 	beq	r18,r2,44e64 <_dtoa_r+0x152c>
   44c24:	92000044 	addi	r8,r18,1
   44c28:	003f1f06 	br	448a8 <__alt_data_end+0xfffdd7a8>
   44c2c:	9011883a 	mov	r8,r18
   44c30:	8825883a 	mov	r18,r17
   44c34:	a023883a 	mov	r17,r20
   44c38:	003e2906 	br	444e0 <__alt_data_end+0xfffdd3e0>
   44c3c:	002b883a 	mov	r21,zero
   44c40:	0023883a 	mov	r17,zero
   44c44:	003f5406 	br	44998 <__alt_data_end+0xfffdd898>
   44c48:	61bfffc4 	addi	r6,r12,-1
   44c4c:	300490fa 	slli	r2,r6,3
   44c50:	00c00174 	movhi	r3,5
   44c54:	18fe6d04 	addi	r3,r3,-1612
   44c58:	1885883a 	add	r2,r3,r2
   44c5c:	11000017 	ldw	r4,0(r2)
   44c60:	11400117 	ldw	r5,4(r2)
   44c64:	d8800717 	ldw	r2,28(sp)
   44c68:	880f883a 	mov	r7,r17
   44c6c:	d9801215 	stw	r6,72(sp)
   44c70:	800d883a 	mov	r6,r16
   44c74:	db001615 	stw	r12,88(sp)
   44c78:	15c00044 	addi	r23,r2,1
   44c7c:	004bd440 	call	4bd44 <__muldf3>
   44c80:	d9401017 	ldw	r5,64(sp)
   44c84:	d9000f17 	ldw	r4,60(sp)
   44c88:	d8c01515 	stw	r3,84(sp)
   44c8c:	d8801415 	stw	r2,80(sp)
   44c90:	004cd580 	call	4cd58 <__fixdfsi>
   44c94:	1009883a 	mov	r4,r2
   44c98:	1021883a 	mov	r16,r2
   44c9c:	004cdd80 	call	4cdd8 <__floatsidf>
   44ca0:	d9000f17 	ldw	r4,60(sp)
   44ca4:	d9401017 	ldw	r5,64(sp)
   44ca8:	100d883a 	mov	r6,r2
   44cac:	180f883a 	mov	r7,r3
   44cb0:	004c45c0 	call	4c45c <__subdf3>
   44cb4:	1829883a 	mov	r20,r3
   44cb8:	d8c00717 	ldw	r3,28(sp)
   44cbc:	84000c04 	addi	r16,r16,48
   44cc0:	1023883a 	mov	r17,r2
   44cc4:	1c000005 	stb	r16,0(r3)
   44cc8:	db001617 	ldw	r12,88(sp)
   44ccc:	00800044 	movi	r2,1
   44cd0:	60802226 	beq	r12,r2,44d5c <_dtoa_r+0x1424>
   44cd4:	d9c00717 	ldw	r7,28(sp)
   44cd8:	8805883a 	mov	r2,r17
   44cdc:	b82b883a 	mov	r21,r23
   44ce0:	3b19883a 	add	r12,r7,r12
   44ce4:	6023883a 	mov	r17,r12
   44ce8:	a007883a 	mov	r3,r20
   44cec:	dc800f15 	stw	r18,60(sp)
   44cf0:	000d883a 	mov	r6,zero
   44cf4:	01d00934 	movhi	r7,16420
   44cf8:	1009883a 	mov	r4,r2
   44cfc:	180b883a 	mov	r5,r3
   44d00:	004bd440 	call	4bd44 <__muldf3>
   44d04:	180b883a 	mov	r5,r3
   44d08:	1009883a 	mov	r4,r2
   44d0c:	1829883a 	mov	r20,r3
   44d10:	1025883a 	mov	r18,r2
   44d14:	004cd580 	call	4cd58 <__fixdfsi>
   44d18:	1009883a 	mov	r4,r2
   44d1c:	1021883a 	mov	r16,r2
   44d20:	004cdd80 	call	4cdd8 <__floatsidf>
   44d24:	100d883a 	mov	r6,r2
   44d28:	180f883a 	mov	r7,r3
   44d2c:	9009883a 	mov	r4,r18
   44d30:	a00b883a 	mov	r5,r20
   44d34:	84000c04 	addi	r16,r16,48
   44d38:	004c45c0 	call	4c45c <__subdf3>
   44d3c:	ad400044 	addi	r21,r21,1
   44d40:	ac3fffc5 	stb	r16,-1(r21)
   44d44:	ac7fea1e 	bne	r21,r17,44cf0 <__alt_data_end+0xfffddbf0>
   44d48:	1023883a 	mov	r17,r2
   44d4c:	d8801217 	ldw	r2,72(sp)
   44d50:	dc800f17 	ldw	r18,60(sp)
   44d54:	1829883a 	mov	r20,r3
   44d58:	b8af883a 	add	r23,r23,r2
   44d5c:	d9001417 	ldw	r4,80(sp)
   44d60:	d9401517 	ldw	r5,84(sp)
   44d64:	000d883a 	mov	r6,zero
   44d68:	01cff834 	movhi	r7,16352
   44d6c:	004b2400 	call	4b240 <__adddf3>
   44d70:	880d883a 	mov	r6,r17
   44d74:	a00f883a 	mov	r7,r20
   44d78:	1009883a 	mov	r4,r2
   44d7c:	180b883a 	mov	r5,r3
   44d80:	004bc500 	call	4bc50 <__ledf2>
   44d84:	10003e0e 	bge	r2,zero,44e80 <_dtoa_r+0x1548>
   44d88:	d9001317 	ldw	r4,76(sp)
   44d8c:	bd3fffc3 	ldbu	r20,-1(r23)
   44d90:	d9000515 	stw	r4,20(sp)
   44d94:	003d3b06 	br	44284 <__alt_data_end+0xfffdd184>
   44d98:	0027883a 	mov	r19,zero
   44d9c:	003f1b06 	br	44a0c <__alt_data_end+0xfffdd90c>
   44da0:	d8800817 	ldw	r2,32(sp)
   44da4:	11e9c83a 	sub	r20,r2,r7
   44da8:	0005883a 	mov	r2,zero
   44dac:	003d5406 	br	44300 <__alt_data_end+0xfffdd200>
   44db0:	00800044 	movi	r2,1
   44db4:	003dc706 	br	444d4 <__alt_data_end+0xfffdd3d4>
   44db8:	d8c00217 	ldw	r3,8(sp)
   44dbc:	00800d84 	movi	r2,54
   44dc0:	dd400a17 	ldw	r21,40(sp)
   44dc4:	10c5c83a 	sub	r2,r2,r3
   44dc8:	dd000817 	ldw	r20,32(sp)
   44dcc:	003d4c06 	br	44300 <__alt_data_end+0xfffdd200>
   44dd0:	dc800f15 	stw	r18,60(sp)
   44dd4:	dcc01015 	stw	r19,64(sp)
   44dd8:	04000084 	movi	r16,2
   44ddc:	003bed06 	br	43d94 <__alt_data_end+0xfffdcc94>
   44de0:	d9000617 	ldw	r4,24(sp)
   44de4:	203f0d26 	beq	r4,zero,44a1c <__alt_data_end+0xfffdd91c>
   44de8:	d9800c17 	ldw	r6,48(sp)
   44dec:	01bcab0e 	bge	zero,r6,4409c <__alt_data_end+0xfffdcf9c>
   44df0:	d9401017 	ldw	r5,64(sp)
   44df4:	d9000f17 	ldw	r4,60(sp)
   44df8:	000d883a 	mov	r6,zero
   44dfc:	01d00934 	movhi	r7,16420
   44e00:	004bd440 	call	4bd44 <__muldf3>
   44e04:	81000044 	addi	r4,r16,1
   44e08:	d8800f15 	stw	r2,60(sp)
   44e0c:	d8c01015 	stw	r3,64(sp)
   44e10:	004cdd80 	call	4cdd8 <__floatsidf>
   44e14:	d9800f17 	ldw	r6,60(sp)
   44e18:	d9c01017 	ldw	r7,64(sp)
   44e1c:	1009883a 	mov	r4,r2
   44e20:	180b883a 	mov	r5,r3
   44e24:	004bd440 	call	4bd44 <__muldf3>
   44e28:	01d00734 	movhi	r7,16412
   44e2c:	000d883a 	mov	r6,zero
   44e30:	1009883a 	mov	r4,r2
   44e34:	180b883a 	mov	r5,r3
   44e38:	004b2400 	call	4b240 <__adddf3>
   44e3c:	d9c00517 	ldw	r7,20(sp)
   44e40:	047f3034 	movhi	r17,64704
   44e44:	1021883a 	mov	r16,r2
   44e48:	39ffffc4 	addi	r7,r7,-1
   44e4c:	d9c01315 	stw	r7,76(sp)
   44e50:	1c63883a 	add	r17,r3,r17
   44e54:	db000c17 	ldw	r12,48(sp)
   44e58:	003bea06 	br	43e04 <__alt_data_end+0xfffdcd04>
   44e5c:	dc000915 	stw	r16,36(sp)
   44e60:	003e0e06 	br	4469c <__alt_data_end+0xfffdd59c>
   44e64:	01000e44 	movi	r4,57
   44e68:	8825883a 	mov	r18,r17
   44e6c:	9dc00044 	addi	r23,r19,1
   44e70:	99000005 	stb	r4,0(r19)
   44e74:	a023883a 	mov	r17,r20
   44e78:	dc000915 	stw	r16,36(sp)
   44e7c:	003da406 	br	44510 <__alt_data_end+0xfffdd410>
   44e80:	d9801417 	ldw	r6,80(sp)
   44e84:	d9c01517 	ldw	r7,84(sp)
   44e88:	0009883a 	mov	r4,zero
   44e8c:	014ff834 	movhi	r5,16352
   44e90:	004c45c0 	call	4c45c <__subdf3>
   44e94:	880d883a 	mov	r6,r17
   44e98:	a00f883a 	mov	r7,r20
   44e9c:	1009883a 	mov	r4,r2
   44ea0:	180b883a 	mov	r5,r3
   44ea4:	004bb740 	call	4bb74 <__gedf2>
   44ea8:	00bc7c0e 	bge	zero,r2,4409c <__alt_data_end+0xfffdcf9c>
   44eac:	01000c04 	movi	r4,48
   44eb0:	00000106 	br	44eb8 <_dtoa_r+0x1580>
   44eb4:	102f883a 	mov	r23,r2
   44eb8:	b8bfffc4 	addi	r2,r23,-1
   44ebc:	10c00007 	ldb	r3,0(r2)
   44ec0:	193ffc26 	beq	r3,r4,44eb4 <__alt_data_end+0xfffdddb4>
   44ec4:	d9801317 	ldw	r6,76(sp)
   44ec8:	d9800515 	stw	r6,20(sp)
   44ecc:	003c4406 	br	43fe0 <__alt_data_end+0xfffdcee0>
   44ed0:	d9801317 	ldw	r6,76(sp)
   44ed4:	d9800515 	stw	r6,20(sp)
   44ed8:	003cea06 	br	44284 <__alt_data_end+0xfffdd184>
   44edc:	dd800f17 	ldw	r22,60(sp)
   44ee0:	dcc01017 	ldw	r19,64(sp)
   44ee4:	dc801217 	ldw	r18,72(sp)
   44ee8:	003c6c06 	br	4409c <__alt_data_end+0xfffdcf9c>
   44eec:	903e031e 	bne	r18,zero,446fc <__alt_data_end+0xfffdd5fc>
   44ef0:	003ebb06 	br	449e0 <__alt_data_end+0xfffdd8e0>
   44ef4:	103e6c1e 	bne	r2,zero,448a8 <__alt_data_end+0xfffdd7a8>
   44ef8:	4080004c 	andi	r2,r8,1
   44efc:	103e6a26 	beq	r2,zero,448a8 <__alt_data_end+0xfffdd7a8>
   44f00:	003e6606 	br	4489c <__alt_data_end+0xfffdd79c>
   44f04:	d8c00317 	ldw	r3,12(sp)
   44f08:	00800084 	movi	r2,2
   44f0c:	10c02916 	blt	r2,r3,44fb4 <_dtoa_r+0x167c>
   44f10:	d9000c17 	ldw	r4,48(sp)
   44f14:	003e8806 	br	44938 <__alt_data_end+0xfffdd838>
   44f18:	04000084 	movi	r16,2
   44f1c:	003b9d06 	br	43d94 <__alt_data_end+0xfffdcc94>
   44f20:	d9001317 	ldw	r4,76(sp)
   44f24:	d9000515 	stw	r4,20(sp)
   44f28:	003cd606 	br	44284 <__alt_data_end+0xfffdd184>
   44f2c:	d8801317 	ldw	r2,76(sp)
   44f30:	d8800515 	stw	r2,20(sp)
   44f34:	003c2a06 	br	43fe0 <__alt_data_end+0xfffdcee0>
   44f38:	d9800317 	ldw	r6,12(sp)
   44f3c:	00800084 	movi	r2,2
   44f40:	11801516 	blt	r2,r6,44f98 <_dtoa_r+0x1660>
   44f44:	d9c00c17 	ldw	r7,48(sp)
   44f48:	d9c00615 	stw	r7,24(sp)
   44f4c:	003df706 	br	4472c <__alt_data_end+0xfffdd62c>
   44f50:	193d3926 	beq	r3,r4,44438 <__alt_data_end+0xfffdd338>
   44f54:	00c00f04 	movi	r3,60
   44f58:	1885c83a 	sub	r2,r3,r2
   44f5c:	003ddf06 	br	446dc <__alt_data_end+0xfffdd5dc>
   44f60:	e009883a 	mov	r4,fp
   44f64:	e0001115 	stw	zero,68(fp)
   44f68:	000b883a 	mov	r5,zero
   44f6c:	0046fd40 	call	46fd4 <_Balloc>
   44f70:	d8800715 	stw	r2,28(sp)
   44f74:	d8c00717 	ldw	r3,28(sp)
   44f78:	00bfffc4 	movi	r2,-1
   44f7c:	01000044 	movi	r4,1
   44f80:	d8800c15 	stw	r2,48(sp)
   44f84:	e0c01015 	stw	r3,64(fp)
   44f88:	d9000b15 	stw	r4,44(sp)
   44f8c:	d8800615 	stw	r2,24(sp)
   44f90:	d8002215 	stw	zero,136(sp)
   44f94:	003c4106 	br	4409c <__alt_data_end+0xfffdcf9c>
   44f98:	d8c00c17 	ldw	r3,48(sp)
   44f9c:	d8c00615 	stw	r3,24(sp)
   44fa0:	003e7006 	br	44964 <__alt_data_end+0xfffdd864>
   44fa4:	04400044 	movi	r17,1
   44fa8:	003b2006 	br	43c2c <__alt_data_end+0xfffdcb2c>
   44fac:	000b883a 	mov	r5,zero
   44fb0:	003b3d06 	br	43ca8 <__alt_data_end+0xfffdcba8>
   44fb4:	d8800c17 	ldw	r2,48(sp)
   44fb8:	d8800615 	stw	r2,24(sp)
   44fbc:	003e6906 	br	44964 <__alt_data_end+0xfffdd864>

00044fc0 <__sflush_r>:
   44fc0:	2880030b 	ldhu	r2,12(r5)
   44fc4:	defffb04 	addi	sp,sp,-20
   44fc8:	dcc00315 	stw	r19,12(sp)
   44fcc:	dc400115 	stw	r17,4(sp)
   44fd0:	dfc00415 	stw	ra,16(sp)
   44fd4:	dc800215 	stw	r18,8(sp)
   44fd8:	dc000015 	stw	r16,0(sp)
   44fdc:	10c0020c 	andi	r3,r2,8
   44fe0:	2823883a 	mov	r17,r5
   44fe4:	2027883a 	mov	r19,r4
   44fe8:	1800311e 	bne	r3,zero,450b0 <__sflush_r+0xf0>
   44fec:	28c00117 	ldw	r3,4(r5)
   44ff0:	10820014 	ori	r2,r2,2048
   44ff4:	2880030d 	sth	r2,12(r5)
   44ff8:	00c04b0e 	bge	zero,r3,45128 <__sflush_r+0x168>
   44ffc:	8a000a17 	ldw	r8,40(r17)
   45000:	40002326 	beq	r8,zero,45090 <__sflush_r+0xd0>
   45004:	9c000017 	ldw	r16,0(r19)
   45008:	10c4000c 	andi	r3,r2,4096
   4500c:	98000015 	stw	zero,0(r19)
   45010:	18004826 	beq	r3,zero,45134 <__sflush_r+0x174>
   45014:	89801417 	ldw	r6,80(r17)
   45018:	10c0010c 	andi	r3,r2,4
   4501c:	18000626 	beq	r3,zero,45038 <__sflush_r+0x78>
   45020:	88c00117 	ldw	r3,4(r17)
   45024:	88800c17 	ldw	r2,48(r17)
   45028:	30cdc83a 	sub	r6,r6,r3
   4502c:	10000226 	beq	r2,zero,45038 <__sflush_r+0x78>
   45030:	88800f17 	ldw	r2,60(r17)
   45034:	308dc83a 	sub	r6,r6,r2
   45038:	89400717 	ldw	r5,28(r17)
   4503c:	000f883a 	mov	r7,zero
   45040:	9809883a 	mov	r4,r19
   45044:	403ee83a 	callr	r8
   45048:	00ffffc4 	movi	r3,-1
   4504c:	10c04426 	beq	r2,r3,45160 <__sflush_r+0x1a0>
   45050:	88c0030b 	ldhu	r3,12(r17)
   45054:	89000417 	ldw	r4,16(r17)
   45058:	88000115 	stw	zero,4(r17)
   4505c:	197dffcc 	andi	r5,r3,63487
   45060:	8940030d 	sth	r5,12(r17)
   45064:	89000015 	stw	r4,0(r17)
   45068:	18c4000c 	andi	r3,r3,4096
   4506c:	18002c1e 	bne	r3,zero,45120 <__sflush_r+0x160>
   45070:	89400c17 	ldw	r5,48(r17)
   45074:	9c000015 	stw	r16,0(r19)
   45078:	28000526 	beq	r5,zero,45090 <__sflush_r+0xd0>
   4507c:	88801004 	addi	r2,r17,64
   45080:	28800226 	beq	r5,r2,4508c <__sflush_r+0xcc>
   45084:	9809883a 	mov	r4,r19
   45088:	004572c0 	call	4572c <_free_r>
   4508c:	88000c15 	stw	zero,48(r17)
   45090:	0005883a 	mov	r2,zero
   45094:	dfc00417 	ldw	ra,16(sp)
   45098:	dcc00317 	ldw	r19,12(sp)
   4509c:	dc800217 	ldw	r18,8(sp)
   450a0:	dc400117 	ldw	r17,4(sp)
   450a4:	dc000017 	ldw	r16,0(sp)
   450a8:	dec00504 	addi	sp,sp,20
   450ac:	f800283a 	ret
   450b0:	2c800417 	ldw	r18,16(r5)
   450b4:	903ff626 	beq	r18,zero,45090 <__alt_data_end+0xfffddf90>
   450b8:	2c000017 	ldw	r16,0(r5)
   450bc:	108000cc 	andi	r2,r2,3
   450c0:	2c800015 	stw	r18,0(r5)
   450c4:	84a1c83a 	sub	r16,r16,r18
   450c8:	1000131e 	bne	r2,zero,45118 <__sflush_r+0x158>
   450cc:	28800517 	ldw	r2,20(r5)
   450d0:	88800215 	stw	r2,8(r17)
   450d4:	04000316 	blt	zero,r16,450e4 <__sflush_r+0x124>
   450d8:	003fed06 	br	45090 <__alt_data_end+0xfffddf90>
   450dc:	90a5883a 	add	r18,r18,r2
   450e0:	043feb0e 	bge	zero,r16,45090 <__alt_data_end+0xfffddf90>
   450e4:	88800917 	ldw	r2,36(r17)
   450e8:	89400717 	ldw	r5,28(r17)
   450ec:	800f883a 	mov	r7,r16
   450f0:	900d883a 	mov	r6,r18
   450f4:	9809883a 	mov	r4,r19
   450f8:	103ee83a 	callr	r2
   450fc:	80a1c83a 	sub	r16,r16,r2
   45100:	00bff616 	blt	zero,r2,450dc <__alt_data_end+0xfffddfdc>
   45104:	88c0030b 	ldhu	r3,12(r17)
   45108:	00bfffc4 	movi	r2,-1
   4510c:	18c01014 	ori	r3,r3,64
   45110:	88c0030d 	sth	r3,12(r17)
   45114:	003fdf06 	br	45094 <__alt_data_end+0xfffddf94>
   45118:	0005883a 	mov	r2,zero
   4511c:	003fec06 	br	450d0 <__alt_data_end+0xfffddfd0>
   45120:	88801415 	stw	r2,80(r17)
   45124:	003fd206 	br	45070 <__alt_data_end+0xfffddf70>
   45128:	28c00f17 	ldw	r3,60(r5)
   4512c:	00ffb316 	blt	zero,r3,44ffc <__alt_data_end+0xfffddefc>
   45130:	003fd706 	br	45090 <__alt_data_end+0xfffddf90>
   45134:	89400717 	ldw	r5,28(r17)
   45138:	000d883a 	mov	r6,zero
   4513c:	01c00044 	movi	r7,1
   45140:	9809883a 	mov	r4,r19
   45144:	403ee83a 	callr	r8
   45148:	100d883a 	mov	r6,r2
   4514c:	00bfffc4 	movi	r2,-1
   45150:	30801426 	beq	r6,r2,451a4 <__sflush_r+0x1e4>
   45154:	8880030b 	ldhu	r2,12(r17)
   45158:	8a000a17 	ldw	r8,40(r17)
   4515c:	003fae06 	br	45018 <__alt_data_end+0xfffddf18>
   45160:	98c00017 	ldw	r3,0(r19)
   45164:	183fba26 	beq	r3,zero,45050 <__alt_data_end+0xfffddf50>
   45168:	01000744 	movi	r4,29
   4516c:	19000626 	beq	r3,r4,45188 <__sflush_r+0x1c8>
   45170:	01000584 	movi	r4,22
   45174:	19000426 	beq	r3,r4,45188 <__sflush_r+0x1c8>
   45178:	88c0030b 	ldhu	r3,12(r17)
   4517c:	18c01014 	ori	r3,r3,64
   45180:	88c0030d 	sth	r3,12(r17)
   45184:	003fc306 	br	45094 <__alt_data_end+0xfffddf94>
   45188:	8880030b 	ldhu	r2,12(r17)
   4518c:	88c00417 	ldw	r3,16(r17)
   45190:	88000115 	stw	zero,4(r17)
   45194:	10bdffcc 	andi	r2,r2,63487
   45198:	8880030d 	sth	r2,12(r17)
   4519c:	88c00015 	stw	r3,0(r17)
   451a0:	003fb306 	br	45070 <__alt_data_end+0xfffddf70>
   451a4:	98800017 	ldw	r2,0(r19)
   451a8:	103fea26 	beq	r2,zero,45154 <__alt_data_end+0xfffde054>
   451ac:	00c00744 	movi	r3,29
   451b0:	10c00226 	beq	r2,r3,451bc <__sflush_r+0x1fc>
   451b4:	00c00584 	movi	r3,22
   451b8:	10c0031e 	bne	r2,r3,451c8 <__sflush_r+0x208>
   451bc:	9c000015 	stw	r16,0(r19)
   451c0:	0005883a 	mov	r2,zero
   451c4:	003fb306 	br	45094 <__alt_data_end+0xfffddf94>
   451c8:	88c0030b 	ldhu	r3,12(r17)
   451cc:	3005883a 	mov	r2,r6
   451d0:	18c01014 	ori	r3,r3,64
   451d4:	88c0030d 	sth	r3,12(r17)
   451d8:	003fae06 	br	45094 <__alt_data_end+0xfffddf94>

000451dc <_fflush_r>:
   451dc:	defffd04 	addi	sp,sp,-12
   451e0:	dc000115 	stw	r16,4(sp)
   451e4:	dfc00215 	stw	ra,8(sp)
   451e8:	2021883a 	mov	r16,r4
   451ec:	20000226 	beq	r4,zero,451f8 <_fflush_r+0x1c>
   451f0:	20800e17 	ldw	r2,56(r4)
   451f4:	10000c26 	beq	r2,zero,45228 <_fflush_r+0x4c>
   451f8:	2880030f 	ldh	r2,12(r5)
   451fc:	1000051e 	bne	r2,zero,45214 <_fflush_r+0x38>
   45200:	0005883a 	mov	r2,zero
   45204:	dfc00217 	ldw	ra,8(sp)
   45208:	dc000117 	ldw	r16,4(sp)
   4520c:	dec00304 	addi	sp,sp,12
   45210:	f800283a 	ret
   45214:	8009883a 	mov	r4,r16
   45218:	dfc00217 	ldw	ra,8(sp)
   4521c:	dc000117 	ldw	r16,4(sp)
   45220:	dec00304 	addi	sp,sp,12
   45224:	0044fc01 	jmpi	44fc0 <__sflush_r>
   45228:	d9400015 	stw	r5,0(sp)
   4522c:	00455b80 	call	455b8 <__sinit>
   45230:	d9400017 	ldw	r5,0(sp)
   45234:	003ff006 	br	451f8 <__alt_data_end+0xfffde0f8>

00045238 <fflush>:
   45238:	20000526 	beq	r4,zero,45250 <fflush+0x18>
   4523c:	00800174 	movhi	r2,5
   45240:	10855e04 	addi	r2,r2,5496
   45244:	200b883a 	mov	r5,r4
   45248:	11000017 	ldw	r4,0(r2)
   4524c:	00451dc1 	jmpi	451dc <_fflush_r>
   45250:	00800174 	movhi	r2,5
   45254:	10855d04 	addi	r2,r2,5492
   45258:	11000017 	ldw	r4,0(r2)
   4525c:	01400134 	movhi	r5,4
   45260:	29547704 	addi	r5,r5,20956
   45264:	0045fbc1 	jmpi	45fbc <_fwalk_reent>

00045268 <__fp_unlock>:
   45268:	0005883a 	mov	r2,zero
   4526c:	f800283a 	ret

00045270 <_cleanup_r>:
   45270:	01400174 	movhi	r5,5
   45274:	2967f504 	addi	r5,r5,-24620
   45278:	0045fbc1 	jmpi	45fbc <_fwalk_reent>

0004527c <__sinit.part.1>:
   4527c:	defff704 	addi	sp,sp,-36
   45280:	00c00134 	movhi	r3,4
   45284:	dfc00815 	stw	ra,32(sp)
   45288:	ddc00715 	stw	r23,28(sp)
   4528c:	dd800615 	stw	r22,24(sp)
   45290:	dd400515 	stw	r21,20(sp)
   45294:	dd000415 	stw	r20,16(sp)
   45298:	dcc00315 	stw	r19,12(sp)
   4529c:	dc800215 	stw	r18,8(sp)
   452a0:	dc400115 	stw	r17,4(sp)
   452a4:	dc000015 	stw	r16,0(sp)
   452a8:	18d49c04 	addi	r3,r3,21104
   452ac:	24000117 	ldw	r16,4(r4)
   452b0:	20c00f15 	stw	r3,60(r4)
   452b4:	2080bb04 	addi	r2,r4,748
   452b8:	00c000c4 	movi	r3,3
   452bc:	20c0b915 	stw	r3,740(r4)
   452c0:	2080ba15 	stw	r2,744(r4)
   452c4:	2000b815 	stw	zero,736(r4)
   452c8:	05c00204 	movi	r23,8
   452cc:	00800104 	movi	r2,4
   452d0:	2025883a 	mov	r18,r4
   452d4:	b80d883a 	mov	r6,r23
   452d8:	81001704 	addi	r4,r16,92
   452dc:	000b883a 	mov	r5,zero
   452e0:	80000015 	stw	zero,0(r16)
   452e4:	80000115 	stw	zero,4(r16)
   452e8:	80000215 	stw	zero,8(r16)
   452ec:	8080030d 	sth	r2,12(r16)
   452f0:	80001915 	stw	zero,100(r16)
   452f4:	8000038d 	sth	zero,14(r16)
   452f8:	80000415 	stw	zero,16(r16)
   452fc:	80000515 	stw	zero,20(r16)
   45300:	80000615 	stw	zero,24(r16)
   45304:	0046eac0 	call	46eac <memset>
   45308:	05800174 	movhi	r22,5
   4530c:	94400217 	ldw	r17,8(r18)
   45310:	05400174 	movhi	r21,5
   45314:	05000174 	movhi	r20,5
   45318:	04c00174 	movhi	r19,5
   4531c:	b5a17f04 	addi	r22,r22,-31236
   45320:	ad619604 	addi	r21,r21,-31144
   45324:	a521b504 	addi	r20,r20,-31020
   45328:	9ce1cc04 	addi	r19,r19,-30928
   4532c:	85800815 	stw	r22,32(r16)
   45330:	85400915 	stw	r21,36(r16)
   45334:	85000a15 	stw	r20,40(r16)
   45338:	84c00b15 	stw	r19,44(r16)
   4533c:	84000715 	stw	r16,28(r16)
   45340:	00800284 	movi	r2,10
   45344:	8880030d 	sth	r2,12(r17)
   45348:	00800044 	movi	r2,1
   4534c:	b80d883a 	mov	r6,r23
   45350:	89001704 	addi	r4,r17,92
   45354:	000b883a 	mov	r5,zero
   45358:	88000015 	stw	zero,0(r17)
   4535c:	88000115 	stw	zero,4(r17)
   45360:	88000215 	stw	zero,8(r17)
   45364:	88001915 	stw	zero,100(r17)
   45368:	8880038d 	sth	r2,14(r17)
   4536c:	88000415 	stw	zero,16(r17)
   45370:	88000515 	stw	zero,20(r17)
   45374:	88000615 	stw	zero,24(r17)
   45378:	0046eac0 	call	46eac <memset>
   4537c:	94000317 	ldw	r16,12(r18)
   45380:	00800484 	movi	r2,18
   45384:	8c400715 	stw	r17,28(r17)
   45388:	8d800815 	stw	r22,32(r17)
   4538c:	8d400915 	stw	r21,36(r17)
   45390:	8d000a15 	stw	r20,40(r17)
   45394:	8cc00b15 	stw	r19,44(r17)
   45398:	8080030d 	sth	r2,12(r16)
   4539c:	00800084 	movi	r2,2
   453a0:	80000015 	stw	zero,0(r16)
   453a4:	80000115 	stw	zero,4(r16)
   453a8:	80000215 	stw	zero,8(r16)
   453ac:	80001915 	stw	zero,100(r16)
   453b0:	8080038d 	sth	r2,14(r16)
   453b4:	80000415 	stw	zero,16(r16)
   453b8:	80000515 	stw	zero,20(r16)
   453bc:	80000615 	stw	zero,24(r16)
   453c0:	b80d883a 	mov	r6,r23
   453c4:	000b883a 	mov	r5,zero
   453c8:	81001704 	addi	r4,r16,92
   453cc:	0046eac0 	call	46eac <memset>
   453d0:	00800044 	movi	r2,1
   453d4:	84000715 	stw	r16,28(r16)
   453d8:	85800815 	stw	r22,32(r16)
   453dc:	85400915 	stw	r21,36(r16)
   453e0:	85000a15 	stw	r20,40(r16)
   453e4:	84c00b15 	stw	r19,44(r16)
   453e8:	90800e15 	stw	r2,56(r18)
   453ec:	dfc00817 	ldw	ra,32(sp)
   453f0:	ddc00717 	ldw	r23,28(sp)
   453f4:	dd800617 	ldw	r22,24(sp)
   453f8:	dd400517 	ldw	r21,20(sp)
   453fc:	dd000417 	ldw	r20,16(sp)
   45400:	dcc00317 	ldw	r19,12(sp)
   45404:	dc800217 	ldw	r18,8(sp)
   45408:	dc400117 	ldw	r17,4(sp)
   4540c:	dc000017 	ldw	r16,0(sp)
   45410:	dec00904 	addi	sp,sp,36
   45414:	f800283a 	ret

00045418 <__fp_lock>:
   45418:	0005883a 	mov	r2,zero
   4541c:	f800283a 	ret

00045420 <__sfmoreglue>:
   45420:	defffc04 	addi	sp,sp,-16
   45424:	dc400115 	stw	r17,4(sp)
   45428:	2c7fffc4 	addi	r17,r5,-1
   4542c:	8c401a24 	muli	r17,r17,104
   45430:	dc800215 	stw	r18,8(sp)
   45434:	2825883a 	mov	r18,r5
   45438:	89401d04 	addi	r5,r17,116
   4543c:	dc000015 	stw	r16,0(sp)
   45440:	dfc00315 	stw	ra,12(sp)
   45444:	00463180 	call	46318 <_malloc_r>
   45448:	1021883a 	mov	r16,r2
   4544c:	10000726 	beq	r2,zero,4546c <__sfmoreglue+0x4c>
   45450:	11000304 	addi	r4,r2,12
   45454:	10000015 	stw	zero,0(r2)
   45458:	14800115 	stw	r18,4(r2)
   4545c:	11000215 	stw	r4,8(r2)
   45460:	89801a04 	addi	r6,r17,104
   45464:	000b883a 	mov	r5,zero
   45468:	0046eac0 	call	46eac <memset>
   4546c:	8005883a 	mov	r2,r16
   45470:	dfc00317 	ldw	ra,12(sp)
   45474:	dc800217 	ldw	r18,8(sp)
   45478:	dc400117 	ldw	r17,4(sp)
   4547c:	dc000017 	ldw	r16,0(sp)
   45480:	dec00404 	addi	sp,sp,16
   45484:	f800283a 	ret

00045488 <__sfp>:
   45488:	defffb04 	addi	sp,sp,-20
   4548c:	dc000015 	stw	r16,0(sp)
   45490:	04000174 	movhi	r16,5
   45494:	84055d04 	addi	r16,r16,5492
   45498:	dcc00315 	stw	r19,12(sp)
   4549c:	2027883a 	mov	r19,r4
   454a0:	81000017 	ldw	r4,0(r16)
   454a4:	dfc00415 	stw	ra,16(sp)
   454a8:	dc800215 	stw	r18,8(sp)
   454ac:	20800e17 	ldw	r2,56(r4)
   454b0:	dc400115 	stw	r17,4(sp)
   454b4:	1000021e 	bne	r2,zero,454c0 <__sfp+0x38>
   454b8:	004527c0 	call	4527c <__sinit.part.1>
   454bc:	81000017 	ldw	r4,0(r16)
   454c0:	2480b804 	addi	r18,r4,736
   454c4:	047fffc4 	movi	r17,-1
   454c8:	91000117 	ldw	r4,4(r18)
   454cc:	94000217 	ldw	r16,8(r18)
   454d0:	213fffc4 	addi	r4,r4,-1
   454d4:	20000a16 	blt	r4,zero,45500 <__sfp+0x78>
   454d8:	8080030f 	ldh	r2,12(r16)
   454dc:	10000c26 	beq	r2,zero,45510 <__sfp+0x88>
   454e0:	80c01d04 	addi	r3,r16,116
   454e4:	00000206 	br	454f0 <__sfp+0x68>
   454e8:	18bfe60f 	ldh	r2,-104(r3)
   454ec:	10000826 	beq	r2,zero,45510 <__sfp+0x88>
   454f0:	213fffc4 	addi	r4,r4,-1
   454f4:	1c3ffd04 	addi	r16,r3,-12
   454f8:	18c01a04 	addi	r3,r3,104
   454fc:	247ffa1e 	bne	r4,r17,454e8 <__alt_data_end+0xfffde3e8>
   45500:	90800017 	ldw	r2,0(r18)
   45504:	10001d26 	beq	r2,zero,4557c <__sfp+0xf4>
   45508:	1025883a 	mov	r18,r2
   4550c:	003fee06 	br	454c8 <__alt_data_end+0xfffde3c8>
   45510:	00bfffc4 	movi	r2,-1
   45514:	8080038d 	sth	r2,14(r16)
   45518:	00800044 	movi	r2,1
   4551c:	8080030d 	sth	r2,12(r16)
   45520:	80001915 	stw	zero,100(r16)
   45524:	80000015 	stw	zero,0(r16)
   45528:	80000215 	stw	zero,8(r16)
   4552c:	80000115 	stw	zero,4(r16)
   45530:	80000415 	stw	zero,16(r16)
   45534:	80000515 	stw	zero,20(r16)
   45538:	80000615 	stw	zero,24(r16)
   4553c:	01800204 	movi	r6,8
   45540:	000b883a 	mov	r5,zero
   45544:	81001704 	addi	r4,r16,92
   45548:	0046eac0 	call	46eac <memset>
   4554c:	8005883a 	mov	r2,r16
   45550:	80000c15 	stw	zero,48(r16)
   45554:	80000d15 	stw	zero,52(r16)
   45558:	80001115 	stw	zero,68(r16)
   4555c:	80001215 	stw	zero,72(r16)
   45560:	dfc00417 	ldw	ra,16(sp)
   45564:	dcc00317 	ldw	r19,12(sp)
   45568:	dc800217 	ldw	r18,8(sp)
   4556c:	dc400117 	ldw	r17,4(sp)
   45570:	dc000017 	ldw	r16,0(sp)
   45574:	dec00504 	addi	sp,sp,20
   45578:	f800283a 	ret
   4557c:	01400104 	movi	r5,4
   45580:	9809883a 	mov	r4,r19
   45584:	00454200 	call	45420 <__sfmoreglue>
   45588:	90800015 	stw	r2,0(r18)
   4558c:	103fde1e 	bne	r2,zero,45508 <__alt_data_end+0xfffde408>
   45590:	00800304 	movi	r2,12
   45594:	98800015 	stw	r2,0(r19)
   45598:	0005883a 	mov	r2,zero
   4559c:	003ff006 	br	45560 <__alt_data_end+0xfffde460>

000455a0 <_cleanup>:
   455a0:	00800174 	movhi	r2,5
   455a4:	10855d04 	addi	r2,r2,5492
   455a8:	11000017 	ldw	r4,0(r2)
   455ac:	01400174 	movhi	r5,5
   455b0:	2967f504 	addi	r5,r5,-24620
   455b4:	0045fbc1 	jmpi	45fbc <_fwalk_reent>

000455b8 <__sinit>:
   455b8:	20800e17 	ldw	r2,56(r4)
   455bc:	10000126 	beq	r2,zero,455c4 <__sinit+0xc>
   455c0:	f800283a 	ret
   455c4:	004527c1 	jmpi	4527c <__sinit.part.1>

000455c8 <__sfp_lock_acquire>:
   455c8:	f800283a 	ret

000455cc <__sfp_lock_release>:
   455cc:	f800283a 	ret

000455d0 <__sinit_lock_acquire>:
   455d0:	f800283a 	ret

000455d4 <__sinit_lock_release>:
   455d4:	f800283a 	ret

000455d8 <__fp_lock_all>:
   455d8:	00800174 	movhi	r2,5
   455dc:	10855e04 	addi	r2,r2,5496
   455e0:	11000017 	ldw	r4,0(r2)
   455e4:	01400134 	movhi	r5,4
   455e8:	29550604 	addi	r5,r5,21528
   455ec:	0045ef81 	jmpi	45ef8 <_fwalk>

000455f0 <__fp_unlock_all>:
   455f0:	00800174 	movhi	r2,5
   455f4:	10855e04 	addi	r2,r2,5496
   455f8:	11000017 	ldw	r4,0(r2)
   455fc:	01400134 	movhi	r5,4
   45600:	29549a04 	addi	r5,r5,21096
   45604:	0045ef81 	jmpi	45ef8 <_fwalk>

00045608 <_malloc_trim_r>:
   45608:	defffb04 	addi	sp,sp,-20
   4560c:	dcc00315 	stw	r19,12(sp)
   45610:	04c00174 	movhi	r19,5
   45614:	dc800215 	stw	r18,8(sp)
   45618:	dc400115 	stw	r17,4(sp)
   4561c:	dc000015 	stw	r16,0(sp)
   45620:	dfc00415 	stw	ra,16(sp)
   45624:	2821883a 	mov	r16,r5
   45628:	9cffd904 	addi	r19,r19,-156
   4562c:	2025883a 	mov	r18,r4
   45630:	004d4d80 	call	4d4d8 <__malloc_lock>
   45634:	98800217 	ldw	r2,8(r19)
   45638:	14400117 	ldw	r17,4(r2)
   4563c:	00bfff04 	movi	r2,-4
   45640:	88a2703a 	and	r17,r17,r2
   45644:	8c21c83a 	sub	r16,r17,r16
   45648:	8403fbc4 	addi	r16,r16,4079
   4564c:	8020d33a 	srli	r16,r16,12
   45650:	0083ffc4 	movi	r2,4095
   45654:	843fffc4 	addi	r16,r16,-1
   45658:	8020933a 	slli	r16,r16,12
   4565c:	1400060e 	bge	r2,r16,45678 <_malloc_trim_r+0x70>
   45660:	000b883a 	mov	r5,zero
   45664:	9009883a 	mov	r4,r18
   45668:	00485a80 	call	485a8 <_sbrk_r>
   4566c:	98c00217 	ldw	r3,8(r19)
   45670:	1c47883a 	add	r3,r3,r17
   45674:	10c00a26 	beq	r2,r3,456a0 <_malloc_trim_r+0x98>
   45678:	9009883a 	mov	r4,r18
   4567c:	004d4fc0 	call	4d4fc <__malloc_unlock>
   45680:	0005883a 	mov	r2,zero
   45684:	dfc00417 	ldw	ra,16(sp)
   45688:	dcc00317 	ldw	r19,12(sp)
   4568c:	dc800217 	ldw	r18,8(sp)
   45690:	dc400117 	ldw	r17,4(sp)
   45694:	dc000017 	ldw	r16,0(sp)
   45698:	dec00504 	addi	sp,sp,20
   4569c:	f800283a 	ret
   456a0:	040bc83a 	sub	r5,zero,r16
   456a4:	9009883a 	mov	r4,r18
   456a8:	00485a80 	call	485a8 <_sbrk_r>
   456ac:	00ffffc4 	movi	r3,-1
   456b0:	10c00d26 	beq	r2,r3,456e8 <_malloc_trim_r+0xe0>
   456b4:	00c00174 	movhi	r3,5
   456b8:	18cc3604 	addi	r3,r3,12504
   456bc:	18800017 	ldw	r2,0(r3)
   456c0:	99000217 	ldw	r4,8(r19)
   456c4:	8c23c83a 	sub	r17,r17,r16
   456c8:	8c400054 	ori	r17,r17,1
   456cc:	1421c83a 	sub	r16,r2,r16
   456d0:	24400115 	stw	r17,4(r4)
   456d4:	9009883a 	mov	r4,r18
   456d8:	1c000015 	stw	r16,0(r3)
   456dc:	004d4fc0 	call	4d4fc <__malloc_unlock>
   456e0:	00800044 	movi	r2,1
   456e4:	003fe706 	br	45684 <__alt_data_end+0xfffde584>
   456e8:	000b883a 	mov	r5,zero
   456ec:	9009883a 	mov	r4,r18
   456f0:	00485a80 	call	485a8 <_sbrk_r>
   456f4:	99000217 	ldw	r4,8(r19)
   456f8:	014003c4 	movi	r5,15
   456fc:	1107c83a 	sub	r3,r2,r4
   45700:	28ffdd0e 	bge	r5,r3,45678 <__alt_data_end+0xfffde578>
   45704:	01400174 	movhi	r5,5
   45708:	29456004 	addi	r5,r5,5504
   4570c:	29400017 	ldw	r5,0(r5)
   45710:	18c00054 	ori	r3,r3,1
   45714:	20c00115 	stw	r3,4(r4)
   45718:	00c00174 	movhi	r3,5
   4571c:	1145c83a 	sub	r2,r2,r5
   45720:	18cc3604 	addi	r3,r3,12504
   45724:	18800015 	stw	r2,0(r3)
   45728:	003fd306 	br	45678 <__alt_data_end+0xfffde578>

0004572c <_free_r>:
   4572c:	28004126 	beq	r5,zero,45834 <_free_r+0x108>
   45730:	defffd04 	addi	sp,sp,-12
   45734:	dc400115 	stw	r17,4(sp)
   45738:	dc000015 	stw	r16,0(sp)
   4573c:	2023883a 	mov	r17,r4
   45740:	2821883a 	mov	r16,r5
   45744:	dfc00215 	stw	ra,8(sp)
   45748:	004d4d80 	call	4d4d8 <__malloc_lock>
   4574c:	81ffff17 	ldw	r7,-4(r16)
   45750:	00bfff84 	movi	r2,-2
   45754:	01000174 	movhi	r4,5
   45758:	81bffe04 	addi	r6,r16,-8
   4575c:	3884703a 	and	r2,r7,r2
   45760:	213fd904 	addi	r4,r4,-156
   45764:	308b883a 	add	r5,r6,r2
   45768:	2a400117 	ldw	r9,4(r5)
   4576c:	22000217 	ldw	r8,8(r4)
   45770:	00ffff04 	movi	r3,-4
   45774:	48c6703a 	and	r3,r9,r3
   45778:	2a005726 	beq	r5,r8,458d8 <_free_r+0x1ac>
   4577c:	28c00115 	stw	r3,4(r5)
   45780:	39c0004c 	andi	r7,r7,1
   45784:	3800091e 	bne	r7,zero,457ac <_free_r+0x80>
   45788:	823ffe17 	ldw	r8,-8(r16)
   4578c:	22400204 	addi	r9,r4,8
   45790:	320dc83a 	sub	r6,r6,r8
   45794:	31c00217 	ldw	r7,8(r6)
   45798:	1205883a 	add	r2,r2,r8
   4579c:	3a406526 	beq	r7,r9,45934 <_free_r+0x208>
   457a0:	32000317 	ldw	r8,12(r6)
   457a4:	3a000315 	stw	r8,12(r7)
   457a8:	41c00215 	stw	r7,8(r8)
   457ac:	28cf883a 	add	r7,r5,r3
   457b0:	39c00117 	ldw	r7,4(r7)
   457b4:	39c0004c 	andi	r7,r7,1
   457b8:	38003a26 	beq	r7,zero,458a4 <_free_r+0x178>
   457bc:	10c00054 	ori	r3,r2,1
   457c0:	30c00115 	stw	r3,4(r6)
   457c4:	3087883a 	add	r3,r6,r2
   457c8:	18800015 	stw	r2,0(r3)
   457cc:	00c07fc4 	movi	r3,511
   457d0:	18801936 	bltu	r3,r2,45838 <_free_r+0x10c>
   457d4:	1004d0fa 	srli	r2,r2,3
   457d8:	01c00044 	movi	r7,1
   457dc:	21400117 	ldw	r5,4(r4)
   457e0:	10c00044 	addi	r3,r2,1
   457e4:	18c7883a 	add	r3,r3,r3
   457e8:	1005d0ba 	srai	r2,r2,2
   457ec:	18c7883a 	add	r3,r3,r3
   457f0:	18c7883a 	add	r3,r3,r3
   457f4:	1907883a 	add	r3,r3,r4
   457f8:	3884983a 	sll	r2,r7,r2
   457fc:	19c00017 	ldw	r7,0(r3)
   45800:	1a3ffe04 	addi	r8,r3,-8
   45804:	1144b03a 	or	r2,r2,r5
   45808:	32000315 	stw	r8,12(r6)
   4580c:	31c00215 	stw	r7,8(r6)
   45810:	20800115 	stw	r2,4(r4)
   45814:	19800015 	stw	r6,0(r3)
   45818:	39800315 	stw	r6,12(r7)
   4581c:	8809883a 	mov	r4,r17
   45820:	dfc00217 	ldw	ra,8(sp)
   45824:	dc400117 	ldw	r17,4(sp)
   45828:	dc000017 	ldw	r16,0(sp)
   4582c:	dec00304 	addi	sp,sp,12
   45830:	004d4fc1 	jmpi	4d4fc <__malloc_unlock>
   45834:	f800283a 	ret
   45838:	100ad27a 	srli	r5,r2,9
   4583c:	00c00104 	movi	r3,4
   45840:	19404a36 	bltu	r3,r5,4596c <_free_r+0x240>
   45844:	100ad1ba 	srli	r5,r2,6
   45848:	28c00e44 	addi	r3,r5,57
   4584c:	18c7883a 	add	r3,r3,r3
   45850:	29400e04 	addi	r5,r5,56
   45854:	18c7883a 	add	r3,r3,r3
   45858:	18c7883a 	add	r3,r3,r3
   4585c:	1909883a 	add	r4,r3,r4
   45860:	20c00017 	ldw	r3,0(r4)
   45864:	01c00174 	movhi	r7,5
   45868:	213ffe04 	addi	r4,r4,-8
   4586c:	39ffd904 	addi	r7,r7,-156
   45870:	20c04426 	beq	r4,r3,45984 <_free_r+0x258>
   45874:	01ffff04 	movi	r7,-4
   45878:	19400117 	ldw	r5,4(r3)
   4587c:	29ca703a 	and	r5,r5,r7
   45880:	1140022e 	bgeu	r2,r5,4588c <_free_r+0x160>
   45884:	18c00217 	ldw	r3,8(r3)
   45888:	20fffb1e 	bne	r4,r3,45878 <__alt_data_end+0xfffde778>
   4588c:	19000317 	ldw	r4,12(r3)
   45890:	31000315 	stw	r4,12(r6)
   45894:	30c00215 	stw	r3,8(r6)
   45898:	21800215 	stw	r6,8(r4)
   4589c:	19800315 	stw	r6,12(r3)
   458a0:	003fde06 	br	4581c <__alt_data_end+0xfffde71c>
   458a4:	29c00217 	ldw	r7,8(r5)
   458a8:	10c5883a 	add	r2,r2,r3
   458ac:	00c00174 	movhi	r3,5
   458b0:	18ffdb04 	addi	r3,r3,-148
   458b4:	38c03b26 	beq	r7,r3,459a4 <_free_r+0x278>
   458b8:	2a000317 	ldw	r8,12(r5)
   458bc:	11400054 	ori	r5,r2,1
   458c0:	3087883a 	add	r3,r6,r2
   458c4:	3a000315 	stw	r8,12(r7)
   458c8:	41c00215 	stw	r7,8(r8)
   458cc:	31400115 	stw	r5,4(r6)
   458d0:	18800015 	stw	r2,0(r3)
   458d4:	003fbd06 	br	457cc <__alt_data_end+0xfffde6cc>
   458d8:	39c0004c 	andi	r7,r7,1
   458dc:	10c5883a 	add	r2,r2,r3
   458e0:	3800071e 	bne	r7,zero,45900 <_free_r+0x1d4>
   458e4:	81fffe17 	ldw	r7,-8(r16)
   458e8:	31cdc83a 	sub	r6,r6,r7
   458ec:	30c00317 	ldw	r3,12(r6)
   458f0:	31400217 	ldw	r5,8(r6)
   458f4:	11c5883a 	add	r2,r2,r7
   458f8:	28c00315 	stw	r3,12(r5)
   458fc:	19400215 	stw	r5,8(r3)
   45900:	10c00054 	ori	r3,r2,1
   45904:	30c00115 	stw	r3,4(r6)
   45908:	00c00174 	movhi	r3,5
   4590c:	18c56104 	addi	r3,r3,5508
   45910:	18c00017 	ldw	r3,0(r3)
   45914:	21800215 	stw	r6,8(r4)
   45918:	10ffc036 	bltu	r2,r3,4581c <__alt_data_end+0xfffde71c>
   4591c:	00800174 	movhi	r2,5
   45920:	108c2d04 	addi	r2,r2,12468
   45924:	11400017 	ldw	r5,0(r2)
   45928:	8809883a 	mov	r4,r17
   4592c:	00456080 	call	45608 <_malloc_trim_r>
   45930:	003fba06 	br	4581c <__alt_data_end+0xfffde71c>
   45934:	28c9883a 	add	r4,r5,r3
   45938:	21000117 	ldw	r4,4(r4)
   4593c:	2100004c 	andi	r4,r4,1
   45940:	2000391e 	bne	r4,zero,45a28 <_free_r+0x2fc>
   45944:	29c00217 	ldw	r7,8(r5)
   45948:	29000317 	ldw	r4,12(r5)
   4594c:	1885883a 	add	r2,r3,r2
   45950:	10c00054 	ori	r3,r2,1
   45954:	39000315 	stw	r4,12(r7)
   45958:	21c00215 	stw	r7,8(r4)
   4595c:	30c00115 	stw	r3,4(r6)
   45960:	308d883a 	add	r6,r6,r2
   45964:	30800015 	stw	r2,0(r6)
   45968:	003fac06 	br	4581c <__alt_data_end+0xfffde71c>
   4596c:	00c00504 	movi	r3,20
   45970:	19401536 	bltu	r3,r5,459c8 <_free_r+0x29c>
   45974:	28c01704 	addi	r3,r5,92
   45978:	18c7883a 	add	r3,r3,r3
   4597c:	294016c4 	addi	r5,r5,91
   45980:	003fb406 	br	45854 <__alt_data_end+0xfffde754>
   45984:	280bd0ba 	srai	r5,r5,2
   45988:	00c00044 	movi	r3,1
   4598c:	38800117 	ldw	r2,4(r7)
   45990:	194a983a 	sll	r5,r3,r5
   45994:	2007883a 	mov	r3,r4
   45998:	2884b03a 	or	r2,r5,r2
   4599c:	38800115 	stw	r2,4(r7)
   459a0:	003fbb06 	br	45890 <__alt_data_end+0xfffde790>
   459a4:	21800515 	stw	r6,20(r4)
   459a8:	21800415 	stw	r6,16(r4)
   459ac:	10c00054 	ori	r3,r2,1
   459b0:	31c00315 	stw	r7,12(r6)
   459b4:	31c00215 	stw	r7,8(r6)
   459b8:	30c00115 	stw	r3,4(r6)
   459bc:	308d883a 	add	r6,r6,r2
   459c0:	30800015 	stw	r2,0(r6)
   459c4:	003f9506 	br	4581c <__alt_data_end+0xfffde71c>
   459c8:	00c01504 	movi	r3,84
   459cc:	19400536 	bltu	r3,r5,459e4 <_free_r+0x2b8>
   459d0:	100ad33a 	srli	r5,r2,12
   459d4:	28c01bc4 	addi	r3,r5,111
   459d8:	18c7883a 	add	r3,r3,r3
   459dc:	29401b84 	addi	r5,r5,110
   459e0:	003f9c06 	br	45854 <__alt_data_end+0xfffde754>
   459e4:	00c05504 	movi	r3,340
   459e8:	19400536 	bltu	r3,r5,45a00 <_free_r+0x2d4>
   459ec:	100ad3fa 	srli	r5,r2,15
   459f0:	28c01e04 	addi	r3,r5,120
   459f4:	18c7883a 	add	r3,r3,r3
   459f8:	29401dc4 	addi	r5,r5,119
   459fc:	003f9506 	br	45854 <__alt_data_end+0xfffde754>
   45a00:	00c15504 	movi	r3,1364
   45a04:	19400536 	bltu	r3,r5,45a1c <_free_r+0x2f0>
   45a08:	100ad4ba 	srli	r5,r2,18
   45a0c:	28c01f44 	addi	r3,r5,125
   45a10:	18c7883a 	add	r3,r3,r3
   45a14:	29401f04 	addi	r5,r5,124
   45a18:	003f8e06 	br	45854 <__alt_data_end+0xfffde754>
   45a1c:	00c03f84 	movi	r3,254
   45a20:	01401f84 	movi	r5,126
   45a24:	003f8b06 	br	45854 <__alt_data_end+0xfffde754>
   45a28:	10c00054 	ori	r3,r2,1
   45a2c:	30c00115 	stw	r3,4(r6)
   45a30:	308d883a 	add	r6,r6,r2
   45a34:	30800015 	stw	r2,0(r6)
   45a38:	003f7806 	br	4581c <__alt_data_end+0xfffde71c>

00045a3c <__sfvwrite_r>:
   45a3c:	30800217 	ldw	r2,8(r6)
   45a40:	10006726 	beq	r2,zero,45be0 <__sfvwrite_r+0x1a4>
   45a44:	28c0030b 	ldhu	r3,12(r5)
   45a48:	defff404 	addi	sp,sp,-48
   45a4c:	dd400715 	stw	r21,28(sp)
   45a50:	dd000615 	stw	r20,24(sp)
   45a54:	dc000215 	stw	r16,8(sp)
   45a58:	dfc00b15 	stw	ra,44(sp)
   45a5c:	df000a15 	stw	fp,40(sp)
   45a60:	ddc00915 	stw	r23,36(sp)
   45a64:	dd800815 	stw	r22,32(sp)
   45a68:	dcc00515 	stw	r19,20(sp)
   45a6c:	dc800415 	stw	r18,16(sp)
   45a70:	dc400315 	stw	r17,12(sp)
   45a74:	1880020c 	andi	r2,r3,8
   45a78:	2821883a 	mov	r16,r5
   45a7c:	202b883a 	mov	r21,r4
   45a80:	3029883a 	mov	r20,r6
   45a84:	10002726 	beq	r2,zero,45b24 <__sfvwrite_r+0xe8>
   45a88:	28800417 	ldw	r2,16(r5)
   45a8c:	10002526 	beq	r2,zero,45b24 <__sfvwrite_r+0xe8>
   45a90:	1880008c 	andi	r2,r3,2
   45a94:	a4400017 	ldw	r17,0(r20)
   45a98:	10002a26 	beq	r2,zero,45b44 <__sfvwrite_r+0x108>
   45a9c:	05a00034 	movhi	r22,32768
   45aa0:	0027883a 	mov	r19,zero
   45aa4:	0025883a 	mov	r18,zero
   45aa8:	b5bf0004 	addi	r22,r22,-1024
   45aac:	980d883a 	mov	r6,r19
   45ab0:	a809883a 	mov	r4,r21
   45ab4:	90004626 	beq	r18,zero,45bd0 <__sfvwrite_r+0x194>
   45ab8:	900f883a 	mov	r7,r18
   45abc:	b480022e 	bgeu	r22,r18,45ac8 <__sfvwrite_r+0x8c>
   45ac0:	01e00034 	movhi	r7,32768
   45ac4:	39ff0004 	addi	r7,r7,-1024
   45ac8:	80800917 	ldw	r2,36(r16)
   45acc:	81400717 	ldw	r5,28(r16)
   45ad0:	103ee83a 	callr	r2
   45ad4:	0080570e 	bge	zero,r2,45c34 <__sfvwrite_r+0x1f8>
   45ad8:	a0c00217 	ldw	r3,8(r20)
   45adc:	98a7883a 	add	r19,r19,r2
   45ae0:	90a5c83a 	sub	r18,r18,r2
   45ae4:	1885c83a 	sub	r2,r3,r2
   45ae8:	a0800215 	stw	r2,8(r20)
   45aec:	103fef1e 	bne	r2,zero,45aac <__alt_data_end+0xfffde9ac>
   45af0:	0005883a 	mov	r2,zero
   45af4:	dfc00b17 	ldw	ra,44(sp)
   45af8:	df000a17 	ldw	fp,40(sp)
   45afc:	ddc00917 	ldw	r23,36(sp)
   45b00:	dd800817 	ldw	r22,32(sp)
   45b04:	dd400717 	ldw	r21,28(sp)
   45b08:	dd000617 	ldw	r20,24(sp)
   45b0c:	dcc00517 	ldw	r19,20(sp)
   45b10:	dc800417 	ldw	r18,16(sp)
   45b14:	dc400317 	ldw	r17,12(sp)
   45b18:	dc000217 	ldw	r16,8(sp)
   45b1c:	dec00c04 	addi	sp,sp,48
   45b20:	f800283a 	ret
   45b24:	800b883a 	mov	r5,r16
   45b28:	a809883a 	mov	r4,r21
   45b2c:	00435e40 	call	435e4 <__swsetup_r>
   45b30:	1000eb1e 	bne	r2,zero,45ee0 <__sfvwrite_r+0x4a4>
   45b34:	80c0030b 	ldhu	r3,12(r16)
   45b38:	a4400017 	ldw	r17,0(r20)
   45b3c:	1880008c 	andi	r2,r3,2
   45b40:	103fd61e 	bne	r2,zero,45a9c <__alt_data_end+0xfffde99c>
   45b44:	1880004c 	andi	r2,r3,1
   45b48:	10003f1e 	bne	r2,zero,45c48 <__sfvwrite_r+0x20c>
   45b4c:	0039883a 	mov	fp,zero
   45b50:	0025883a 	mov	r18,zero
   45b54:	90001a26 	beq	r18,zero,45bc0 <__sfvwrite_r+0x184>
   45b58:	1880800c 	andi	r2,r3,512
   45b5c:	84c00217 	ldw	r19,8(r16)
   45b60:	10002126 	beq	r2,zero,45be8 <__sfvwrite_r+0x1ac>
   45b64:	982f883a 	mov	r23,r19
   45b68:	94c09336 	bltu	r18,r19,45db8 <__sfvwrite_r+0x37c>
   45b6c:	1881200c 	andi	r2,r3,1152
   45b70:	10009e1e 	bne	r2,zero,45dec <__sfvwrite_r+0x3b0>
   45b74:	81000017 	ldw	r4,0(r16)
   45b78:	b80d883a 	mov	r6,r23
   45b7c:	e00b883a 	mov	r5,fp
   45b80:	0046d500 	call	46d50 <memmove>
   45b84:	80c00217 	ldw	r3,8(r16)
   45b88:	81000017 	ldw	r4,0(r16)
   45b8c:	9005883a 	mov	r2,r18
   45b90:	1ce7c83a 	sub	r19,r3,r19
   45b94:	25cf883a 	add	r7,r4,r23
   45b98:	84c00215 	stw	r19,8(r16)
   45b9c:	81c00015 	stw	r7,0(r16)
   45ba0:	a0c00217 	ldw	r3,8(r20)
   45ba4:	e0b9883a 	add	fp,fp,r2
   45ba8:	90a5c83a 	sub	r18,r18,r2
   45bac:	18a7c83a 	sub	r19,r3,r2
   45bb0:	a4c00215 	stw	r19,8(r20)
   45bb4:	983fce26 	beq	r19,zero,45af0 <__alt_data_end+0xfffde9f0>
   45bb8:	80c0030b 	ldhu	r3,12(r16)
   45bbc:	903fe61e 	bne	r18,zero,45b58 <__alt_data_end+0xfffdea58>
   45bc0:	8f000017 	ldw	fp,0(r17)
   45bc4:	8c800117 	ldw	r18,4(r17)
   45bc8:	8c400204 	addi	r17,r17,8
   45bcc:	003fe106 	br	45b54 <__alt_data_end+0xfffdea54>
   45bd0:	8cc00017 	ldw	r19,0(r17)
   45bd4:	8c800117 	ldw	r18,4(r17)
   45bd8:	8c400204 	addi	r17,r17,8
   45bdc:	003fb306 	br	45aac <__alt_data_end+0xfffde9ac>
   45be0:	0005883a 	mov	r2,zero
   45be4:	f800283a 	ret
   45be8:	81000017 	ldw	r4,0(r16)
   45bec:	80800417 	ldw	r2,16(r16)
   45bf0:	11005736 	bltu	r2,r4,45d50 <__sfvwrite_r+0x314>
   45bf4:	85c00517 	ldw	r23,20(r16)
   45bf8:	95c05536 	bltu	r18,r23,45d50 <__sfvwrite_r+0x314>
   45bfc:	00a00034 	movhi	r2,32768
   45c00:	10bfffc4 	addi	r2,r2,-1
   45c04:	9009883a 	mov	r4,r18
   45c08:	1480012e 	bgeu	r2,r18,45c10 <__sfvwrite_r+0x1d4>
   45c0c:	1009883a 	mov	r4,r2
   45c10:	b80b883a 	mov	r5,r23
   45c14:	0040f880 	call	40f88 <__divsi3>
   45c18:	15cf383a 	mul	r7,r2,r23
   45c1c:	81400717 	ldw	r5,28(r16)
   45c20:	80800917 	ldw	r2,36(r16)
   45c24:	e00d883a 	mov	r6,fp
   45c28:	a809883a 	mov	r4,r21
   45c2c:	103ee83a 	callr	r2
   45c30:	00bfdb16 	blt	zero,r2,45ba0 <__alt_data_end+0xfffdeaa0>
   45c34:	8080030b 	ldhu	r2,12(r16)
   45c38:	10801014 	ori	r2,r2,64
   45c3c:	8080030d 	sth	r2,12(r16)
   45c40:	00bfffc4 	movi	r2,-1
   45c44:	003fab06 	br	45af4 <__alt_data_end+0xfffde9f4>
   45c48:	0027883a 	mov	r19,zero
   45c4c:	0011883a 	mov	r8,zero
   45c50:	0039883a 	mov	fp,zero
   45c54:	0025883a 	mov	r18,zero
   45c58:	90001f26 	beq	r18,zero,45cd8 <__sfvwrite_r+0x29c>
   45c5c:	40005a26 	beq	r8,zero,45dc8 <__sfvwrite_r+0x38c>
   45c60:	982d883a 	mov	r22,r19
   45c64:	94c0012e 	bgeu	r18,r19,45c6c <__sfvwrite_r+0x230>
   45c68:	902d883a 	mov	r22,r18
   45c6c:	81000017 	ldw	r4,0(r16)
   45c70:	80800417 	ldw	r2,16(r16)
   45c74:	b02f883a 	mov	r23,r22
   45c78:	81c00517 	ldw	r7,20(r16)
   45c7c:	1100032e 	bgeu	r2,r4,45c8c <__sfvwrite_r+0x250>
   45c80:	80c00217 	ldw	r3,8(r16)
   45c84:	38c7883a 	add	r3,r7,r3
   45c88:	1d801816 	blt	r3,r22,45cec <__sfvwrite_r+0x2b0>
   45c8c:	b1c03e16 	blt	r22,r7,45d88 <__sfvwrite_r+0x34c>
   45c90:	80800917 	ldw	r2,36(r16)
   45c94:	81400717 	ldw	r5,28(r16)
   45c98:	e00d883a 	mov	r6,fp
   45c9c:	da000115 	stw	r8,4(sp)
   45ca0:	a809883a 	mov	r4,r21
   45ca4:	103ee83a 	callr	r2
   45ca8:	102f883a 	mov	r23,r2
   45cac:	da000117 	ldw	r8,4(sp)
   45cb0:	00bfe00e 	bge	zero,r2,45c34 <__alt_data_end+0xfffdeb34>
   45cb4:	9de7c83a 	sub	r19,r19,r23
   45cb8:	98001f26 	beq	r19,zero,45d38 <__sfvwrite_r+0x2fc>
   45cbc:	a0800217 	ldw	r2,8(r20)
   45cc0:	e5f9883a 	add	fp,fp,r23
   45cc4:	95e5c83a 	sub	r18,r18,r23
   45cc8:	15efc83a 	sub	r23,r2,r23
   45ccc:	a5c00215 	stw	r23,8(r20)
   45cd0:	b83f8726 	beq	r23,zero,45af0 <__alt_data_end+0xfffde9f0>
   45cd4:	903fe11e 	bne	r18,zero,45c5c <__alt_data_end+0xfffdeb5c>
   45cd8:	8f000017 	ldw	fp,0(r17)
   45cdc:	8c800117 	ldw	r18,4(r17)
   45ce0:	0011883a 	mov	r8,zero
   45ce4:	8c400204 	addi	r17,r17,8
   45ce8:	003fdb06 	br	45c58 <__alt_data_end+0xfffdeb58>
   45cec:	180d883a 	mov	r6,r3
   45cf0:	e00b883a 	mov	r5,fp
   45cf4:	da000115 	stw	r8,4(sp)
   45cf8:	d8c00015 	stw	r3,0(sp)
   45cfc:	0046d500 	call	46d50 <memmove>
   45d00:	d8c00017 	ldw	r3,0(sp)
   45d04:	80800017 	ldw	r2,0(r16)
   45d08:	800b883a 	mov	r5,r16
   45d0c:	a809883a 	mov	r4,r21
   45d10:	10c5883a 	add	r2,r2,r3
   45d14:	80800015 	stw	r2,0(r16)
   45d18:	d8c00015 	stw	r3,0(sp)
   45d1c:	00451dc0 	call	451dc <_fflush_r>
   45d20:	d8c00017 	ldw	r3,0(sp)
   45d24:	da000117 	ldw	r8,4(sp)
   45d28:	103fc21e 	bne	r2,zero,45c34 <__alt_data_end+0xfffdeb34>
   45d2c:	182f883a 	mov	r23,r3
   45d30:	9de7c83a 	sub	r19,r19,r23
   45d34:	983fe11e 	bne	r19,zero,45cbc <__alt_data_end+0xfffdebbc>
   45d38:	800b883a 	mov	r5,r16
   45d3c:	a809883a 	mov	r4,r21
   45d40:	00451dc0 	call	451dc <_fflush_r>
   45d44:	103fbb1e 	bne	r2,zero,45c34 <__alt_data_end+0xfffdeb34>
   45d48:	0011883a 	mov	r8,zero
   45d4c:	003fdb06 	br	45cbc <__alt_data_end+0xfffdebbc>
   45d50:	94c0012e 	bgeu	r18,r19,45d58 <__sfvwrite_r+0x31c>
   45d54:	9027883a 	mov	r19,r18
   45d58:	980d883a 	mov	r6,r19
   45d5c:	e00b883a 	mov	r5,fp
   45d60:	0046d500 	call	46d50 <memmove>
   45d64:	80800217 	ldw	r2,8(r16)
   45d68:	80c00017 	ldw	r3,0(r16)
   45d6c:	14c5c83a 	sub	r2,r2,r19
   45d70:	1cc7883a 	add	r3,r3,r19
   45d74:	80800215 	stw	r2,8(r16)
   45d78:	80c00015 	stw	r3,0(r16)
   45d7c:	10004326 	beq	r2,zero,45e8c <__sfvwrite_r+0x450>
   45d80:	9805883a 	mov	r2,r19
   45d84:	003f8606 	br	45ba0 <__alt_data_end+0xfffdeaa0>
   45d88:	b00d883a 	mov	r6,r22
   45d8c:	e00b883a 	mov	r5,fp
   45d90:	da000115 	stw	r8,4(sp)
   45d94:	0046d500 	call	46d50 <memmove>
   45d98:	80800217 	ldw	r2,8(r16)
   45d9c:	80c00017 	ldw	r3,0(r16)
   45da0:	da000117 	ldw	r8,4(sp)
   45da4:	1585c83a 	sub	r2,r2,r22
   45da8:	1dad883a 	add	r22,r3,r22
   45dac:	80800215 	stw	r2,8(r16)
   45db0:	85800015 	stw	r22,0(r16)
   45db4:	003fbf06 	br	45cb4 <__alt_data_end+0xfffdebb4>
   45db8:	81000017 	ldw	r4,0(r16)
   45dbc:	9027883a 	mov	r19,r18
   45dc0:	902f883a 	mov	r23,r18
   45dc4:	003f6c06 	br	45b78 <__alt_data_end+0xfffdea78>
   45dc8:	900d883a 	mov	r6,r18
   45dcc:	01400284 	movi	r5,10
   45dd0:	e009883a 	mov	r4,fp
   45dd4:	0046b240 	call	46b24 <memchr>
   45dd8:	10003e26 	beq	r2,zero,45ed4 <__sfvwrite_r+0x498>
   45ddc:	10800044 	addi	r2,r2,1
   45de0:	1727c83a 	sub	r19,r2,fp
   45de4:	02000044 	movi	r8,1
   45de8:	003f9d06 	br	45c60 <__alt_data_end+0xfffdeb60>
   45dec:	80800517 	ldw	r2,20(r16)
   45df0:	81400417 	ldw	r5,16(r16)
   45df4:	81c00017 	ldw	r7,0(r16)
   45df8:	10a7883a 	add	r19,r2,r2
   45dfc:	9885883a 	add	r2,r19,r2
   45e00:	1026d7fa 	srli	r19,r2,31
   45e04:	396dc83a 	sub	r22,r7,r5
   45e08:	b1000044 	addi	r4,r22,1
   45e0c:	9885883a 	add	r2,r19,r2
   45e10:	1027d07a 	srai	r19,r2,1
   45e14:	2485883a 	add	r2,r4,r18
   45e18:	980d883a 	mov	r6,r19
   45e1c:	9880022e 	bgeu	r19,r2,45e28 <__sfvwrite_r+0x3ec>
   45e20:	1027883a 	mov	r19,r2
   45e24:	100d883a 	mov	r6,r2
   45e28:	18c1000c 	andi	r3,r3,1024
   45e2c:	18001c26 	beq	r3,zero,45ea0 <__sfvwrite_r+0x464>
   45e30:	300b883a 	mov	r5,r6
   45e34:	a809883a 	mov	r4,r21
   45e38:	00463180 	call	46318 <_malloc_r>
   45e3c:	102f883a 	mov	r23,r2
   45e40:	10002926 	beq	r2,zero,45ee8 <__sfvwrite_r+0x4ac>
   45e44:	81400417 	ldw	r5,16(r16)
   45e48:	b00d883a 	mov	r6,r22
   45e4c:	1009883a 	mov	r4,r2
   45e50:	0046c080 	call	46c08 <memcpy>
   45e54:	8080030b 	ldhu	r2,12(r16)
   45e58:	00fedfc4 	movi	r3,-1153
   45e5c:	10c4703a 	and	r2,r2,r3
   45e60:	10802014 	ori	r2,r2,128
   45e64:	8080030d 	sth	r2,12(r16)
   45e68:	bd89883a 	add	r4,r23,r22
   45e6c:	9d8fc83a 	sub	r7,r19,r22
   45e70:	85c00415 	stw	r23,16(r16)
   45e74:	84c00515 	stw	r19,20(r16)
   45e78:	81000015 	stw	r4,0(r16)
   45e7c:	9027883a 	mov	r19,r18
   45e80:	81c00215 	stw	r7,8(r16)
   45e84:	902f883a 	mov	r23,r18
   45e88:	003f3b06 	br	45b78 <__alt_data_end+0xfffdea78>
   45e8c:	800b883a 	mov	r5,r16
   45e90:	a809883a 	mov	r4,r21
   45e94:	00451dc0 	call	451dc <_fflush_r>
   45e98:	103fb926 	beq	r2,zero,45d80 <__alt_data_end+0xfffdec80>
   45e9c:	003f6506 	br	45c34 <__alt_data_end+0xfffdeb34>
   45ea0:	a809883a 	mov	r4,r21
   45ea4:	0047fd00 	call	47fd0 <_realloc_r>
   45ea8:	102f883a 	mov	r23,r2
   45eac:	103fee1e 	bne	r2,zero,45e68 <__alt_data_end+0xfffded68>
   45eb0:	81400417 	ldw	r5,16(r16)
   45eb4:	a809883a 	mov	r4,r21
   45eb8:	004572c0 	call	4572c <_free_r>
   45ebc:	8080030b 	ldhu	r2,12(r16)
   45ec0:	00ffdfc4 	movi	r3,-129
   45ec4:	1884703a 	and	r2,r3,r2
   45ec8:	00c00304 	movi	r3,12
   45ecc:	a8c00015 	stw	r3,0(r21)
   45ed0:	003f5906 	br	45c38 <__alt_data_end+0xfffdeb38>
   45ed4:	94c00044 	addi	r19,r18,1
   45ed8:	02000044 	movi	r8,1
   45edc:	003f6006 	br	45c60 <__alt_data_end+0xfffdeb60>
   45ee0:	00bfffc4 	movi	r2,-1
   45ee4:	003f0306 	br	45af4 <__alt_data_end+0xfffde9f4>
   45ee8:	00800304 	movi	r2,12
   45eec:	a8800015 	stw	r2,0(r21)
   45ef0:	8080030b 	ldhu	r2,12(r16)
   45ef4:	003f5006 	br	45c38 <__alt_data_end+0xfffdeb38>

00045ef8 <_fwalk>:
   45ef8:	defff704 	addi	sp,sp,-36
   45efc:	dd000415 	stw	r20,16(sp)
   45f00:	dfc00815 	stw	ra,32(sp)
   45f04:	ddc00715 	stw	r23,28(sp)
   45f08:	dd800615 	stw	r22,24(sp)
   45f0c:	dd400515 	stw	r21,20(sp)
   45f10:	dcc00315 	stw	r19,12(sp)
   45f14:	dc800215 	stw	r18,8(sp)
   45f18:	dc400115 	stw	r17,4(sp)
   45f1c:	dc000015 	stw	r16,0(sp)
   45f20:	2500b804 	addi	r20,r4,736
   45f24:	a0002326 	beq	r20,zero,45fb4 <_fwalk+0xbc>
   45f28:	282b883a 	mov	r21,r5
   45f2c:	002f883a 	mov	r23,zero
   45f30:	05800044 	movi	r22,1
   45f34:	04ffffc4 	movi	r19,-1
   45f38:	a4400117 	ldw	r17,4(r20)
   45f3c:	a4800217 	ldw	r18,8(r20)
   45f40:	8c7fffc4 	addi	r17,r17,-1
   45f44:	88000d16 	blt	r17,zero,45f7c <_fwalk+0x84>
   45f48:	94000304 	addi	r16,r18,12
   45f4c:	94800384 	addi	r18,r18,14
   45f50:	8080000b 	ldhu	r2,0(r16)
   45f54:	8c7fffc4 	addi	r17,r17,-1
   45f58:	813ffd04 	addi	r4,r16,-12
   45f5c:	b080042e 	bgeu	r22,r2,45f70 <_fwalk+0x78>
   45f60:	9080000f 	ldh	r2,0(r18)
   45f64:	14c00226 	beq	r2,r19,45f70 <_fwalk+0x78>
   45f68:	a83ee83a 	callr	r21
   45f6c:	b8aeb03a 	or	r23,r23,r2
   45f70:	84001a04 	addi	r16,r16,104
   45f74:	94801a04 	addi	r18,r18,104
   45f78:	8cfff51e 	bne	r17,r19,45f50 <__alt_data_end+0xfffdee50>
   45f7c:	a5000017 	ldw	r20,0(r20)
   45f80:	a03fed1e 	bne	r20,zero,45f38 <__alt_data_end+0xfffdee38>
   45f84:	b805883a 	mov	r2,r23
   45f88:	dfc00817 	ldw	ra,32(sp)
   45f8c:	ddc00717 	ldw	r23,28(sp)
   45f90:	dd800617 	ldw	r22,24(sp)
   45f94:	dd400517 	ldw	r21,20(sp)
   45f98:	dd000417 	ldw	r20,16(sp)
   45f9c:	dcc00317 	ldw	r19,12(sp)
   45fa0:	dc800217 	ldw	r18,8(sp)
   45fa4:	dc400117 	ldw	r17,4(sp)
   45fa8:	dc000017 	ldw	r16,0(sp)
   45fac:	dec00904 	addi	sp,sp,36
   45fb0:	f800283a 	ret
   45fb4:	002f883a 	mov	r23,zero
   45fb8:	003ff206 	br	45f84 <__alt_data_end+0xfffdee84>

00045fbc <_fwalk_reent>:
   45fbc:	defff704 	addi	sp,sp,-36
   45fc0:	dd000415 	stw	r20,16(sp)
   45fc4:	dfc00815 	stw	ra,32(sp)
   45fc8:	ddc00715 	stw	r23,28(sp)
   45fcc:	dd800615 	stw	r22,24(sp)
   45fd0:	dd400515 	stw	r21,20(sp)
   45fd4:	dcc00315 	stw	r19,12(sp)
   45fd8:	dc800215 	stw	r18,8(sp)
   45fdc:	dc400115 	stw	r17,4(sp)
   45fe0:	dc000015 	stw	r16,0(sp)
   45fe4:	2500b804 	addi	r20,r4,736
   45fe8:	a0002326 	beq	r20,zero,46078 <_fwalk_reent+0xbc>
   45fec:	282b883a 	mov	r21,r5
   45ff0:	2027883a 	mov	r19,r4
   45ff4:	002f883a 	mov	r23,zero
   45ff8:	05800044 	movi	r22,1
   45ffc:	04bfffc4 	movi	r18,-1
   46000:	a4400117 	ldw	r17,4(r20)
   46004:	a4000217 	ldw	r16,8(r20)
   46008:	8c7fffc4 	addi	r17,r17,-1
   4600c:	88000c16 	blt	r17,zero,46040 <_fwalk_reent+0x84>
   46010:	84000304 	addi	r16,r16,12
   46014:	8080000b 	ldhu	r2,0(r16)
   46018:	8c7fffc4 	addi	r17,r17,-1
   4601c:	817ffd04 	addi	r5,r16,-12
   46020:	b080052e 	bgeu	r22,r2,46038 <_fwalk_reent+0x7c>
   46024:	8080008f 	ldh	r2,2(r16)
   46028:	9809883a 	mov	r4,r19
   4602c:	14800226 	beq	r2,r18,46038 <_fwalk_reent+0x7c>
   46030:	a83ee83a 	callr	r21
   46034:	b8aeb03a 	or	r23,r23,r2
   46038:	84001a04 	addi	r16,r16,104
   4603c:	8cbff51e 	bne	r17,r18,46014 <__alt_data_end+0xfffdef14>
   46040:	a5000017 	ldw	r20,0(r20)
   46044:	a03fee1e 	bne	r20,zero,46000 <__alt_data_end+0xfffdef00>
   46048:	b805883a 	mov	r2,r23
   4604c:	dfc00817 	ldw	ra,32(sp)
   46050:	ddc00717 	ldw	r23,28(sp)
   46054:	dd800617 	ldw	r22,24(sp)
   46058:	dd400517 	ldw	r21,20(sp)
   4605c:	dd000417 	ldw	r20,16(sp)
   46060:	dcc00317 	ldw	r19,12(sp)
   46064:	dc800217 	ldw	r18,8(sp)
   46068:	dc400117 	ldw	r17,4(sp)
   4606c:	dc000017 	ldw	r16,0(sp)
   46070:	dec00904 	addi	sp,sp,36
   46074:	f800283a 	ret
   46078:	002f883a 	mov	r23,zero
   4607c:	003ff206 	br	46048 <__alt_data_end+0xfffdef48>

00046080 <_setlocale_r>:
   46080:	30001b26 	beq	r6,zero,460f0 <_setlocale_r+0x70>
   46084:	01400174 	movhi	r5,5
   46088:	defffe04 	addi	sp,sp,-8
   4608c:	297e5304 	addi	r5,r5,-1716
   46090:	3009883a 	mov	r4,r6
   46094:	dc000015 	stw	r16,0(sp)
   46098:	dfc00115 	stw	ra,4(sp)
   4609c:	3021883a 	mov	r16,r6
   460a0:	00487380 	call	48738 <strcmp>
   460a4:	1000061e 	bne	r2,zero,460c0 <_setlocale_r+0x40>
   460a8:	00800174 	movhi	r2,5
   460ac:	10be5204 	addi	r2,r2,-1720
   460b0:	dfc00117 	ldw	ra,4(sp)
   460b4:	dc000017 	ldw	r16,0(sp)
   460b8:	dec00204 	addi	sp,sp,8
   460bc:	f800283a 	ret
   460c0:	01400174 	movhi	r5,5
   460c4:	297e5204 	addi	r5,r5,-1720
   460c8:	8009883a 	mov	r4,r16
   460cc:	00487380 	call	48738 <strcmp>
   460d0:	103ff526 	beq	r2,zero,460a8 <__alt_data_end+0xfffdefa8>
   460d4:	01400174 	movhi	r5,5
   460d8:	297e3d04 	addi	r5,r5,-1804
   460dc:	8009883a 	mov	r4,r16
   460e0:	00487380 	call	48738 <strcmp>
   460e4:	103ff026 	beq	r2,zero,460a8 <__alt_data_end+0xfffdefa8>
   460e8:	0005883a 	mov	r2,zero
   460ec:	003ff006 	br	460b0 <__alt_data_end+0xfffdefb0>
   460f0:	00800174 	movhi	r2,5
   460f4:	10be5204 	addi	r2,r2,-1720
   460f8:	f800283a 	ret

000460fc <__locale_charset>:
   460fc:	00800174 	movhi	r2,5
   46100:	10bfc304 	addi	r2,r2,-244
   46104:	f800283a 	ret

00046108 <__locale_mb_cur_max>:
   46108:	00800174 	movhi	r2,5
   4610c:	10855f04 	addi	r2,r2,5500
   46110:	10800017 	ldw	r2,0(r2)
   46114:	f800283a 	ret

00046118 <__locale_msgcharset>:
   46118:	00800174 	movhi	r2,5
   4611c:	10bfbb04 	addi	r2,r2,-276
   46120:	f800283a 	ret

00046124 <__locale_cjk_lang>:
   46124:	0005883a 	mov	r2,zero
   46128:	f800283a 	ret

0004612c <_localeconv_r>:
   4612c:	00800174 	movhi	r2,5
   46130:	10bfcb04 	addi	r2,r2,-212
   46134:	f800283a 	ret

00046138 <setlocale>:
   46138:	00800174 	movhi	r2,5
   4613c:	10855e04 	addi	r2,r2,5496
   46140:	280d883a 	mov	r6,r5
   46144:	200b883a 	mov	r5,r4
   46148:	11000017 	ldw	r4,0(r2)
   4614c:	00460801 	jmpi	46080 <_setlocale_r>

00046150 <localeconv>:
   46150:	00800174 	movhi	r2,5
   46154:	10bfcb04 	addi	r2,r2,-212
   46158:	f800283a 	ret

0004615c <__smakebuf_r>:
   4615c:	2880030b 	ldhu	r2,12(r5)
   46160:	10c0008c 	andi	r3,r2,2
   46164:	1800411e 	bne	r3,zero,4626c <__smakebuf_r+0x110>
   46168:	deffec04 	addi	sp,sp,-80
   4616c:	dc000f15 	stw	r16,60(sp)
   46170:	2821883a 	mov	r16,r5
   46174:	2940038f 	ldh	r5,14(r5)
   46178:	dc401015 	stw	r17,64(sp)
   4617c:	dfc01315 	stw	ra,76(sp)
   46180:	dcc01215 	stw	r19,72(sp)
   46184:	dc801115 	stw	r18,68(sp)
   46188:	2023883a 	mov	r17,r4
   4618c:	28001c16 	blt	r5,zero,46200 <__smakebuf_r+0xa4>
   46190:	d80d883a 	mov	r6,sp
   46194:	004a2e00 	call	4a2e0 <_fstat_r>
   46198:	10001816 	blt	r2,zero,461fc <__smakebuf_r+0xa0>
   4619c:	d8800117 	ldw	r2,4(sp)
   461a0:	00e00014 	movui	r3,32768
   461a4:	10bc000c 	andi	r2,r2,61440
   461a8:	14c80020 	cmpeqi	r19,r2,8192
   461ac:	10c03726 	beq	r2,r3,4628c <__smakebuf_r+0x130>
   461b0:	80c0030b 	ldhu	r3,12(r16)
   461b4:	18c20014 	ori	r3,r3,2048
   461b8:	80c0030d 	sth	r3,12(r16)
   461bc:	00c80004 	movi	r3,8192
   461c0:	10c0521e 	bne	r2,r3,4630c <__smakebuf_r+0x1b0>
   461c4:	8140038f 	ldh	r5,14(r16)
   461c8:	8809883a 	mov	r4,r17
   461cc:	004a33c0 	call	4a33c <_isatty_r>
   461d0:	10004c26 	beq	r2,zero,46304 <__smakebuf_r+0x1a8>
   461d4:	8080030b 	ldhu	r2,12(r16)
   461d8:	80c010c4 	addi	r3,r16,67
   461dc:	80c00015 	stw	r3,0(r16)
   461e0:	10800054 	ori	r2,r2,1
   461e4:	8080030d 	sth	r2,12(r16)
   461e8:	00800044 	movi	r2,1
   461ec:	80c00415 	stw	r3,16(r16)
   461f0:	80800515 	stw	r2,20(r16)
   461f4:	04810004 	movi	r18,1024
   461f8:	00000706 	br	46218 <__smakebuf_r+0xbc>
   461fc:	8080030b 	ldhu	r2,12(r16)
   46200:	10c0200c 	andi	r3,r2,128
   46204:	18001f1e 	bne	r3,zero,46284 <__smakebuf_r+0x128>
   46208:	04810004 	movi	r18,1024
   4620c:	10820014 	ori	r2,r2,2048
   46210:	8080030d 	sth	r2,12(r16)
   46214:	0027883a 	mov	r19,zero
   46218:	900b883a 	mov	r5,r18
   4621c:	8809883a 	mov	r4,r17
   46220:	00463180 	call	46318 <_malloc_r>
   46224:	10002c26 	beq	r2,zero,462d8 <__smakebuf_r+0x17c>
   46228:	80c0030b 	ldhu	r3,12(r16)
   4622c:	01000134 	movhi	r4,4
   46230:	21149c04 	addi	r4,r4,21104
   46234:	89000f15 	stw	r4,60(r17)
   46238:	18c02014 	ori	r3,r3,128
   4623c:	80c0030d 	sth	r3,12(r16)
   46240:	80800015 	stw	r2,0(r16)
   46244:	80800415 	stw	r2,16(r16)
   46248:	84800515 	stw	r18,20(r16)
   4624c:	98001a1e 	bne	r19,zero,462b8 <__smakebuf_r+0x15c>
   46250:	dfc01317 	ldw	ra,76(sp)
   46254:	dcc01217 	ldw	r19,72(sp)
   46258:	dc801117 	ldw	r18,68(sp)
   4625c:	dc401017 	ldw	r17,64(sp)
   46260:	dc000f17 	ldw	r16,60(sp)
   46264:	dec01404 	addi	sp,sp,80
   46268:	f800283a 	ret
   4626c:	288010c4 	addi	r2,r5,67
   46270:	28800015 	stw	r2,0(r5)
   46274:	28800415 	stw	r2,16(r5)
   46278:	00800044 	movi	r2,1
   4627c:	28800515 	stw	r2,20(r5)
   46280:	f800283a 	ret
   46284:	04801004 	movi	r18,64
   46288:	003fe006 	br	4620c <__alt_data_end+0xfffdf10c>
   4628c:	81000a17 	ldw	r4,40(r16)
   46290:	00c00174 	movhi	r3,5
   46294:	18e1b504 	addi	r3,r3,-31020
   46298:	20ffc51e 	bne	r4,r3,461b0 <__alt_data_end+0xfffdf0b0>
   4629c:	8080030b 	ldhu	r2,12(r16)
   462a0:	04810004 	movi	r18,1024
   462a4:	84801315 	stw	r18,76(r16)
   462a8:	1484b03a 	or	r2,r2,r18
   462ac:	8080030d 	sth	r2,12(r16)
   462b0:	0027883a 	mov	r19,zero
   462b4:	003fd806 	br	46218 <__alt_data_end+0xfffdf118>
   462b8:	8140038f 	ldh	r5,14(r16)
   462bc:	8809883a 	mov	r4,r17
   462c0:	004a33c0 	call	4a33c <_isatty_r>
   462c4:	103fe226 	beq	r2,zero,46250 <__alt_data_end+0xfffdf150>
   462c8:	8080030b 	ldhu	r2,12(r16)
   462cc:	10800054 	ori	r2,r2,1
   462d0:	8080030d 	sth	r2,12(r16)
   462d4:	003fde06 	br	46250 <__alt_data_end+0xfffdf150>
   462d8:	8080030b 	ldhu	r2,12(r16)
   462dc:	10c0800c 	andi	r3,r2,512
   462e0:	183fdb1e 	bne	r3,zero,46250 <__alt_data_end+0xfffdf150>
   462e4:	10800094 	ori	r2,r2,2
   462e8:	80c010c4 	addi	r3,r16,67
   462ec:	8080030d 	sth	r2,12(r16)
   462f0:	00800044 	movi	r2,1
   462f4:	80c00015 	stw	r3,0(r16)
   462f8:	80c00415 	stw	r3,16(r16)
   462fc:	80800515 	stw	r2,20(r16)
   46300:	003fd306 	br	46250 <__alt_data_end+0xfffdf150>
   46304:	04810004 	movi	r18,1024
   46308:	003fc306 	br	46218 <__alt_data_end+0xfffdf118>
   4630c:	0027883a 	mov	r19,zero
   46310:	04810004 	movi	r18,1024
   46314:	003fc006 	br	46218 <__alt_data_end+0xfffdf118>

00046318 <_malloc_r>:
   46318:	defff504 	addi	sp,sp,-44
   4631c:	dc800315 	stw	r18,12(sp)
   46320:	dfc00a15 	stw	ra,40(sp)
   46324:	df000915 	stw	fp,36(sp)
   46328:	ddc00815 	stw	r23,32(sp)
   4632c:	dd800715 	stw	r22,28(sp)
   46330:	dd400615 	stw	r21,24(sp)
   46334:	dd000515 	stw	r20,20(sp)
   46338:	dcc00415 	stw	r19,16(sp)
   4633c:	dc400215 	stw	r17,8(sp)
   46340:	dc000115 	stw	r16,4(sp)
   46344:	288002c4 	addi	r2,r5,11
   46348:	00c00584 	movi	r3,22
   4634c:	2025883a 	mov	r18,r4
   46350:	18807f2e 	bgeu	r3,r2,46550 <_malloc_r+0x238>
   46354:	047ffe04 	movi	r17,-8
   46358:	1462703a 	and	r17,r2,r17
   4635c:	8800a316 	blt	r17,zero,465ec <_malloc_r+0x2d4>
   46360:	8940a236 	bltu	r17,r5,465ec <_malloc_r+0x2d4>
   46364:	004d4d80 	call	4d4d8 <__malloc_lock>
   46368:	00807dc4 	movi	r2,503
   4636c:	1441e92e 	bgeu	r2,r17,46b14 <_malloc_r+0x7fc>
   46370:	8804d27a 	srli	r2,r17,9
   46374:	1000a126 	beq	r2,zero,465fc <_malloc_r+0x2e4>
   46378:	00c00104 	movi	r3,4
   4637c:	18811e36 	bltu	r3,r2,467f8 <_malloc_r+0x4e0>
   46380:	8804d1ba 	srli	r2,r17,6
   46384:	12000e44 	addi	r8,r2,57
   46388:	11c00e04 	addi	r7,r2,56
   4638c:	4209883a 	add	r4,r8,r8
   46390:	04c00174 	movhi	r19,5
   46394:	2109883a 	add	r4,r4,r4
   46398:	9cffd904 	addi	r19,r19,-156
   4639c:	2109883a 	add	r4,r4,r4
   463a0:	9909883a 	add	r4,r19,r4
   463a4:	24000117 	ldw	r16,4(r4)
   463a8:	213ffe04 	addi	r4,r4,-8
   463ac:	24009726 	beq	r4,r16,4660c <_malloc_r+0x2f4>
   463b0:	80800117 	ldw	r2,4(r16)
   463b4:	01bfff04 	movi	r6,-4
   463b8:	014003c4 	movi	r5,15
   463bc:	1184703a 	and	r2,r2,r6
   463c0:	1447c83a 	sub	r3,r2,r17
   463c4:	28c00716 	blt	r5,r3,463e4 <_malloc_r+0xcc>
   463c8:	1800920e 	bge	r3,zero,46614 <_malloc_r+0x2fc>
   463cc:	84000317 	ldw	r16,12(r16)
   463d0:	24008e26 	beq	r4,r16,4660c <_malloc_r+0x2f4>
   463d4:	80800117 	ldw	r2,4(r16)
   463d8:	1184703a 	and	r2,r2,r6
   463dc:	1447c83a 	sub	r3,r2,r17
   463e0:	28fff90e 	bge	r5,r3,463c8 <__alt_data_end+0xfffdf2c8>
   463e4:	3809883a 	mov	r4,r7
   463e8:	01800174 	movhi	r6,5
   463ec:	9c000417 	ldw	r16,16(r19)
   463f0:	31bfd904 	addi	r6,r6,-156
   463f4:	32000204 	addi	r8,r6,8
   463f8:	82013426 	beq	r16,r8,468cc <_malloc_r+0x5b4>
   463fc:	80c00117 	ldw	r3,4(r16)
   46400:	00bfff04 	movi	r2,-4
   46404:	188e703a 	and	r7,r3,r2
   46408:	3c45c83a 	sub	r2,r7,r17
   4640c:	00c003c4 	movi	r3,15
   46410:	18811f16 	blt	r3,r2,46890 <_malloc_r+0x578>
   46414:	32000515 	stw	r8,20(r6)
   46418:	32000415 	stw	r8,16(r6)
   4641c:	10007f0e 	bge	r2,zero,4661c <_malloc_r+0x304>
   46420:	00807fc4 	movi	r2,511
   46424:	11c0fd36 	bltu	r2,r7,4681c <_malloc_r+0x504>
   46428:	3806d0fa 	srli	r3,r7,3
   4642c:	01c00044 	movi	r7,1
   46430:	30800117 	ldw	r2,4(r6)
   46434:	19400044 	addi	r5,r3,1
   46438:	294b883a 	add	r5,r5,r5
   4643c:	1807d0ba 	srai	r3,r3,2
   46440:	294b883a 	add	r5,r5,r5
   46444:	294b883a 	add	r5,r5,r5
   46448:	298b883a 	add	r5,r5,r6
   4644c:	38c6983a 	sll	r3,r7,r3
   46450:	29c00017 	ldw	r7,0(r5)
   46454:	2a7ffe04 	addi	r9,r5,-8
   46458:	1886b03a 	or	r3,r3,r2
   4645c:	82400315 	stw	r9,12(r16)
   46460:	81c00215 	stw	r7,8(r16)
   46464:	30c00115 	stw	r3,4(r6)
   46468:	2c000015 	stw	r16,0(r5)
   4646c:	3c000315 	stw	r16,12(r7)
   46470:	2005d0ba 	srai	r2,r4,2
   46474:	01400044 	movi	r5,1
   46478:	288a983a 	sll	r5,r5,r2
   4647c:	19406f36 	bltu	r3,r5,4663c <_malloc_r+0x324>
   46480:	28c4703a 	and	r2,r5,r3
   46484:	10000a1e 	bne	r2,zero,464b0 <_malloc_r+0x198>
   46488:	00bfff04 	movi	r2,-4
   4648c:	294b883a 	add	r5,r5,r5
   46490:	2088703a 	and	r4,r4,r2
   46494:	28c4703a 	and	r2,r5,r3
   46498:	21000104 	addi	r4,r4,4
   4649c:	1000041e 	bne	r2,zero,464b0 <_malloc_r+0x198>
   464a0:	294b883a 	add	r5,r5,r5
   464a4:	28c4703a 	and	r2,r5,r3
   464a8:	21000104 	addi	r4,r4,4
   464ac:	103ffc26 	beq	r2,zero,464a0 <__alt_data_end+0xfffdf3a0>
   464b0:	02bfff04 	movi	r10,-4
   464b4:	024003c4 	movi	r9,15
   464b8:	21800044 	addi	r6,r4,1
   464bc:	318d883a 	add	r6,r6,r6
   464c0:	318d883a 	add	r6,r6,r6
   464c4:	318d883a 	add	r6,r6,r6
   464c8:	998d883a 	add	r6,r19,r6
   464cc:	333ffe04 	addi	r12,r6,-8
   464d0:	2017883a 	mov	r11,r4
   464d4:	31800104 	addi	r6,r6,4
   464d8:	34000017 	ldw	r16,0(r6)
   464dc:	31fffd04 	addi	r7,r6,-12
   464e0:	81c0041e 	bne	r16,r7,464f4 <_malloc_r+0x1dc>
   464e4:	0000fb06 	br	468d4 <_malloc_r+0x5bc>
   464e8:	1801030e 	bge	r3,zero,468f8 <_malloc_r+0x5e0>
   464ec:	84000317 	ldw	r16,12(r16)
   464f0:	81c0f826 	beq	r16,r7,468d4 <_malloc_r+0x5bc>
   464f4:	80800117 	ldw	r2,4(r16)
   464f8:	1284703a 	and	r2,r2,r10
   464fc:	1447c83a 	sub	r3,r2,r17
   46500:	48fff90e 	bge	r9,r3,464e8 <__alt_data_end+0xfffdf3e8>
   46504:	80800317 	ldw	r2,12(r16)
   46508:	81000217 	ldw	r4,8(r16)
   4650c:	89400054 	ori	r5,r17,1
   46510:	81400115 	stw	r5,4(r16)
   46514:	20800315 	stw	r2,12(r4)
   46518:	11000215 	stw	r4,8(r2)
   4651c:	8463883a 	add	r17,r16,r17
   46520:	9c400515 	stw	r17,20(r19)
   46524:	9c400415 	stw	r17,16(r19)
   46528:	18800054 	ori	r2,r3,1
   4652c:	88800115 	stw	r2,4(r17)
   46530:	8a000315 	stw	r8,12(r17)
   46534:	8a000215 	stw	r8,8(r17)
   46538:	88e3883a 	add	r17,r17,r3
   4653c:	88c00015 	stw	r3,0(r17)
   46540:	9009883a 	mov	r4,r18
   46544:	004d4fc0 	call	4d4fc <__malloc_unlock>
   46548:	80800204 	addi	r2,r16,8
   4654c:	00001b06 	br	465bc <_malloc_r+0x2a4>
   46550:	04400404 	movi	r17,16
   46554:	89402536 	bltu	r17,r5,465ec <_malloc_r+0x2d4>
   46558:	004d4d80 	call	4d4d8 <__malloc_lock>
   4655c:	00800184 	movi	r2,6
   46560:	01000084 	movi	r4,2
   46564:	04c00174 	movhi	r19,5
   46568:	1085883a 	add	r2,r2,r2
   4656c:	9cffd904 	addi	r19,r19,-156
   46570:	1085883a 	add	r2,r2,r2
   46574:	9885883a 	add	r2,r19,r2
   46578:	14000117 	ldw	r16,4(r2)
   4657c:	10fffe04 	addi	r3,r2,-8
   46580:	80c0d926 	beq	r16,r3,468e8 <_malloc_r+0x5d0>
   46584:	80c00117 	ldw	r3,4(r16)
   46588:	81000317 	ldw	r4,12(r16)
   4658c:	00bfff04 	movi	r2,-4
   46590:	1884703a 	and	r2,r3,r2
   46594:	81400217 	ldw	r5,8(r16)
   46598:	8085883a 	add	r2,r16,r2
   4659c:	10c00117 	ldw	r3,4(r2)
   465a0:	29000315 	stw	r4,12(r5)
   465a4:	21400215 	stw	r5,8(r4)
   465a8:	18c00054 	ori	r3,r3,1
   465ac:	10c00115 	stw	r3,4(r2)
   465b0:	9009883a 	mov	r4,r18
   465b4:	004d4fc0 	call	4d4fc <__malloc_unlock>
   465b8:	80800204 	addi	r2,r16,8
   465bc:	dfc00a17 	ldw	ra,40(sp)
   465c0:	df000917 	ldw	fp,36(sp)
   465c4:	ddc00817 	ldw	r23,32(sp)
   465c8:	dd800717 	ldw	r22,28(sp)
   465cc:	dd400617 	ldw	r21,24(sp)
   465d0:	dd000517 	ldw	r20,20(sp)
   465d4:	dcc00417 	ldw	r19,16(sp)
   465d8:	dc800317 	ldw	r18,12(sp)
   465dc:	dc400217 	ldw	r17,8(sp)
   465e0:	dc000117 	ldw	r16,4(sp)
   465e4:	dec00b04 	addi	sp,sp,44
   465e8:	f800283a 	ret
   465ec:	00800304 	movi	r2,12
   465f0:	90800015 	stw	r2,0(r18)
   465f4:	0005883a 	mov	r2,zero
   465f8:	003ff006 	br	465bc <__alt_data_end+0xfffdf4bc>
   465fc:	01002004 	movi	r4,128
   46600:	02001004 	movi	r8,64
   46604:	01c00fc4 	movi	r7,63
   46608:	003f6106 	br	46390 <__alt_data_end+0xfffdf290>
   4660c:	4009883a 	mov	r4,r8
   46610:	003f7506 	br	463e8 <__alt_data_end+0xfffdf2e8>
   46614:	81000317 	ldw	r4,12(r16)
   46618:	003fde06 	br	46594 <__alt_data_end+0xfffdf494>
   4661c:	81c5883a 	add	r2,r16,r7
   46620:	11400117 	ldw	r5,4(r2)
   46624:	9009883a 	mov	r4,r18
   46628:	29400054 	ori	r5,r5,1
   4662c:	11400115 	stw	r5,4(r2)
   46630:	004d4fc0 	call	4d4fc <__malloc_unlock>
   46634:	80800204 	addi	r2,r16,8
   46638:	003fe006 	br	465bc <__alt_data_end+0xfffdf4bc>
   4663c:	9c000217 	ldw	r16,8(r19)
   46640:	00bfff04 	movi	r2,-4
   46644:	85800117 	ldw	r22,4(r16)
   46648:	b0ac703a 	and	r22,r22,r2
   4664c:	b4400336 	bltu	r22,r17,4665c <_malloc_r+0x344>
   46650:	b445c83a 	sub	r2,r22,r17
   46654:	00c003c4 	movi	r3,15
   46658:	18805d16 	blt	r3,r2,467d0 <_malloc_r+0x4b8>
   4665c:	05c00174 	movhi	r23,5
   46660:	00800174 	movhi	r2,5
   46664:	108c2d04 	addi	r2,r2,12468
   46668:	bdc56004 	addi	r23,r23,5504
   4666c:	15400017 	ldw	r21,0(r2)
   46670:	b8c00017 	ldw	r3,0(r23)
   46674:	00bfffc4 	movi	r2,-1
   46678:	858d883a 	add	r6,r16,r22
   4667c:	8d6b883a 	add	r21,r17,r21
   46680:	1880ea26 	beq	r3,r2,46a2c <_malloc_r+0x714>
   46684:	ad4403c4 	addi	r21,r21,4111
   46688:	00bc0004 	movi	r2,-4096
   4668c:	a8aa703a 	and	r21,r21,r2
   46690:	a80b883a 	mov	r5,r21
   46694:	9009883a 	mov	r4,r18
   46698:	d9800015 	stw	r6,0(sp)
   4669c:	00485a80 	call	485a8 <_sbrk_r>
   466a0:	1029883a 	mov	r20,r2
   466a4:	00bfffc4 	movi	r2,-1
   466a8:	d9800017 	ldw	r6,0(sp)
   466ac:	a080e826 	beq	r20,r2,46a50 <_malloc_r+0x738>
   466b0:	a180a636 	bltu	r20,r6,4694c <_malloc_r+0x634>
   466b4:	07000174 	movhi	fp,5
   466b8:	e70c3604 	addi	fp,fp,12504
   466bc:	e0800017 	ldw	r2,0(fp)
   466c0:	a887883a 	add	r3,r21,r2
   466c4:	e0c00015 	stw	r3,0(fp)
   466c8:	3500e626 	beq	r6,r20,46a64 <_malloc_r+0x74c>
   466cc:	b9000017 	ldw	r4,0(r23)
   466d0:	00bfffc4 	movi	r2,-1
   466d4:	2080ee26 	beq	r4,r2,46a90 <_malloc_r+0x778>
   466d8:	a185c83a 	sub	r2,r20,r6
   466dc:	10c5883a 	add	r2,r2,r3
   466e0:	e0800015 	stw	r2,0(fp)
   466e4:	a0c001cc 	andi	r3,r20,7
   466e8:	1800bc26 	beq	r3,zero,469dc <_malloc_r+0x6c4>
   466ec:	a0e9c83a 	sub	r20,r20,r3
   466f0:	00840204 	movi	r2,4104
   466f4:	a5000204 	addi	r20,r20,8
   466f8:	10c7c83a 	sub	r3,r2,r3
   466fc:	a545883a 	add	r2,r20,r21
   46700:	1083ffcc 	andi	r2,r2,4095
   46704:	18abc83a 	sub	r21,r3,r2
   46708:	a80b883a 	mov	r5,r21
   4670c:	9009883a 	mov	r4,r18
   46710:	00485a80 	call	485a8 <_sbrk_r>
   46714:	00ffffc4 	movi	r3,-1
   46718:	10c0e126 	beq	r2,r3,46aa0 <_malloc_r+0x788>
   4671c:	1505c83a 	sub	r2,r2,r20
   46720:	1545883a 	add	r2,r2,r21
   46724:	10800054 	ori	r2,r2,1
   46728:	e0c00017 	ldw	r3,0(fp)
   4672c:	9d000215 	stw	r20,8(r19)
   46730:	a0800115 	stw	r2,4(r20)
   46734:	a8c7883a 	add	r3,r21,r3
   46738:	e0c00015 	stw	r3,0(fp)
   4673c:	84c00e26 	beq	r16,r19,46778 <_malloc_r+0x460>
   46740:	018003c4 	movi	r6,15
   46744:	3580a72e 	bgeu	r6,r22,469e4 <_malloc_r+0x6cc>
   46748:	81400117 	ldw	r5,4(r16)
   4674c:	013ffe04 	movi	r4,-8
   46750:	b0bffd04 	addi	r2,r22,-12
   46754:	1104703a 	and	r2,r2,r4
   46758:	2900004c 	andi	r4,r5,1
   4675c:	2088b03a 	or	r4,r4,r2
   46760:	81000115 	stw	r4,4(r16)
   46764:	01400144 	movi	r5,5
   46768:	8089883a 	add	r4,r16,r2
   4676c:	21400115 	stw	r5,4(r4)
   46770:	21400215 	stw	r5,8(r4)
   46774:	3080cd36 	bltu	r6,r2,46aac <_malloc_r+0x794>
   46778:	00800174 	movhi	r2,5
   4677c:	108c2c04 	addi	r2,r2,12464
   46780:	11000017 	ldw	r4,0(r2)
   46784:	20c0012e 	bgeu	r4,r3,4678c <_malloc_r+0x474>
   46788:	10c00015 	stw	r3,0(r2)
   4678c:	00800174 	movhi	r2,5
   46790:	108c2b04 	addi	r2,r2,12460
   46794:	11000017 	ldw	r4,0(r2)
   46798:	9c000217 	ldw	r16,8(r19)
   4679c:	20c0012e 	bgeu	r4,r3,467a4 <_malloc_r+0x48c>
   467a0:	10c00015 	stw	r3,0(r2)
   467a4:	80c00117 	ldw	r3,4(r16)
   467a8:	00bfff04 	movi	r2,-4
   467ac:	1886703a 	and	r3,r3,r2
   467b0:	1c45c83a 	sub	r2,r3,r17
   467b4:	1c400236 	bltu	r3,r17,467c0 <_malloc_r+0x4a8>
   467b8:	00c003c4 	movi	r3,15
   467bc:	18800416 	blt	r3,r2,467d0 <_malloc_r+0x4b8>
   467c0:	9009883a 	mov	r4,r18
   467c4:	004d4fc0 	call	4d4fc <__malloc_unlock>
   467c8:	0005883a 	mov	r2,zero
   467cc:	003f7b06 	br	465bc <__alt_data_end+0xfffdf4bc>
   467d0:	88c00054 	ori	r3,r17,1
   467d4:	80c00115 	stw	r3,4(r16)
   467d8:	8463883a 	add	r17,r16,r17
   467dc:	10800054 	ori	r2,r2,1
   467e0:	9c400215 	stw	r17,8(r19)
   467e4:	88800115 	stw	r2,4(r17)
   467e8:	9009883a 	mov	r4,r18
   467ec:	004d4fc0 	call	4d4fc <__malloc_unlock>
   467f0:	80800204 	addi	r2,r16,8
   467f4:	003f7106 	br	465bc <__alt_data_end+0xfffdf4bc>
   467f8:	00c00504 	movi	r3,20
   467fc:	18804a2e 	bgeu	r3,r2,46928 <_malloc_r+0x610>
   46800:	00c01504 	movi	r3,84
   46804:	18806e36 	bltu	r3,r2,469c0 <_malloc_r+0x6a8>
   46808:	8804d33a 	srli	r2,r17,12
   4680c:	12001bc4 	addi	r8,r2,111
   46810:	11c01b84 	addi	r7,r2,110
   46814:	4209883a 	add	r4,r8,r8
   46818:	003edd06 	br	46390 <__alt_data_end+0xfffdf290>
   4681c:	3804d27a 	srli	r2,r7,9
   46820:	00c00104 	movi	r3,4
   46824:	1880442e 	bgeu	r3,r2,46938 <_malloc_r+0x620>
   46828:	00c00504 	movi	r3,20
   4682c:	18808136 	bltu	r3,r2,46a34 <_malloc_r+0x71c>
   46830:	11401704 	addi	r5,r2,92
   46834:	10c016c4 	addi	r3,r2,91
   46838:	294b883a 	add	r5,r5,r5
   4683c:	294b883a 	add	r5,r5,r5
   46840:	294b883a 	add	r5,r5,r5
   46844:	994b883a 	add	r5,r19,r5
   46848:	28800017 	ldw	r2,0(r5)
   4684c:	01800174 	movhi	r6,5
   46850:	297ffe04 	addi	r5,r5,-8
   46854:	31bfd904 	addi	r6,r6,-156
   46858:	28806526 	beq	r5,r2,469f0 <_malloc_r+0x6d8>
   4685c:	01bfff04 	movi	r6,-4
   46860:	10c00117 	ldw	r3,4(r2)
   46864:	1986703a 	and	r3,r3,r6
   46868:	38c0022e 	bgeu	r7,r3,46874 <_malloc_r+0x55c>
   4686c:	10800217 	ldw	r2,8(r2)
   46870:	28bffb1e 	bne	r5,r2,46860 <__alt_data_end+0xfffdf760>
   46874:	11400317 	ldw	r5,12(r2)
   46878:	98c00117 	ldw	r3,4(r19)
   4687c:	81400315 	stw	r5,12(r16)
   46880:	80800215 	stw	r2,8(r16)
   46884:	2c000215 	stw	r16,8(r5)
   46888:	14000315 	stw	r16,12(r2)
   4688c:	003ef806 	br	46470 <__alt_data_end+0xfffdf370>
   46890:	88c00054 	ori	r3,r17,1
   46894:	80c00115 	stw	r3,4(r16)
   46898:	8463883a 	add	r17,r16,r17
   4689c:	34400515 	stw	r17,20(r6)
   468a0:	34400415 	stw	r17,16(r6)
   468a4:	10c00054 	ori	r3,r2,1
   468a8:	8a000315 	stw	r8,12(r17)
   468ac:	8a000215 	stw	r8,8(r17)
   468b0:	88c00115 	stw	r3,4(r17)
   468b4:	88a3883a 	add	r17,r17,r2
   468b8:	88800015 	stw	r2,0(r17)
   468bc:	9009883a 	mov	r4,r18
   468c0:	004d4fc0 	call	4d4fc <__malloc_unlock>
   468c4:	80800204 	addi	r2,r16,8
   468c8:	003f3c06 	br	465bc <__alt_data_end+0xfffdf4bc>
   468cc:	30c00117 	ldw	r3,4(r6)
   468d0:	003ee706 	br	46470 <__alt_data_end+0xfffdf370>
   468d4:	5ac00044 	addi	r11,r11,1
   468d8:	588000cc 	andi	r2,r11,3
   468dc:	31800204 	addi	r6,r6,8
   468e0:	103efd1e 	bne	r2,zero,464d8 <__alt_data_end+0xfffdf3d8>
   468e4:	00002406 	br	46978 <_malloc_r+0x660>
   468e8:	14000317 	ldw	r16,12(r2)
   468ec:	143f251e 	bne	r2,r16,46584 <__alt_data_end+0xfffdf484>
   468f0:	21000084 	addi	r4,r4,2
   468f4:	003ebc06 	br	463e8 <__alt_data_end+0xfffdf2e8>
   468f8:	8085883a 	add	r2,r16,r2
   468fc:	10c00117 	ldw	r3,4(r2)
   46900:	81000317 	ldw	r4,12(r16)
   46904:	81400217 	ldw	r5,8(r16)
   46908:	18c00054 	ori	r3,r3,1
   4690c:	10c00115 	stw	r3,4(r2)
   46910:	29000315 	stw	r4,12(r5)
   46914:	21400215 	stw	r5,8(r4)
   46918:	9009883a 	mov	r4,r18
   4691c:	004d4fc0 	call	4d4fc <__malloc_unlock>
   46920:	80800204 	addi	r2,r16,8
   46924:	003f2506 	br	465bc <__alt_data_end+0xfffdf4bc>
   46928:	12001704 	addi	r8,r2,92
   4692c:	11c016c4 	addi	r7,r2,91
   46930:	4209883a 	add	r4,r8,r8
   46934:	003e9606 	br	46390 <__alt_data_end+0xfffdf290>
   46938:	3804d1ba 	srli	r2,r7,6
   4693c:	11400e44 	addi	r5,r2,57
   46940:	10c00e04 	addi	r3,r2,56
   46944:	294b883a 	add	r5,r5,r5
   46948:	003fbc06 	br	4683c <__alt_data_end+0xfffdf73c>
   4694c:	84ff5926 	beq	r16,r19,466b4 <__alt_data_end+0xfffdf5b4>
   46950:	00800174 	movhi	r2,5
   46954:	10bfd904 	addi	r2,r2,-156
   46958:	14000217 	ldw	r16,8(r2)
   4695c:	00bfff04 	movi	r2,-4
   46960:	80c00117 	ldw	r3,4(r16)
   46964:	1886703a 	and	r3,r3,r2
   46968:	003f9106 	br	467b0 <__alt_data_end+0xfffdf6b0>
   4696c:	60800217 	ldw	r2,8(r12)
   46970:	213fffc4 	addi	r4,r4,-1
   46974:	1300651e 	bne	r2,r12,46b0c <_malloc_r+0x7f4>
   46978:	208000cc 	andi	r2,r4,3
   4697c:	633ffe04 	addi	r12,r12,-8
   46980:	103ffa1e 	bne	r2,zero,4696c <__alt_data_end+0xfffdf86c>
   46984:	98800117 	ldw	r2,4(r19)
   46988:	0146303a 	nor	r3,zero,r5
   4698c:	1884703a 	and	r2,r3,r2
   46990:	98800115 	stw	r2,4(r19)
   46994:	294b883a 	add	r5,r5,r5
   46998:	117f2836 	bltu	r2,r5,4663c <__alt_data_end+0xfffdf53c>
   4699c:	283f2726 	beq	r5,zero,4663c <__alt_data_end+0xfffdf53c>
   469a0:	2886703a 	and	r3,r5,r2
   469a4:	5809883a 	mov	r4,r11
   469a8:	183ec31e 	bne	r3,zero,464b8 <__alt_data_end+0xfffdf3b8>
   469ac:	294b883a 	add	r5,r5,r5
   469b0:	2886703a 	and	r3,r5,r2
   469b4:	21000104 	addi	r4,r4,4
   469b8:	183ffc26 	beq	r3,zero,469ac <__alt_data_end+0xfffdf8ac>
   469bc:	003ebe06 	br	464b8 <__alt_data_end+0xfffdf3b8>
   469c0:	00c05504 	movi	r3,340
   469c4:	18801236 	bltu	r3,r2,46a10 <_malloc_r+0x6f8>
   469c8:	8804d3fa 	srli	r2,r17,15
   469cc:	12001e04 	addi	r8,r2,120
   469d0:	11c01dc4 	addi	r7,r2,119
   469d4:	4209883a 	add	r4,r8,r8
   469d8:	003e6d06 	br	46390 <__alt_data_end+0xfffdf290>
   469dc:	00c40004 	movi	r3,4096
   469e0:	003f4606 	br	466fc <__alt_data_end+0xfffdf5fc>
   469e4:	00800044 	movi	r2,1
   469e8:	a0800115 	stw	r2,4(r20)
   469ec:	003f7406 	br	467c0 <__alt_data_end+0xfffdf6c0>
   469f0:	1805d0ba 	srai	r2,r3,2
   469f4:	01c00044 	movi	r7,1
   469f8:	30c00117 	ldw	r3,4(r6)
   469fc:	388e983a 	sll	r7,r7,r2
   46a00:	2805883a 	mov	r2,r5
   46a04:	38c6b03a 	or	r3,r7,r3
   46a08:	30c00115 	stw	r3,4(r6)
   46a0c:	003f9b06 	br	4687c <__alt_data_end+0xfffdf77c>
   46a10:	00c15504 	movi	r3,1364
   46a14:	18801a36 	bltu	r3,r2,46a80 <_malloc_r+0x768>
   46a18:	8804d4ba 	srli	r2,r17,18
   46a1c:	12001f44 	addi	r8,r2,125
   46a20:	11c01f04 	addi	r7,r2,124
   46a24:	4209883a 	add	r4,r8,r8
   46a28:	003e5906 	br	46390 <__alt_data_end+0xfffdf290>
   46a2c:	ad400404 	addi	r21,r21,16
   46a30:	003f1706 	br	46690 <__alt_data_end+0xfffdf590>
   46a34:	00c01504 	movi	r3,84
   46a38:	18802336 	bltu	r3,r2,46ac8 <_malloc_r+0x7b0>
   46a3c:	3804d33a 	srli	r2,r7,12
   46a40:	11401bc4 	addi	r5,r2,111
   46a44:	10c01b84 	addi	r3,r2,110
   46a48:	294b883a 	add	r5,r5,r5
   46a4c:	003f7b06 	br	4683c <__alt_data_end+0xfffdf73c>
   46a50:	9c000217 	ldw	r16,8(r19)
   46a54:	00bfff04 	movi	r2,-4
   46a58:	80c00117 	ldw	r3,4(r16)
   46a5c:	1886703a 	and	r3,r3,r2
   46a60:	003f5306 	br	467b0 <__alt_data_end+0xfffdf6b0>
   46a64:	3083ffcc 	andi	r2,r6,4095
   46a68:	103f181e 	bne	r2,zero,466cc <__alt_data_end+0xfffdf5cc>
   46a6c:	99000217 	ldw	r4,8(r19)
   46a70:	b545883a 	add	r2,r22,r21
   46a74:	10800054 	ori	r2,r2,1
   46a78:	20800115 	stw	r2,4(r4)
   46a7c:	003f3e06 	br	46778 <__alt_data_end+0xfffdf678>
   46a80:	01003f84 	movi	r4,254
   46a84:	02001fc4 	movi	r8,127
   46a88:	01c01f84 	movi	r7,126
   46a8c:	003e4006 	br	46390 <__alt_data_end+0xfffdf290>
   46a90:	00800174 	movhi	r2,5
   46a94:	10856004 	addi	r2,r2,5504
   46a98:	15000015 	stw	r20,0(r2)
   46a9c:	003f1106 	br	466e4 <__alt_data_end+0xfffdf5e4>
   46aa0:	00800044 	movi	r2,1
   46aa4:	002b883a 	mov	r21,zero
   46aa8:	003f1f06 	br	46728 <__alt_data_end+0xfffdf628>
   46aac:	81400204 	addi	r5,r16,8
   46ab0:	9009883a 	mov	r4,r18
   46ab4:	004572c0 	call	4572c <_free_r>
   46ab8:	00800174 	movhi	r2,5
   46abc:	108c3604 	addi	r2,r2,12504
   46ac0:	10c00017 	ldw	r3,0(r2)
   46ac4:	003f2c06 	br	46778 <__alt_data_end+0xfffdf678>
   46ac8:	00c05504 	movi	r3,340
   46acc:	18800536 	bltu	r3,r2,46ae4 <_malloc_r+0x7cc>
   46ad0:	3804d3fa 	srli	r2,r7,15
   46ad4:	11401e04 	addi	r5,r2,120
   46ad8:	10c01dc4 	addi	r3,r2,119
   46adc:	294b883a 	add	r5,r5,r5
   46ae0:	003f5606 	br	4683c <__alt_data_end+0xfffdf73c>
   46ae4:	00c15504 	movi	r3,1364
   46ae8:	18800536 	bltu	r3,r2,46b00 <_malloc_r+0x7e8>
   46aec:	3804d4ba 	srli	r2,r7,18
   46af0:	11401f44 	addi	r5,r2,125
   46af4:	10c01f04 	addi	r3,r2,124
   46af8:	294b883a 	add	r5,r5,r5
   46afc:	003f4f06 	br	4683c <__alt_data_end+0xfffdf73c>
   46b00:	01403f84 	movi	r5,254
   46b04:	00c01f84 	movi	r3,126
   46b08:	003f4c06 	br	4683c <__alt_data_end+0xfffdf73c>
   46b0c:	98800117 	ldw	r2,4(r19)
   46b10:	003fa006 	br	46994 <__alt_data_end+0xfffdf894>
   46b14:	8808d0fa 	srli	r4,r17,3
   46b18:	20800044 	addi	r2,r4,1
   46b1c:	1085883a 	add	r2,r2,r2
   46b20:	003e9006 	br	46564 <__alt_data_end+0xfffdf464>

00046b24 <memchr>:
   46b24:	208000cc 	andi	r2,r4,3
   46b28:	280f883a 	mov	r7,r5
   46b2c:	10003426 	beq	r2,zero,46c00 <memchr+0xdc>
   46b30:	30bfffc4 	addi	r2,r6,-1
   46b34:	30001a26 	beq	r6,zero,46ba0 <memchr+0x7c>
   46b38:	20c00003 	ldbu	r3,0(r4)
   46b3c:	29803fcc 	andi	r6,r5,255
   46b40:	30c0051e 	bne	r6,r3,46b58 <memchr+0x34>
   46b44:	00001806 	br	46ba8 <memchr+0x84>
   46b48:	10001526 	beq	r2,zero,46ba0 <memchr+0x7c>
   46b4c:	20c00003 	ldbu	r3,0(r4)
   46b50:	10bfffc4 	addi	r2,r2,-1
   46b54:	30c01426 	beq	r6,r3,46ba8 <memchr+0x84>
   46b58:	21000044 	addi	r4,r4,1
   46b5c:	20c000cc 	andi	r3,r4,3
   46b60:	183ff91e 	bne	r3,zero,46b48 <__alt_data_end+0xfffdfa48>
   46b64:	020000c4 	movi	r8,3
   46b68:	40801136 	bltu	r8,r2,46bb0 <memchr+0x8c>
   46b6c:	10000c26 	beq	r2,zero,46ba0 <memchr+0x7c>
   46b70:	20c00003 	ldbu	r3,0(r4)
   46b74:	29403fcc 	andi	r5,r5,255
   46b78:	28c00b26 	beq	r5,r3,46ba8 <memchr+0x84>
   46b7c:	20c00044 	addi	r3,r4,1
   46b80:	39803fcc 	andi	r6,r7,255
   46b84:	2089883a 	add	r4,r4,r2
   46b88:	00000306 	br	46b98 <memchr+0x74>
   46b8c:	18c00044 	addi	r3,r3,1
   46b90:	197fffc3 	ldbu	r5,-1(r3)
   46b94:	31400526 	beq	r6,r5,46bac <memchr+0x88>
   46b98:	1805883a 	mov	r2,r3
   46b9c:	20fffb1e 	bne	r4,r3,46b8c <__alt_data_end+0xfffdfa8c>
   46ba0:	0005883a 	mov	r2,zero
   46ba4:	f800283a 	ret
   46ba8:	2005883a 	mov	r2,r4
   46bac:	f800283a 	ret
   46bb0:	28c03fcc 	andi	r3,r5,255
   46bb4:	1812923a 	slli	r9,r3,8
   46bb8:	02ffbff4 	movhi	r11,65279
   46bbc:	02a02074 	movhi	r10,32897
   46bc0:	48d2b03a 	or	r9,r9,r3
   46bc4:	4806943a 	slli	r3,r9,16
   46bc8:	5affbfc4 	addi	r11,r11,-257
   46bcc:	52a02004 	addi	r10,r10,-32640
   46bd0:	48d2b03a 	or	r9,r9,r3
   46bd4:	20c00017 	ldw	r3,0(r4)
   46bd8:	48c6f03a 	xor	r3,r9,r3
   46bdc:	1acd883a 	add	r6,r3,r11
   46be0:	00c6303a 	nor	r3,zero,r3
   46be4:	30c6703a 	and	r3,r6,r3
   46be8:	1a86703a 	and	r3,r3,r10
   46bec:	183fe01e 	bne	r3,zero,46b70 <__alt_data_end+0xfffdfa70>
   46bf0:	10bfff04 	addi	r2,r2,-4
   46bf4:	21000104 	addi	r4,r4,4
   46bf8:	40bff636 	bltu	r8,r2,46bd4 <__alt_data_end+0xfffdfad4>
   46bfc:	003fdb06 	br	46b6c <__alt_data_end+0xfffdfa6c>
   46c00:	3005883a 	mov	r2,r6
   46c04:	003fd706 	br	46b64 <__alt_data_end+0xfffdfa64>

00046c08 <memcpy>:
   46c08:	defffd04 	addi	sp,sp,-12
   46c0c:	dfc00215 	stw	ra,8(sp)
   46c10:	dc400115 	stw	r17,4(sp)
   46c14:	dc000015 	stw	r16,0(sp)
   46c18:	00c003c4 	movi	r3,15
   46c1c:	2005883a 	mov	r2,r4
   46c20:	1980452e 	bgeu	r3,r6,46d38 <memcpy+0x130>
   46c24:	2906b03a 	or	r3,r5,r4
   46c28:	18c000cc 	andi	r3,r3,3
   46c2c:	1800441e 	bne	r3,zero,46d40 <memcpy+0x138>
   46c30:	347ffc04 	addi	r17,r6,-16
   46c34:	8822d13a 	srli	r17,r17,4
   46c38:	28c00104 	addi	r3,r5,4
   46c3c:	23400104 	addi	r13,r4,4
   46c40:	8820913a 	slli	r16,r17,4
   46c44:	2b000204 	addi	r12,r5,8
   46c48:	22c00204 	addi	r11,r4,8
   46c4c:	84000504 	addi	r16,r16,20
   46c50:	2a800304 	addi	r10,r5,12
   46c54:	22400304 	addi	r9,r4,12
   46c58:	2c21883a 	add	r16,r5,r16
   46c5c:	2811883a 	mov	r8,r5
   46c60:	200f883a 	mov	r7,r4
   46c64:	41000017 	ldw	r4,0(r8)
   46c68:	1fc00017 	ldw	ra,0(r3)
   46c6c:	63c00017 	ldw	r15,0(r12)
   46c70:	39000015 	stw	r4,0(r7)
   46c74:	53800017 	ldw	r14,0(r10)
   46c78:	6fc00015 	stw	ra,0(r13)
   46c7c:	5bc00015 	stw	r15,0(r11)
   46c80:	4b800015 	stw	r14,0(r9)
   46c84:	18c00404 	addi	r3,r3,16
   46c88:	39c00404 	addi	r7,r7,16
   46c8c:	42000404 	addi	r8,r8,16
   46c90:	6b400404 	addi	r13,r13,16
   46c94:	63000404 	addi	r12,r12,16
   46c98:	5ac00404 	addi	r11,r11,16
   46c9c:	52800404 	addi	r10,r10,16
   46ca0:	4a400404 	addi	r9,r9,16
   46ca4:	1c3fef1e 	bne	r3,r16,46c64 <__alt_data_end+0xfffdfb64>
   46ca8:	89c00044 	addi	r7,r17,1
   46cac:	380e913a 	slli	r7,r7,4
   46cb0:	310003cc 	andi	r4,r6,15
   46cb4:	02c000c4 	movi	r11,3
   46cb8:	11c7883a 	add	r3,r2,r7
   46cbc:	29cb883a 	add	r5,r5,r7
   46cc0:	5900212e 	bgeu	r11,r4,46d48 <memcpy+0x140>
   46cc4:	1813883a 	mov	r9,r3
   46cc8:	2811883a 	mov	r8,r5
   46ccc:	200f883a 	mov	r7,r4
   46cd0:	42800017 	ldw	r10,0(r8)
   46cd4:	4a400104 	addi	r9,r9,4
   46cd8:	39ffff04 	addi	r7,r7,-4
   46cdc:	4abfff15 	stw	r10,-4(r9)
   46ce0:	42000104 	addi	r8,r8,4
   46ce4:	59fffa36 	bltu	r11,r7,46cd0 <__alt_data_end+0xfffdfbd0>
   46ce8:	213fff04 	addi	r4,r4,-4
   46cec:	2008d0ba 	srli	r4,r4,2
   46cf0:	318000cc 	andi	r6,r6,3
   46cf4:	21000044 	addi	r4,r4,1
   46cf8:	2109883a 	add	r4,r4,r4
   46cfc:	2109883a 	add	r4,r4,r4
   46d00:	1907883a 	add	r3,r3,r4
   46d04:	290b883a 	add	r5,r5,r4
   46d08:	30000626 	beq	r6,zero,46d24 <memcpy+0x11c>
   46d0c:	198d883a 	add	r6,r3,r6
   46d10:	29c00003 	ldbu	r7,0(r5)
   46d14:	18c00044 	addi	r3,r3,1
   46d18:	29400044 	addi	r5,r5,1
   46d1c:	19ffffc5 	stb	r7,-1(r3)
   46d20:	19bffb1e 	bne	r3,r6,46d10 <__alt_data_end+0xfffdfc10>
   46d24:	dfc00217 	ldw	ra,8(sp)
   46d28:	dc400117 	ldw	r17,4(sp)
   46d2c:	dc000017 	ldw	r16,0(sp)
   46d30:	dec00304 	addi	sp,sp,12
   46d34:	f800283a 	ret
   46d38:	2007883a 	mov	r3,r4
   46d3c:	003ff206 	br	46d08 <__alt_data_end+0xfffdfc08>
   46d40:	2007883a 	mov	r3,r4
   46d44:	003ff106 	br	46d0c <__alt_data_end+0xfffdfc0c>
   46d48:	200d883a 	mov	r6,r4
   46d4c:	003fee06 	br	46d08 <__alt_data_end+0xfffdfc08>

00046d50 <memmove>:
   46d50:	2005883a 	mov	r2,r4
   46d54:	29000b2e 	bgeu	r5,r4,46d84 <memmove+0x34>
   46d58:	298f883a 	add	r7,r5,r6
   46d5c:	21c0092e 	bgeu	r4,r7,46d84 <memmove+0x34>
   46d60:	2187883a 	add	r3,r4,r6
   46d64:	198bc83a 	sub	r5,r3,r6
   46d68:	30004826 	beq	r6,zero,46e8c <memmove+0x13c>
   46d6c:	39ffffc4 	addi	r7,r7,-1
   46d70:	39000003 	ldbu	r4,0(r7)
   46d74:	18ffffc4 	addi	r3,r3,-1
   46d78:	19000005 	stb	r4,0(r3)
   46d7c:	28fffb1e 	bne	r5,r3,46d6c <__alt_data_end+0xfffdfc6c>
   46d80:	f800283a 	ret
   46d84:	00c003c4 	movi	r3,15
   46d88:	1980412e 	bgeu	r3,r6,46e90 <memmove+0x140>
   46d8c:	2886b03a 	or	r3,r5,r2
   46d90:	18c000cc 	andi	r3,r3,3
   46d94:	1800401e 	bne	r3,zero,46e98 <memmove+0x148>
   46d98:	33fffc04 	addi	r15,r6,-16
   46d9c:	781ed13a 	srli	r15,r15,4
   46da0:	28c00104 	addi	r3,r5,4
   46da4:	13400104 	addi	r13,r2,4
   46da8:	781c913a 	slli	r14,r15,4
   46dac:	2b000204 	addi	r12,r5,8
   46db0:	12c00204 	addi	r11,r2,8
   46db4:	73800504 	addi	r14,r14,20
   46db8:	2a800304 	addi	r10,r5,12
   46dbc:	12400304 	addi	r9,r2,12
   46dc0:	2b9d883a 	add	r14,r5,r14
   46dc4:	2811883a 	mov	r8,r5
   46dc8:	100f883a 	mov	r7,r2
   46dcc:	41000017 	ldw	r4,0(r8)
   46dd0:	39c00404 	addi	r7,r7,16
   46dd4:	18c00404 	addi	r3,r3,16
   46dd8:	393ffc15 	stw	r4,-16(r7)
   46ddc:	193ffc17 	ldw	r4,-16(r3)
   46de0:	6b400404 	addi	r13,r13,16
   46de4:	5ac00404 	addi	r11,r11,16
   46de8:	693ffc15 	stw	r4,-16(r13)
   46dec:	61000017 	ldw	r4,0(r12)
   46df0:	4a400404 	addi	r9,r9,16
   46df4:	42000404 	addi	r8,r8,16
   46df8:	593ffc15 	stw	r4,-16(r11)
   46dfc:	51000017 	ldw	r4,0(r10)
   46e00:	63000404 	addi	r12,r12,16
   46e04:	52800404 	addi	r10,r10,16
   46e08:	493ffc15 	stw	r4,-16(r9)
   46e0c:	1bbfef1e 	bne	r3,r14,46dcc <__alt_data_end+0xfffdfccc>
   46e10:	79000044 	addi	r4,r15,1
   46e14:	2008913a 	slli	r4,r4,4
   46e18:	328003cc 	andi	r10,r6,15
   46e1c:	02c000c4 	movi	r11,3
   46e20:	1107883a 	add	r3,r2,r4
   46e24:	290b883a 	add	r5,r5,r4
   46e28:	5a801e2e 	bgeu	r11,r10,46ea4 <memmove+0x154>
   46e2c:	1813883a 	mov	r9,r3
   46e30:	2811883a 	mov	r8,r5
   46e34:	500f883a 	mov	r7,r10
   46e38:	41000017 	ldw	r4,0(r8)
   46e3c:	4a400104 	addi	r9,r9,4
   46e40:	39ffff04 	addi	r7,r7,-4
   46e44:	493fff15 	stw	r4,-4(r9)
   46e48:	42000104 	addi	r8,r8,4
   46e4c:	59fffa36 	bltu	r11,r7,46e38 <__alt_data_end+0xfffdfd38>
   46e50:	513fff04 	addi	r4,r10,-4
   46e54:	2008d0ba 	srli	r4,r4,2
   46e58:	318000cc 	andi	r6,r6,3
   46e5c:	21000044 	addi	r4,r4,1
   46e60:	2109883a 	add	r4,r4,r4
   46e64:	2109883a 	add	r4,r4,r4
   46e68:	1907883a 	add	r3,r3,r4
   46e6c:	290b883a 	add	r5,r5,r4
   46e70:	30000b26 	beq	r6,zero,46ea0 <memmove+0x150>
   46e74:	198d883a 	add	r6,r3,r6
   46e78:	29c00003 	ldbu	r7,0(r5)
   46e7c:	18c00044 	addi	r3,r3,1
   46e80:	29400044 	addi	r5,r5,1
   46e84:	19ffffc5 	stb	r7,-1(r3)
   46e88:	19bffb1e 	bne	r3,r6,46e78 <__alt_data_end+0xfffdfd78>
   46e8c:	f800283a 	ret
   46e90:	1007883a 	mov	r3,r2
   46e94:	003ff606 	br	46e70 <__alt_data_end+0xfffdfd70>
   46e98:	1007883a 	mov	r3,r2
   46e9c:	003ff506 	br	46e74 <__alt_data_end+0xfffdfd74>
   46ea0:	f800283a 	ret
   46ea4:	500d883a 	mov	r6,r10
   46ea8:	003ff106 	br	46e70 <__alt_data_end+0xfffdfd70>

00046eac <memset>:
   46eac:	20c000cc 	andi	r3,r4,3
   46eb0:	2005883a 	mov	r2,r4
   46eb4:	18004426 	beq	r3,zero,46fc8 <memset+0x11c>
   46eb8:	31ffffc4 	addi	r7,r6,-1
   46ebc:	30004026 	beq	r6,zero,46fc0 <memset+0x114>
   46ec0:	2813883a 	mov	r9,r5
   46ec4:	200d883a 	mov	r6,r4
   46ec8:	2007883a 	mov	r3,r4
   46ecc:	00000406 	br	46ee0 <memset+0x34>
   46ed0:	3a3fffc4 	addi	r8,r7,-1
   46ed4:	31800044 	addi	r6,r6,1
   46ed8:	38003926 	beq	r7,zero,46fc0 <memset+0x114>
   46edc:	400f883a 	mov	r7,r8
   46ee0:	18c00044 	addi	r3,r3,1
   46ee4:	32400005 	stb	r9,0(r6)
   46ee8:	1a0000cc 	andi	r8,r3,3
   46eec:	403ff81e 	bne	r8,zero,46ed0 <__alt_data_end+0xfffdfdd0>
   46ef0:	010000c4 	movi	r4,3
   46ef4:	21c02d2e 	bgeu	r4,r7,46fac <memset+0x100>
   46ef8:	29003fcc 	andi	r4,r5,255
   46efc:	200c923a 	slli	r6,r4,8
   46f00:	3108b03a 	or	r4,r6,r4
   46f04:	200c943a 	slli	r6,r4,16
   46f08:	218cb03a 	or	r6,r4,r6
   46f0c:	010003c4 	movi	r4,15
   46f10:	21c0182e 	bgeu	r4,r7,46f74 <memset+0xc8>
   46f14:	3b3ffc04 	addi	r12,r7,-16
   46f18:	6018d13a 	srli	r12,r12,4
   46f1c:	1a000104 	addi	r8,r3,4
   46f20:	1ac00204 	addi	r11,r3,8
   46f24:	6008913a 	slli	r4,r12,4
   46f28:	1a800304 	addi	r10,r3,12
   46f2c:	1813883a 	mov	r9,r3
   46f30:	21000504 	addi	r4,r4,20
   46f34:	1909883a 	add	r4,r3,r4
   46f38:	49800015 	stw	r6,0(r9)
   46f3c:	41800015 	stw	r6,0(r8)
   46f40:	59800015 	stw	r6,0(r11)
   46f44:	51800015 	stw	r6,0(r10)
   46f48:	42000404 	addi	r8,r8,16
   46f4c:	4a400404 	addi	r9,r9,16
   46f50:	5ac00404 	addi	r11,r11,16
   46f54:	52800404 	addi	r10,r10,16
   46f58:	413ff71e 	bne	r8,r4,46f38 <__alt_data_end+0xfffdfe38>
   46f5c:	63000044 	addi	r12,r12,1
   46f60:	6018913a 	slli	r12,r12,4
   46f64:	39c003cc 	andi	r7,r7,15
   46f68:	010000c4 	movi	r4,3
   46f6c:	1b07883a 	add	r3,r3,r12
   46f70:	21c00e2e 	bgeu	r4,r7,46fac <memset+0x100>
   46f74:	1813883a 	mov	r9,r3
   46f78:	3811883a 	mov	r8,r7
   46f7c:	010000c4 	movi	r4,3
   46f80:	49800015 	stw	r6,0(r9)
   46f84:	423fff04 	addi	r8,r8,-4
   46f88:	4a400104 	addi	r9,r9,4
   46f8c:	223ffc36 	bltu	r4,r8,46f80 <__alt_data_end+0xfffdfe80>
   46f90:	393fff04 	addi	r4,r7,-4
   46f94:	2008d0ba 	srli	r4,r4,2
   46f98:	39c000cc 	andi	r7,r7,3
   46f9c:	21000044 	addi	r4,r4,1
   46fa0:	2109883a 	add	r4,r4,r4
   46fa4:	2109883a 	add	r4,r4,r4
   46fa8:	1907883a 	add	r3,r3,r4
   46fac:	38000526 	beq	r7,zero,46fc4 <memset+0x118>
   46fb0:	19cf883a 	add	r7,r3,r7
   46fb4:	19400005 	stb	r5,0(r3)
   46fb8:	18c00044 	addi	r3,r3,1
   46fbc:	38fffd1e 	bne	r7,r3,46fb4 <__alt_data_end+0xfffdfeb4>
   46fc0:	f800283a 	ret
   46fc4:	f800283a 	ret
   46fc8:	2007883a 	mov	r3,r4
   46fcc:	300f883a 	mov	r7,r6
   46fd0:	003fc706 	br	46ef0 <__alt_data_end+0xfffdfdf0>

00046fd4 <_Balloc>:
   46fd4:	20801317 	ldw	r2,76(r4)
   46fd8:	defffc04 	addi	sp,sp,-16
   46fdc:	dc400115 	stw	r17,4(sp)
   46fe0:	dc000015 	stw	r16,0(sp)
   46fe4:	dfc00315 	stw	ra,12(sp)
   46fe8:	dc800215 	stw	r18,8(sp)
   46fec:	2023883a 	mov	r17,r4
   46ff0:	2821883a 	mov	r16,r5
   46ff4:	10000f26 	beq	r2,zero,47034 <_Balloc+0x60>
   46ff8:	8407883a 	add	r3,r16,r16
   46ffc:	18c7883a 	add	r3,r3,r3
   47000:	10c7883a 	add	r3,r2,r3
   47004:	18800017 	ldw	r2,0(r3)
   47008:	10001126 	beq	r2,zero,47050 <_Balloc+0x7c>
   4700c:	11000017 	ldw	r4,0(r2)
   47010:	19000015 	stw	r4,0(r3)
   47014:	10000415 	stw	zero,16(r2)
   47018:	10000315 	stw	zero,12(r2)
   4701c:	dfc00317 	ldw	ra,12(sp)
   47020:	dc800217 	ldw	r18,8(sp)
   47024:	dc400117 	ldw	r17,4(sp)
   47028:	dc000017 	ldw	r16,0(sp)
   4702c:	dec00404 	addi	sp,sp,16
   47030:	f800283a 	ret
   47034:	01800844 	movi	r6,33
   47038:	01400104 	movi	r5,4
   4703c:	0049f100 	call	49f10 <_calloc_r>
   47040:	88801315 	stw	r2,76(r17)
   47044:	103fec1e 	bne	r2,zero,46ff8 <__alt_data_end+0xfffdfef8>
   47048:	0005883a 	mov	r2,zero
   4704c:	003ff306 	br	4701c <__alt_data_end+0xfffdff1c>
   47050:	01400044 	movi	r5,1
   47054:	2c24983a 	sll	r18,r5,r16
   47058:	8809883a 	mov	r4,r17
   4705c:	91800144 	addi	r6,r18,5
   47060:	318d883a 	add	r6,r6,r6
   47064:	318d883a 	add	r6,r6,r6
   47068:	0049f100 	call	49f10 <_calloc_r>
   4706c:	103ff626 	beq	r2,zero,47048 <__alt_data_end+0xfffdff48>
   47070:	14000115 	stw	r16,4(r2)
   47074:	14800215 	stw	r18,8(r2)
   47078:	003fe606 	br	47014 <__alt_data_end+0xfffdff14>

0004707c <_Bfree>:
   4707c:	28000826 	beq	r5,zero,470a0 <_Bfree+0x24>
   47080:	28c00117 	ldw	r3,4(r5)
   47084:	20801317 	ldw	r2,76(r4)
   47088:	18c7883a 	add	r3,r3,r3
   4708c:	18c7883a 	add	r3,r3,r3
   47090:	10c5883a 	add	r2,r2,r3
   47094:	10c00017 	ldw	r3,0(r2)
   47098:	28c00015 	stw	r3,0(r5)
   4709c:	11400015 	stw	r5,0(r2)
   470a0:	f800283a 	ret

000470a4 <__multadd>:
   470a4:	defffa04 	addi	sp,sp,-24
   470a8:	dc800315 	stw	r18,12(sp)
   470ac:	dc400215 	stw	r17,8(sp)
   470b0:	dc000115 	stw	r16,4(sp)
   470b4:	2823883a 	mov	r17,r5
   470b8:	2c000417 	ldw	r16,16(r5)
   470bc:	dfc00515 	stw	ra,20(sp)
   470c0:	dcc00415 	stw	r19,16(sp)
   470c4:	2025883a 	mov	r18,r4
   470c8:	29400504 	addi	r5,r5,20
   470cc:	0011883a 	mov	r8,zero
   470d0:	28c00017 	ldw	r3,0(r5)
   470d4:	29400104 	addi	r5,r5,4
   470d8:	42000044 	addi	r8,r8,1
   470dc:	18bfffcc 	andi	r2,r3,65535
   470e0:	1185383a 	mul	r2,r2,r6
   470e4:	1806d43a 	srli	r3,r3,16
   470e8:	11cf883a 	add	r7,r2,r7
   470ec:	3808d43a 	srli	r4,r7,16
   470f0:	1987383a 	mul	r3,r3,r6
   470f4:	38bfffcc 	andi	r2,r7,65535
   470f8:	1907883a 	add	r3,r3,r4
   470fc:	1808943a 	slli	r4,r3,16
   47100:	180ed43a 	srli	r7,r3,16
   47104:	2085883a 	add	r2,r4,r2
   47108:	28bfff15 	stw	r2,-4(r5)
   4710c:	443ff016 	blt	r8,r16,470d0 <__alt_data_end+0xfffdffd0>
   47110:	38000926 	beq	r7,zero,47138 <__multadd+0x94>
   47114:	88800217 	ldw	r2,8(r17)
   47118:	80800f0e 	bge	r16,r2,47158 <__multadd+0xb4>
   4711c:	80800144 	addi	r2,r16,5
   47120:	1085883a 	add	r2,r2,r2
   47124:	1085883a 	add	r2,r2,r2
   47128:	8885883a 	add	r2,r17,r2
   4712c:	11c00015 	stw	r7,0(r2)
   47130:	84000044 	addi	r16,r16,1
   47134:	8c000415 	stw	r16,16(r17)
   47138:	8805883a 	mov	r2,r17
   4713c:	dfc00517 	ldw	ra,20(sp)
   47140:	dcc00417 	ldw	r19,16(sp)
   47144:	dc800317 	ldw	r18,12(sp)
   47148:	dc400217 	ldw	r17,8(sp)
   4714c:	dc000117 	ldw	r16,4(sp)
   47150:	dec00604 	addi	sp,sp,24
   47154:	f800283a 	ret
   47158:	89400117 	ldw	r5,4(r17)
   4715c:	9009883a 	mov	r4,r18
   47160:	d9c00015 	stw	r7,0(sp)
   47164:	29400044 	addi	r5,r5,1
   47168:	0046fd40 	call	46fd4 <_Balloc>
   4716c:	89800417 	ldw	r6,16(r17)
   47170:	89400304 	addi	r5,r17,12
   47174:	11000304 	addi	r4,r2,12
   47178:	31800084 	addi	r6,r6,2
   4717c:	318d883a 	add	r6,r6,r6
   47180:	318d883a 	add	r6,r6,r6
   47184:	1027883a 	mov	r19,r2
   47188:	0046c080 	call	46c08 <memcpy>
   4718c:	d9c00017 	ldw	r7,0(sp)
   47190:	88000a26 	beq	r17,zero,471bc <__multadd+0x118>
   47194:	88c00117 	ldw	r3,4(r17)
   47198:	90801317 	ldw	r2,76(r18)
   4719c:	18c7883a 	add	r3,r3,r3
   471a0:	18c7883a 	add	r3,r3,r3
   471a4:	10c5883a 	add	r2,r2,r3
   471a8:	10c00017 	ldw	r3,0(r2)
   471ac:	88c00015 	stw	r3,0(r17)
   471b0:	14400015 	stw	r17,0(r2)
   471b4:	9823883a 	mov	r17,r19
   471b8:	003fd806 	br	4711c <__alt_data_end+0xfffe001c>
   471bc:	9823883a 	mov	r17,r19
   471c0:	003fd606 	br	4711c <__alt_data_end+0xfffe001c>

000471c4 <__s2b>:
   471c4:	defff904 	addi	sp,sp,-28
   471c8:	dc400115 	stw	r17,4(sp)
   471cc:	dc000015 	stw	r16,0(sp)
   471d0:	2023883a 	mov	r17,r4
   471d4:	2821883a 	mov	r16,r5
   471d8:	39000204 	addi	r4,r7,8
   471dc:	01400244 	movi	r5,9
   471e0:	dcc00315 	stw	r19,12(sp)
   471e4:	dc800215 	stw	r18,8(sp)
   471e8:	dfc00615 	stw	ra,24(sp)
   471ec:	dd400515 	stw	r21,20(sp)
   471f0:	dd000415 	stw	r20,16(sp)
   471f4:	3825883a 	mov	r18,r7
   471f8:	3027883a 	mov	r19,r6
   471fc:	0040f880 	call	40f88 <__divsi3>
   47200:	00c00044 	movi	r3,1
   47204:	000b883a 	mov	r5,zero
   47208:	1880030e 	bge	r3,r2,47218 <__s2b+0x54>
   4720c:	18c7883a 	add	r3,r3,r3
   47210:	29400044 	addi	r5,r5,1
   47214:	18bffd16 	blt	r3,r2,4720c <__alt_data_end+0xfffe010c>
   47218:	8809883a 	mov	r4,r17
   4721c:	0046fd40 	call	46fd4 <_Balloc>
   47220:	d8c00717 	ldw	r3,28(sp)
   47224:	10c00515 	stw	r3,20(r2)
   47228:	00c00044 	movi	r3,1
   4722c:	10c00415 	stw	r3,16(r2)
   47230:	00c00244 	movi	r3,9
   47234:	1cc0210e 	bge	r3,r19,472bc <__s2b+0xf8>
   47238:	80eb883a 	add	r21,r16,r3
   4723c:	a829883a 	mov	r20,r21
   47240:	84e1883a 	add	r16,r16,r19
   47244:	a1c00007 	ldb	r7,0(r20)
   47248:	01800284 	movi	r6,10
   4724c:	a5000044 	addi	r20,r20,1
   47250:	100b883a 	mov	r5,r2
   47254:	39fff404 	addi	r7,r7,-48
   47258:	8809883a 	mov	r4,r17
   4725c:	00470a40 	call	470a4 <__multadd>
   47260:	a43ff81e 	bne	r20,r16,47244 <__alt_data_end+0xfffe0144>
   47264:	ace1883a 	add	r16,r21,r19
   47268:	843ffe04 	addi	r16,r16,-8
   4726c:	9c800a0e 	bge	r19,r18,47298 <__s2b+0xd4>
   47270:	94e5c83a 	sub	r18,r18,r19
   47274:	84a5883a 	add	r18,r16,r18
   47278:	81c00007 	ldb	r7,0(r16)
   4727c:	01800284 	movi	r6,10
   47280:	84000044 	addi	r16,r16,1
   47284:	100b883a 	mov	r5,r2
   47288:	39fff404 	addi	r7,r7,-48
   4728c:	8809883a 	mov	r4,r17
   47290:	00470a40 	call	470a4 <__multadd>
   47294:	84bff81e 	bne	r16,r18,47278 <__alt_data_end+0xfffe0178>
   47298:	dfc00617 	ldw	ra,24(sp)
   4729c:	dd400517 	ldw	r21,20(sp)
   472a0:	dd000417 	ldw	r20,16(sp)
   472a4:	dcc00317 	ldw	r19,12(sp)
   472a8:	dc800217 	ldw	r18,8(sp)
   472ac:	dc400117 	ldw	r17,4(sp)
   472b0:	dc000017 	ldw	r16,0(sp)
   472b4:	dec00704 	addi	sp,sp,28
   472b8:	f800283a 	ret
   472bc:	84000284 	addi	r16,r16,10
   472c0:	1827883a 	mov	r19,r3
   472c4:	003fe906 	br	4726c <__alt_data_end+0xfffe016c>

000472c8 <__hi0bits>:
   472c8:	20bfffec 	andhi	r2,r4,65535
   472cc:	1000141e 	bne	r2,zero,47320 <__hi0bits+0x58>
   472d0:	2008943a 	slli	r4,r4,16
   472d4:	00800404 	movi	r2,16
   472d8:	20ffc02c 	andhi	r3,r4,65280
   472dc:	1800021e 	bne	r3,zero,472e8 <__hi0bits+0x20>
   472e0:	2008923a 	slli	r4,r4,8
   472e4:	10800204 	addi	r2,r2,8
   472e8:	20fc002c 	andhi	r3,r4,61440
   472ec:	1800021e 	bne	r3,zero,472f8 <__hi0bits+0x30>
   472f0:	2008913a 	slli	r4,r4,4
   472f4:	10800104 	addi	r2,r2,4
   472f8:	20f0002c 	andhi	r3,r4,49152
   472fc:	1800031e 	bne	r3,zero,4730c <__hi0bits+0x44>
   47300:	2109883a 	add	r4,r4,r4
   47304:	10800084 	addi	r2,r2,2
   47308:	2109883a 	add	r4,r4,r4
   4730c:	20000316 	blt	r4,zero,4731c <__hi0bits+0x54>
   47310:	2110002c 	andhi	r4,r4,16384
   47314:	2000041e 	bne	r4,zero,47328 <__hi0bits+0x60>
   47318:	00800804 	movi	r2,32
   4731c:	f800283a 	ret
   47320:	0005883a 	mov	r2,zero
   47324:	003fec06 	br	472d8 <__alt_data_end+0xfffe01d8>
   47328:	10800044 	addi	r2,r2,1
   4732c:	f800283a 	ret

00047330 <__lo0bits>:
   47330:	20c00017 	ldw	r3,0(r4)
   47334:	188001cc 	andi	r2,r3,7
   47338:	10000826 	beq	r2,zero,4735c <__lo0bits+0x2c>
   4733c:	1880004c 	andi	r2,r3,1
   47340:	1000211e 	bne	r2,zero,473c8 <__lo0bits+0x98>
   47344:	1880008c 	andi	r2,r3,2
   47348:	1000211e 	bne	r2,zero,473d0 <__lo0bits+0xa0>
   4734c:	1806d0ba 	srli	r3,r3,2
   47350:	00800084 	movi	r2,2
   47354:	20c00015 	stw	r3,0(r4)
   47358:	f800283a 	ret
   4735c:	18bfffcc 	andi	r2,r3,65535
   47360:	10001326 	beq	r2,zero,473b0 <__lo0bits+0x80>
   47364:	0005883a 	mov	r2,zero
   47368:	19403fcc 	andi	r5,r3,255
   4736c:	2800021e 	bne	r5,zero,47378 <__lo0bits+0x48>
   47370:	1806d23a 	srli	r3,r3,8
   47374:	10800204 	addi	r2,r2,8
   47378:	194003cc 	andi	r5,r3,15
   4737c:	2800021e 	bne	r5,zero,47388 <__lo0bits+0x58>
   47380:	1806d13a 	srli	r3,r3,4
   47384:	10800104 	addi	r2,r2,4
   47388:	194000cc 	andi	r5,r3,3
   4738c:	2800021e 	bne	r5,zero,47398 <__lo0bits+0x68>
   47390:	1806d0ba 	srli	r3,r3,2
   47394:	10800084 	addi	r2,r2,2
   47398:	1940004c 	andi	r5,r3,1
   4739c:	2800081e 	bne	r5,zero,473c0 <__lo0bits+0x90>
   473a0:	1806d07a 	srli	r3,r3,1
   473a4:	1800051e 	bne	r3,zero,473bc <__lo0bits+0x8c>
   473a8:	00800804 	movi	r2,32
   473ac:	f800283a 	ret
   473b0:	1806d43a 	srli	r3,r3,16
   473b4:	00800404 	movi	r2,16
   473b8:	003feb06 	br	47368 <__alt_data_end+0xfffe0268>
   473bc:	10800044 	addi	r2,r2,1
   473c0:	20c00015 	stw	r3,0(r4)
   473c4:	f800283a 	ret
   473c8:	0005883a 	mov	r2,zero
   473cc:	f800283a 	ret
   473d0:	1806d07a 	srli	r3,r3,1
   473d4:	00800044 	movi	r2,1
   473d8:	20c00015 	stw	r3,0(r4)
   473dc:	f800283a 	ret

000473e0 <__i2b>:
   473e0:	defffd04 	addi	sp,sp,-12
   473e4:	dc000015 	stw	r16,0(sp)
   473e8:	04000044 	movi	r16,1
   473ec:	dc400115 	stw	r17,4(sp)
   473f0:	2823883a 	mov	r17,r5
   473f4:	800b883a 	mov	r5,r16
   473f8:	dfc00215 	stw	ra,8(sp)
   473fc:	0046fd40 	call	46fd4 <_Balloc>
   47400:	14400515 	stw	r17,20(r2)
   47404:	14000415 	stw	r16,16(r2)
   47408:	dfc00217 	ldw	ra,8(sp)
   4740c:	dc400117 	ldw	r17,4(sp)
   47410:	dc000017 	ldw	r16,0(sp)
   47414:	dec00304 	addi	sp,sp,12
   47418:	f800283a 	ret

0004741c <__multiply>:
   4741c:	defffa04 	addi	sp,sp,-24
   47420:	dcc00315 	stw	r19,12(sp)
   47424:	dc800215 	stw	r18,8(sp)
   47428:	34c00417 	ldw	r19,16(r6)
   4742c:	2c800417 	ldw	r18,16(r5)
   47430:	dd000415 	stw	r20,16(sp)
   47434:	dc400115 	stw	r17,4(sp)
   47438:	dfc00515 	stw	ra,20(sp)
   4743c:	dc000015 	stw	r16,0(sp)
   47440:	2829883a 	mov	r20,r5
   47444:	3023883a 	mov	r17,r6
   47448:	94c0050e 	bge	r18,r19,47460 <__multiply+0x44>
   4744c:	9007883a 	mov	r3,r18
   47450:	3029883a 	mov	r20,r6
   47454:	9825883a 	mov	r18,r19
   47458:	2823883a 	mov	r17,r5
   4745c:	1827883a 	mov	r19,r3
   47460:	a0800217 	ldw	r2,8(r20)
   47464:	94e1883a 	add	r16,r18,r19
   47468:	a1400117 	ldw	r5,4(r20)
   4746c:	1400010e 	bge	r2,r16,47474 <__multiply+0x58>
   47470:	29400044 	addi	r5,r5,1
   47474:	0046fd40 	call	46fd4 <_Balloc>
   47478:	8415883a 	add	r10,r16,r16
   4747c:	12c00504 	addi	r11,r2,20
   47480:	5295883a 	add	r10,r10,r10
   47484:	5a95883a 	add	r10,r11,r10
   47488:	5807883a 	mov	r3,r11
   4748c:	5a80032e 	bgeu	r11,r10,4749c <__multiply+0x80>
   47490:	18000015 	stw	zero,0(r3)
   47494:	18c00104 	addi	r3,r3,4
   47498:	1abffd36 	bltu	r3,r10,47490 <__alt_data_end+0xfffe0390>
   4749c:	9ce7883a 	add	r19,r19,r19
   474a0:	94a5883a 	add	r18,r18,r18
   474a4:	89800504 	addi	r6,r17,20
   474a8:	9ce7883a 	add	r19,r19,r19
   474ac:	a3400504 	addi	r13,r20,20
   474b0:	94a5883a 	add	r18,r18,r18
   474b4:	34d9883a 	add	r12,r6,r19
   474b8:	6c93883a 	add	r9,r13,r18
   474bc:	3300422e 	bgeu	r6,r12,475c8 <__multiply+0x1ac>
   474c0:	37c00017 	ldw	ra,0(r6)
   474c4:	fbffffcc 	andi	r15,ra,65535
   474c8:	78001b26 	beq	r15,zero,47538 <__multiply+0x11c>
   474cc:	5811883a 	mov	r8,r11
   474d0:	681d883a 	mov	r14,r13
   474d4:	000f883a 	mov	r7,zero
   474d8:	71000017 	ldw	r4,0(r14)
   474dc:	40c00017 	ldw	r3,0(r8)
   474e0:	73800104 	addi	r14,r14,4
   474e4:	217fffcc 	andi	r5,r4,65535
   474e8:	2bcb383a 	mul	r5,r5,r15
   474ec:	2008d43a 	srli	r4,r4,16
   474f0:	1c7fffcc 	andi	r17,r3,65535
   474f4:	2c4b883a 	add	r5,r5,r17
   474f8:	29cb883a 	add	r5,r5,r7
   474fc:	23c9383a 	mul	r4,r4,r15
   47500:	1806d43a 	srli	r3,r3,16
   47504:	280ed43a 	srli	r7,r5,16
   47508:	297fffcc 	andi	r5,r5,65535
   4750c:	20c7883a 	add	r3,r4,r3
   47510:	19c7883a 	add	r3,r3,r7
   47514:	1808943a 	slli	r4,r3,16
   47518:	4023883a 	mov	r17,r8
   4751c:	180ed43a 	srli	r7,r3,16
   47520:	214ab03a 	or	r5,r4,r5
   47524:	41400015 	stw	r5,0(r8)
   47528:	42000104 	addi	r8,r8,4
   4752c:	727fea36 	bltu	r14,r9,474d8 <__alt_data_end+0xfffe03d8>
   47530:	89c00115 	stw	r7,4(r17)
   47534:	37c00017 	ldw	ra,0(r6)
   47538:	f83ed43a 	srli	ra,ra,16
   4753c:	f8001f26 	beq	ra,zero,475bc <__multiply+0x1a0>
   47540:	58c00017 	ldw	r3,0(r11)
   47544:	681d883a 	mov	r14,r13
   47548:	581f883a 	mov	r15,r11
   4754c:	1811883a 	mov	r8,r3
   47550:	5825883a 	mov	r18,r11
   47554:	000f883a 	mov	r7,zero
   47558:	00000106 	br	47560 <__multiply+0x144>
   4755c:	8825883a 	mov	r18,r17
   47560:	7140000b 	ldhu	r5,0(r14)
   47564:	4010d43a 	srli	r8,r8,16
   47568:	193fffcc 	andi	r4,r3,65535
   4756c:	2fcb383a 	mul	r5,r5,ra
   47570:	7bc00104 	addi	r15,r15,4
   47574:	73800104 	addi	r14,r14,4
   47578:	2a0b883a 	add	r5,r5,r8
   4757c:	29cb883a 	add	r5,r5,r7
   47580:	2806943a 	slli	r3,r5,16
   47584:	94400104 	addi	r17,r18,4
   47588:	280ad43a 	srli	r5,r5,16
   4758c:	1908b03a 	or	r4,r3,r4
   47590:	793fff15 	stw	r4,-4(r15)
   47594:	70ffff17 	ldw	r3,-4(r14)
   47598:	8a000017 	ldw	r8,0(r17)
   4759c:	1806d43a 	srli	r3,r3,16
   475a0:	413fffcc 	andi	r4,r8,65535
   475a4:	1fc7383a 	mul	r3,r3,ra
   475a8:	1907883a 	add	r3,r3,r4
   475ac:	1947883a 	add	r3,r3,r5
   475b0:	180ed43a 	srli	r7,r3,16
   475b4:	727fe936 	bltu	r14,r9,4755c <__alt_data_end+0xfffe045c>
   475b8:	90c00115 	stw	r3,4(r18)
   475bc:	31800104 	addi	r6,r6,4
   475c0:	5ac00104 	addi	r11,r11,4
   475c4:	333fbe36 	bltu	r6,r12,474c0 <__alt_data_end+0xfffe03c0>
   475c8:	0400090e 	bge	zero,r16,475f0 <__multiply+0x1d4>
   475cc:	50ffff17 	ldw	r3,-4(r10)
   475d0:	52bfff04 	addi	r10,r10,-4
   475d4:	18000326 	beq	r3,zero,475e4 <__multiply+0x1c8>
   475d8:	00000506 	br	475f0 <__multiply+0x1d4>
   475dc:	50c00017 	ldw	r3,0(r10)
   475e0:	1800031e 	bne	r3,zero,475f0 <__multiply+0x1d4>
   475e4:	843fffc4 	addi	r16,r16,-1
   475e8:	52bfff04 	addi	r10,r10,-4
   475ec:	803ffb1e 	bne	r16,zero,475dc <__alt_data_end+0xfffe04dc>
   475f0:	14000415 	stw	r16,16(r2)
   475f4:	dfc00517 	ldw	ra,20(sp)
   475f8:	dd000417 	ldw	r20,16(sp)
   475fc:	dcc00317 	ldw	r19,12(sp)
   47600:	dc800217 	ldw	r18,8(sp)
   47604:	dc400117 	ldw	r17,4(sp)
   47608:	dc000017 	ldw	r16,0(sp)
   4760c:	dec00604 	addi	sp,sp,24
   47610:	f800283a 	ret

00047614 <__pow5mult>:
   47614:	defffa04 	addi	sp,sp,-24
   47618:	dcc00315 	stw	r19,12(sp)
   4761c:	dc000015 	stw	r16,0(sp)
   47620:	dfc00515 	stw	ra,20(sp)
   47624:	dd000415 	stw	r20,16(sp)
   47628:	dc800215 	stw	r18,8(sp)
   4762c:	dc400115 	stw	r17,4(sp)
   47630:	308000cc 	andi	r2,r6,3
   47634:	3021883a 	mov	r16,r6
   47638:	2027883a 	mov	r19,r4
   4763c:	10002f1e 	bne	r2,zero,476fc <__pow5mult+0xe8>
   47640:	2825883a 	mov	r18,r5
   47644:	8021d0ba 	srai	r16,r16,2
   47648:	80001a26 	beq	r16,zero,476b4 <__pow5mult+0xa0>
   4764c:	9c401217 	ldw	r17,72(r19)
   47650:	8800061e 	bne	r17,zero,4766c <__pow5mult+0x58>
   47654:	00003406 	br	47728 <__pow5mult+0x114>
   47658:	8021d07a 	srai	r16,r16,1
   4765c:	80001526 	beq	r16,zero,476b4 <__pow5mult+0xa0>
   47660:	88800017 	ldw	r2,0(r17)
   47664:	10001c26 	beq	r2,zero,476d8 <__pow5mult+0xc4>
   47668:	1023883a 	mov	r17,r2
   4766c:	8080004c 	andi	r2,r16,1
   47670:	103ff926 	beq	r2,zero,47658 <__alt_data_end+0xfffe0558>
   47674:	880d883a 	mov	r6,r17
   47678:	900b883a 	mov	r5,r18
   4767c:	9809883a 	mov	r4,r19
   47680:	004741c0 	call	4741c <__multiply>
   47684:	90001b26 	beq	r18,zero,476f4 <__pow5mult+0xe0>
   47688:	91000117 	ldw	r4,4(r18)
   4768c:	98c01317 	ldw	r3,76(r19)
   47690:	8021d07a 	srai	r16,r16,1
   47694:	2109883a 	add	r4,r4,r4
   47698:	2109883a 	add	r4,r4,r4
   4769c:	1907883a 	add	r3,r3,r4
   476a0:	19000017 	ldw	r4,0(r3)
   476a4:	91000015 	stw	r4,0(r18)
   476a8:	1c800015 	stw	r18,0(r3)
   476ac:	1025883a 	mov	r18,r2
   476b0:	803feb1e 	bne	r16,zero,47660 <__alt_data_end+0xfffe0560>
   476b4:	9005883a 	mov	r2,r18
   476b8:	dfc00517 	ldw	ra,20(sp)
   476bc:	dd000417 	ldw	r20,16(sp)
   476c0:	dcc00317 	ldw	r19,12(sp)
   476c4:	dc800217 	ldw	r18,8(sp)
   476c8:	dc400117 	ldw	r17,4(sp)
   476cc:	dc000017 	ldw	r16,0(sp)
   476d0:	dec00604 	addi	sp,sp,24
   476d4:	f800283a 	ret
   476d8:	880d883a 	mov	r6,r17
   476dc:	880b883a 	mov	r5,r17
   476e0:	9809883a 	mov	r4,r19
   476e4:	004741c0 	call	4741c <__multiply>
   476e8:	88800015 	stw	r2,0(r17)
   476ec:	10000015 	stw	zero,0(r2)
   476f0:	003fdd06 	br	47668 <__alt_data_end+0xfffe0568>
   476f4:	1025883a 	mov	r18,r2
   476f8:	003fd706 	br	47658 <__alt_data_end+0xfffe0558>
   476fc:	10bfffc4 	addi	r2,r2,-1
   47700:	1085883a 	add	r2,r2,r2
   47704:	00c00174 	movhi	r3,5
   47708:	18fe5604 	addi	r3,r3,-1704
   4770c:	1085883a 	add	r2,r2,r2
   47710:	1885883a 	add	r2,r3,r2
   47714:	11800017 	ldw	r6,0(r2)
   47718:	000f883a 	mov	r7,zero
   4771c:	00470a40 	call	470a4 <__multadd>
   47720:	1025883a 	mov	r18,r2
   47724:	003fc706 	br	47644 <__alt_data_end+0xfffe0544>
   47728:	05000044 	movi	r20,1
   4772c:	a00b883a 	mov	r5,r20
   47730:	9809883a 	mov	r4,r19
   47734:	0046fd40 	call	46fd4 <_Balloc>
   47738:	1023883a 	mov	r17,r2
   4773c:	00809c44 	movi	r2,625
   47740:	88800515 	stw	r2,20(r17)
   47744:	8d000415 	stw	r20,16(r17)
   47748:	9c401215 	stw	r17,72(r19)
   4774c:	88000015 	stw	zero,0(r17)
   47750:	003fc606 	br	4766c <__alt_data_end+0xfffe056c>

00047754 <__lshift>:
   47754:	defff904 	addi	sp,sp,-28
   47758:	dd400515 	stw	r21,20(sp)
   4775c:	dcc00315 	stw	r19,12(sp)
   47760:	302bd17a 	srai	r21,r6,5
   47764:	2cc00417 	ldw	r19,16(r5)
   47768:	28800217 	ldw	r2,8(r5)
   4776c:	dd000415 	stw	r20,16(sp)
   47770:	ace7883a 	add	r19,r21,r19
   47774:	dc800215 	stw	r18,8(sp)
   47778:	dc400115 	stw	r17,4(sp)
   4777c:	dc000015 	stw	r16,0(sp)
   47780:	dfc00615 	stw	ra,24(sp)
   47784:	9c000044 	addi	r16,r19,1
   47788:	2823883a 	mov	r17,r5
   4778c:	3029883a 	mov	r20,r6
   47790:	2025883a 	mov	r18,r4
   47794:	29400117 	ldw	r5,4(r5)
   47798:	1400030e 	bge	r2,r16,477a8 <__lshift+0x54>
   4779c:	1085883a 	add	r2,r2,r2
   477a0:	29400044 	addi	r5,r5,1
   477a4:	143ffd16 	blt	r2,r16,4779c <__alt_data_end+0xfffe069c>
   477a8:	9009883a 	mov	r4,r18
   477ac:	0046fd40 	call	46fd4 <_Balloc>
   477b0:	10c00504 	addi	r3,r2,20
   477b4:	0540070e 	bge	zero,r21,477d4 <__lshift+0x80>
   477b8:	ad6b883a 	add	r21,r21,r21
   477bc:	ad6b883a 	add	r21,r21,r21
   477c0:	1809883a 	mov	r4,r3
   477c4:	1d47883a 	add	r3,r3,r21
   477c8:	20000015 	stw	zero,0(r4)
   477cc:	21000104 	addi	r4,r4,4
   477d0:	193ffd1e 	bne	r3,r4,477c8 <__alt_data_end+0xfffe06c8>
   477d4:	8a000417 	ldw	r8,16(r17)
   477d8:	89000504 	addi	r4,r17,20
   477dc:	a18007cc 	andi	r6,r20,31
   477e0:	4211883a 	add	r8,r8,r8
   477e4:	4211883a 	add	r8,r8,r8
   477e8:	2211883a 	add	r8,r4,r8
   477ec:	30002326 	beq	r6,zero,4787c <__lshift+0x128>
   477f0:	02400804 	movi	r9,32
   477f4:	4993c83a 	sub	r9,r9,r6
   477f8:	000b883a 	mov	r5,zero
   477fc:	21c00017 	ldw	r7,0(r4)
   47800:	1815883a 	mov	r10,r3
   47804:	18c00104 	addi	r3,r3,4
   47808:	398e983a 	sll	r7,r7,r6
   4780c:	21000104 	addi	r4,r4,4
   47810:	394ab03a 	or	r5,r7,r5
   47814:	197fff15 	stw	r5,-4(r3)
   47818:	217fff17 	ldw	r5,-4(r4)
   4781c:	2a4ad83a 	srl	r5,r5,r9
   47820:	223ff636 	bltu	r4,r8,477fc <__alt_data_end+0xfffe06fc>
   47824:	51400115 	stw	r5,4(r10)
   47828:	28001a1e 	bne	r5,zero,47894 <__lshift+0x140>
   4782c:	843fffc4 	addi	r16,r16,-1
   47830:	14000415 	stw	r16,16(r2)
   47834:	88000826 	beq	r17,zero,47858 <__lshift+0x104>
   47838:	89000117 	ldw	r4,4(r17)
   4783c:	90c01317 	ldw	r3,76(r18)
   47840:	2109883a 	add	r4,r4,r4
   47844:	2109883a 	add	r4,r4,r4
   47848:	1907883a 	add	r3,r3,r4
   4784c:	19000017 	ldw	r4,0(r3)
   47850:	89000015 	stw	r4,0(r17)
   47854:	1c400015 	stw	r17,0(r3)
   47858:	dfc00617 	ldw	ra,24(sp)
   4785c:	dd400517 	ldw	r21,20(sp)
   47860:	dd000417 	ldw	r20,16(sp)
   47864:	dcc00317 	ldw	r19,12(sp)
   47868:	dc800217 	ldw	r18,8(sp)
   4786c:	dc400117 	ldw	r17,4(sp)
   47870:	dc000017 	ldw	r16,0(sp)
   47874:	dec00704 	addi	sp,sp,28
   47878:	f800283a 	ret
   4787c:	21400017 	ldw	r5,0(r4)
   47880:	18c00104 	addi	r3,r3,4
   47884:	21000104 	addi	r4,r4,4
   47888:	197fff15 	stw	r5,-4(r3)
   4788c:	223ffb36 	bltu	r4,r8,4787c <__alt_data_end+0xfffe077c>
   47890:	003fe606 	br	4782c <__alt_data_end+0xfffe072c>
   47894:	9c000084 	addi	r16,r19,2
   47898:	003fe406 	br	4782c <__alt_data_end+0xfffe072c>

0004789c <__mcmp>:
   4789c:	20800417 	ldw	r2,16(r4)
   478a0:	28c00417 	ldw	r3,16(r5)
   478a4:	10c5c83a 	sub	r2,r2,r3
   478a8:	1000111e 	bne	r2,zero,478f0 <__mcmp+0x54>
   478ac:	18c7883a 	add	r3,r3,r3
   478b0:	18c7883a 	add	r3,r3,r3
   478b4:	21000504 	addi	r4,r4,20
   478b8:	29400504 	addi	r5,r5,20
   478bc:	20c5883a 	add	r2,r4,r3
   478c0:	28cb883a 	add	r5,r5,r3
   478c4:	00000106 	br	478cc <__mcmp+0x30>
   478c8:	20800a2e 	bgeu	r4,r2,478f4 <__mcmp+0x58>
   478cc:	10bfff04 	addi	r2,r2,-4
   478d0:	297fff04 	addi	r5,r5,-4
   478d4:	11800017 	ldw	r6,0(r2)
   478d8:	28c00017 	ldw	r3,0(r5)
   478dc:	30fffa26 	beq	r6,r3,478c8 <__alt_data_end+0xfffe07c8>
   478e0:	30c00236 	bltu	r6,r3,478ec <__mcmp+0x50>
   478e4:	00800044 	movi	r2,1
   478e8:	f800283a 	ret
   478ec:	00bfffc4 	movi	r2,-1
   478f0:	f800283a 	ret
   478f4:	0005883a 	mov	r2,zero
   478f8:	f800283a 	ret

000478fc <__mdiff>:
   478fc:	28c00417 	ldw	r3,16(r5)
   47900:	30800417 	ldw	r2,16(r6)
   47904:	defffa04 	addi	sp,sp,-24
   47908:	dcc00315 	stw	r19,12(sp)
   4790c:	dc800215 	stw	r18,8(sp)
   47910:	dfc00515 	stw	ra,20(sp)
   47914:	dd000415 	stw	r20,16(sp)
   47918:	dc400115 	stw	r17,4(sp)
   4791c:	dc000015 	stw	r16,0(sp)
   47920:	1887c83a 	sub	r3,r3,r2
   47924:	2825883a 	mov	r18,r5
   47928:	3027883a 	mov	r19,r6
   4792c:	1800141e 	bne	r3,zero,47980 <__mdiff+0x84>
   47930:	1085883a 	add	r2,r2,r2
   47934:	1085883a 	add	r2,r2,r2
   47938:	2a000504 	addi	r8,r5,20
   4793c:	34000504 	addi	r16,r6,20
   47940:	4087883a 	add	r3,r8,r2
   47944:	8085883a 	add	r2,r16,r2
   47948:	00000106 	br	47950 <__mdiff+0x54>
   4794c:	40c0592e 	bgeu	r8,r3,47ab4 <__mdiff+0x1b8>
   47950:	18ffff04 	addi	r3,r3,-4
   47954:	10bfff04 	addi	r2,r2,-4
   47958:	19c00017 	ldw	r7,0(r3)
   4795c:	11400017 	ldw	r5,0(r2)
   47960:	397ffa26 	beq	r7,r5,4794c <__alt_data_end+0xfffe084c>
   47964:	3940592e 	bgeu	r7,r5,47acc <__mdiff+0x1d0>
   47968:	9005883a 	mov	r2,r18
   4796c:	4023883a 	mov	r17,r8
   47970:	9825883a 	mov	r18,r19
   47974:	05000044 	movi	r20,1
   47978:	1027883a 	mov	r19,r2
   4797c:	00000406 	br	47990 <__mdiff+0x94>
   47980:	18005616 	blt	r3,zero,47adc <__mdiff+0x1e0>
   47984:	34400504 	addi	r17,r6,20
   47988:	2c000504 	addi	r16,r5,20
   4798c:	0029883a 	mov	r20,zero
   47990:	91400117 	ldw	r5,4(r18)
   47994:	0046fd40 	call	46fd4 <_Balloc>
   47998:	92400417 	ldw	r9,16(r18)
   4799c:	9b000417 	ldw	r12,16(r19)
   479a0:	12c00504 	addi	r11,r2,20
   479a4:	4a51883a 	add	r8,r9,r9
   479a8:	6319883a 	add	r12,r12,r12
   479ac:	4211883a 	add	r8,r8,r8
   479b0:	6319883a 	add	r12,r12,r12
   479b4:	15000315 	stw	r20,12(r2)
   479b8:	8211883a 	add	r8,r16,r8
   479bc:	8b19883a 	add	r12,r17,r12
   479c0:	0007883a 	mov	r3,zero
   479c4:	81400017 	ldw	r5,0(r16)
   479c8:	89c00017 	ldw	r7,0(r17)
   479cc:	59800104 	addi	r6,r11,4
   479d0:	293fffcc 	andi	r4,r5,65535
   479d4:	20c7883a 	add	r3,r4,r3
   479d8:	393fffcc 	andi	r4,r7,65535
   479dc:	1909c83a 	sub	r4,r3,r4
   479e0:	280ad43a 	srli	r5,r5,16
   479e4:	380ed43a 	srli	r7,r7,16
   479e8:	2007d43a 	srai	r3,r4,16
   479ec:	213fffcc 	andi	r4,r4,65535
   479f0:	29cbc83a 	sub	r5,r5,r7
   479f4:	28c7883a 	add	r3,r5,r3
   479f8:	180a943a 	slli	r5,r3,16
   479fc:	8c400104 	addi	r17,r17,4
   47a00:	84000104 	addi	r16,r16,4
   47a04:	2908b03a 	or	r4,r5,r4
   47a08:	59000015 	stw	r4,0(r11)
   47a0c:	1807d43a 	srai	r3,r3,16
   47a10:	3015883a 	mov	r10,r6
   47a14:	3017883a 	mov	r11,r6
   47a18:	8b3fea36 	bltu	r17,r12,479c4 <__alt_data_end+0xfffe08c4>
   47a1c:	8200162e 	bgeu	r16,r8,47a78 <__mdiff+0x17c>
   47a20:	8017883a 	mov	r11,r16
   47a24:	59400017 	ldw	r5,0(r11)
   47a28:	31800104 	addi	r6,r6,4
   47a2c:	5ac00104 	addi	r11,r11,4
   47a30:	293fffcc 	andi	r4,r5,65535
   47a34:	20c7883a 	add	r3,r4,r3
   47a38:	280ed43a 	srli	r7,r5,16
   47a3c:	180bd43a 	srai	r5,r3,16
   47a40:	193fffcc 	andi	r4,r3,65535
   47a44:	3947883a 	add	r3,r7,r5
   47a48:	180a943a 	slli	r5,r3,16
   47a4c:	1807d43a 	srai	r3,r3,16
   47a50:	2908b03a 	or	r4,r5,r4
   47a54:	313fff15 	stw	r4,-4(r6)
   47a58:	5a3ff236 	bltu	r11,r8,47a24 <__alt_data_end+0xfffe0924>
   47a5c:	0406303a 	nor	r3,zero,r16
   47a60:	1a07883a 	add	r3,r3,r8
   47a64:	1806d0ba 	srli	r3,r3,2
   47a68:	18c00044 	addi	r3,r3,1
   47a6c:	18c7883a 	add	r3,r3,r3
   47a70:	18c7883a 	add	r3,r3,r3
   47a74:	50d5883a 	add	r10,r10,r3
   47a78:	50ffff04 	addi	r3,r10,-4
   47a7c:	2000041e 	bne	r4,zero,47a90 <__mdiff+0x194>
   47a80:	18ffff04 	addi	r3,r3,-4
   47a84:	19000017 	ldw	r4,0(r3)
   47a88:	4a7fffc4 	addi	r9,r9,-1
   47a8c:	203ffc26 	beq	r4,zero,47a80 <__alt_data_end+0xfffe0980>
   47a90:	12400415 	stw	r9,16(r2)
   47a94:	dfc00517 	ldw	ra,20(sp)
   47a98:	dd000417 	ldw	r20,16(sp)
   47a9c:	dcc00317 	ldw	r19,12(sp)
   47aa0:	dc800217 	ldw	r18,8(sp)
   47aa4:	dc400117 	ldw	r17,4(sp)
   47aa8:	dc000017 	ldw	r16,0(sp)
   47aac:	dec00604 	addi	sp,sp,24
   47ab0:	f800283a 	ret
   47ab4:	000b883a 	mov	r5,zero
   47ab8:	0046fd40 	call	46fd4 <_Balloc>
   47abc:	00c00044 	movi	r3,1
   47ac0:	10c00415 	stw	r3,16(r2)
   47ac4:	10000515 	stw	zero,20(r2)
   47ac8:	003ff206 	br	47a94 <__alt_data_end+0xfffe0994>
   47acc:	8023883a 	mov	r17,r16
   47ad0:	0029883a 	mov	r20,zero
   47ad4:	4021883a 	mov	r16,r8
   47ad8:	003fad06 	br	47990 <__alt_data_end+0xfffe0890>
   47adc:	9005883a 	mov	r2,r18
   47ae0:	94400504 	addi	r17,r18,20
   47ae4:	9c000504 	addi	r16,r19,20
   47ae8:	9825883a 	mov	r18,r19
   47aec:	05000044 	movi	r20,1
   47af0:	1027883a 	mov	r19,r2
   47af4:	003fa606 	br	47990 <__alt_data_end+0xfffe0890>

00047af8 <__ulp>:
   47af8:	295ffc2c 	andhi	r5,r5,32752
   47afc:	00bf3034 	movhi	r2,64704
   47b00:	2887883a 	add	r3,r5,r2
   47b04:	00c0020e 	bge	zero,r3,47b10 <__ulp+0x18>
   47b08:	0005883a 	mov	r2,zero
   47b0c:	f800283a 	ret
   47b10:	00c7c83a 	sub	r3,zero,r3
   47b14:	1807d53a 	srai	r3,r3,20
   47b18:	008004c4 	movi	r2,19
   47b1c:	10c00b0e 	bge	r2,r3,47b4c <__ulp+0x54>
   47b20:	18bffb04 	addi	r2,r3,-20
   47b24:	01000784 	movi	r4,30
   47b28:	0007883a 	mov	r3,zero
   47b2c:	20800516 	blt	r4,r2,47b44 <__ulp+0x4c>
   47b30:	010007c4 	movi	r4,31
   47b34:	2089c83a 	sub	r4,r4,r2
   47b38:	00800044 	movi	r2,1
   47b3c:	1104983a 	sll	r2,r2,r4
   47b40:	f800283a 	ret
   47b44:	00800044 	movi	r2,1
   47b48:	f800283a 	ret
   47b4c:	01400234 	movhi	r5,8
   47b50:	28c7d83a 	sra	r3,r5,r3
   47b54:	0005883a 	mov	r2,zero
   47b58:	f800283a 	ret

00047b5c <__b2d>:
   47b5c:	defffa04 	addi	sp,sp,-24
   47b60:	dc000015 	stw	r16,0(sp)
   47b64:	24000417 	ldw	r16,16(r4)
   47b68:	dc400115 	stw	r17,4(sp)
   47b6c:	24400504 	addi	r17,r4,20
   47b70:	8421883a 	add	r16,r16,r16
   47b74:	8421883a 	add	r16,r16,r16
   47b78:	8c21883a 	add	r16,r17,r16
   47b7c:	dc800215 	stw	r18,8(sp)
   47b80:	84bfff17 	ldw	r18,-4(r16)
   47b84:	dd000415 	stw	r20,16(sp)
   47b88:	dcc00315 	stw	r19,12(sp)
   47b8c:	9009883a 	mov	r4,r18
   47b90:	2829883a 	mov	r20,r5
   47b94:	dfc00515 	stw	ra,20(sp)
   47b98:	00472c80 	call	472c8 <__hi0bits>
   47b9c:	00c00804 	movi	r3,32
   47ba0:	1889c83a 	sub	r4,r3,r2
   47ba4:	a1000015 	stw	r4,0(r20)
   47ba8:	01000284 	movi	r4,10
   47bac:	84ffff04 	addi	r19,r16,-4
   47bb0:	20801216 	blt	r4,r2,47bfc <__b2d+0xa0>
   47bb4:	018002c4 	movi	r6,11
   47bb8:	308dc83a 	sub	r6,r6,r2
   47bbc:	9186d83a 	srl	r3,r18,r6
   47bc0:	18cffc34 	orhi	r3,r3,16368
   47bc4:	8cc0212e 	bgeu	r17,r19,47c4c <__b2d+0xf0>
   47bc8:	813ffe17 	ldw	r4,-8(r16)
   47bcc:	218cd83a 	srl	r6,r4,r6
   47bd0:	10800544 	addi	r2,r2,21
   47bd4:	9084983a 	sll	r2,r18,r2
   47bd8:	1184b03a 	or	r2,r2,r6
   47bdc:	dfc00517 	ldw	ra,20(sp)
   47be0:	dd000417 	ldw	r20,16(sp)
   47be4:	dcc00317 	ldw	r19,12(sp)
   47be8:	dc800217 	ldw	r18,8(sp)
   47bec:	dc400117 	ldw	r17,4(sp)
   47bf0:	dc000017 	ldw	r16,0(sp)
   47bf4:	dec00604 	addi	sp,sp,24
   47bf8:	f800283a 	ret
   47bfc:	8cc00f2e 	bgeu	r17,r19,47c3c <__b2d+0xe0>
   47c00:	117ffd44 	addi	r5,r2,-11
   47c04:	80bffe17 	ldw	r2,-8(r16)
   47c08:	28000e26 	beq	r5,zero,47c44 <__b2d+0xe8>
   47c0c:	1949c83a 	sub	r4,r3,r5
   47c10:	9164983a 	sll	r18,r18,r5
   47c14:	1106d83a 	srl	r3,r2,r4
   47c18:	81bffe04 	addi	r6,r16,-8
   47c1c:	948ffc34 	orhi	r18,r18,16368
   47c20:	90c6b03a 	or	r3,r18,r3
   47c24:	89800e2e 	bgeu	r17,r6,47c60 <__b2d+0x104>
   47c28:	81bffd17 	ldw	r6,-12(r16)
   47c2c:	1144983a 	sll	r2,r2,r5
   47c30:	310ad83a 	srl	r5,r6,r4
   47c34:	2884b03a 	or	r2,r5,r2
   47c38:	003fe806 	br	47bdc <__alt_data_end+0xfffe0adc>
   47c3c:	10bffd44 	addi	r2,r2,-11
   47c40:	1000041e 	bne	r2,zero,47c54 <__b2d+0xf8>
   47c44:	90cffc34 	orhi	r3,r18,16368
   47c48:	003fe406 	br	47bdc <__alt_data_end+0xfffe0adc>
   47c4c:	000d883a 	mov	r6,zero
   47c50:	003fdf06 	br	47bd0 <__alt_data_end+0xfffe0ad0>
   47c54:	90a4983a 	sll	r18,r18,r2
   47c58:	0005883a 	mov	r2,zero
   47c5c:	003ff906 	br	47c44 <__alt_data_end+0xfffe0b44>
   47c60:	1144983a 	sll	r2,r2,r5
   47c64:	003fdd06 	br	47bdc <__alt_data_end+0xfffe0adc>

00047c68 <__d2b>:
   47c68:	defff804 	addi	sp,sp,-32
   47c6c:	dc000215 	stw	r16,8(sp)
   47c70:	3021883a 	mov	r16,r6
   47c74:	dc400315 	stw	r17,12(sp)
   47c78:	8022907a 	slli	r17,r16,1
   47c7c:	dd000615 	stw	r20,24(sp)
   47c80:	2829883a 	mov	r20,r5
   47c84:	01400044 	movi	r5,1
   47c88:	dcc00515 	stw	r19,20(sp)
   47c8c:	dc800415 	stw	r18,16(sp)
   47c90:	dfc00715 	stw	ra,28(sp)
   47c94:	3825883a 	mov	r18,r7
   47c98:	8822d57a 	srli	r17,r17,21
   47c9c:	0046fd40 	call	46fd4 <_Balloc>
   47ca0:	1027883a 	mov	r19,r2
   47ca4:	00800434 	movhi	r2,16
   47ca8:	10bfffc4 	addi	r2,r2,-1
   47cac:	808c703a 	and	r6,r16,r2
   47cb0:	88000126 	beq	r17,zero,47cb8 <__d2b+0x50>
   47cb4:	31800434 	orhi	r6,r6,16
   47cb8:	d9800015 	stw	r6,0(sp)
   47cbc:	a0002426 	beq	r20,zero,47d50 <__d2b+0xe8>
   47cc0:	d9000104 	addi	r4,sp,4
   47cc4:	dd000115 	stw	r20,4(sp)
   47cc8:	00473300 	call	47330 <__lo0bits>
   47ccc:	d8c00017 	ldw	r3,0(sp)
   47cd0:	10002f1e 	bne	r2,zero,47d90 <__d2b+0x128>
   47cd4:	d9000117 	ldw	r4,4(sp)
   47cd8:	99000515 	stw	r4,20(r19)
   47cdc:	1821003a 	cmpeq	r16,r3,zero
   47ce0:	01000084 	movi	r4,2
   47ce4:	2421c83a 	sub	r16,r4,r16
   47ce8:	98c00615 	stw	r3,24(r19)
   47cec:	9c000415 	stw	r16,16(r19)
   47cf0:	88001f1e 	bne	r17,zero,47d70 <__d2b+0x108>
   47cf4:	10bef384 	addi	r2,r2,-1074
   47cf8:	90800015 	stw	r2,0(r18)
   47cfc:	00900034 	movhi	r2,16384
   47d00:	10bfffc4 	addi	r2,r2,-1
   47d04:	8085883a 	add	r2,r16,r2
   47d08:	1085883a 	add	r2,r2,r2
   47d0c:	1085883a 	add	r2,r2,r2
   47d10:	9885883a 	add	r2,r19,r2
   47d14:	11000517 	ldw	r4,20(r2)
   47d18:	8020917a 	slli	r16,r16,5
   47d1c:	00472c80 	call	472c8 <__hi0bits>
   47d20:	d8c00817 	ldw	r3,32(sp)
   47d24:	8085c83a 	sub	r2,r16,r2
   47d28:	18800015 	stw	r2,0(r3)
   47d2c:	9805883a 	mov	r2,r19
   47d30:	dfc00717 	ldw	ra,28(sp)
   47d34:	dd000617 	ldw	r20,24(sp)
   47d38:	dcc00517 	ldw	r19,20(sp)
   47d3c:	dc800417 	ldw	r18,16(sp)
   47d40:	dc400317 	ldw	r17,12(sp)
   47d44:	dc000217 	ldw	r16,8(sp)
   47d48:	dec00804 	addi	sp,sp,32
   47d4c:	f800283a 	ret
   47d50:	d809883a 	mov	r4,sp
   47d54:	00473300 	call	47330 <__lo0bits>
   47d58:	d8c00017 	ldw	r3,0(sp)
   47d5c:	04000044 	movi	r16,1
   47d60:	9c000415 	stw	r16,16(r19)
   47d64:	98c00515 	stw	r3,20(r19)
   47d68:	10800804 	addi	r2,r2,32
   47d6c:	883fe126 	beq	r17,zero,47cf4 <__alt_data_end+0xfffe0bf4>
   47d70:	00c00d44 	movi	r3,53
   47d74:	8c7ef344 	addi	r17,r17,-1075
   47d78:	88a3883a 	add	r17,r17,r2
   47d7c:	1885c83a 	sub	r2,r3,r2
   47d80:	d8c00817 	ldw	r3,32(sp)
   47d84:	94400015 	stw	r17,0(r18)
   47d88:	18800015 	stw	r2,0(r3)
   47d8c:	003fe706 	br	47d2c <__alt_data_end+0xfffe0c2c>
   47d90:	01000804 	movi	r4,32
   47d94:	2089c83a 	sub	r4,r4,r2
   47d98:	1908983a 	sll	r4,r3,r4
   47d9c:	d9400117 	ldw	r5,4(sp)
   47da0:	1886d83a 	srl	r3,r3,r2
   47da4:	2148b03a 	or	r4,r4,r5
   47da8:	99000515 	stw	r4,20(r19)
   47dac:	d8c00015 	stw	r3,0(sp)
   47db0:	003fca06 	br	47cdc <__alt_data_end+0xfffe0bdc>

00047db4 <__ratio>:
   47db4:	defff904 	addi	sp,sp,-28
   47db8:	dc400315 	stw	r17,12(sp)
   47dbc:	2823883a 	mov	r17,r5
   47dc0:	d9400104 	addi	r5,sp,4
   47dc4:	dfc00615 	stw	ra,24(sp)
   47dc8:	dcc00515 	stw	r19,20(sp)
   47dcc:	dc800415 	stw	r18,16(sp)
   47dd0:	2027883a 	mov	r19,r4
   47dd4:	dc000215 	stw	r16,8(sp)
   47dd8:	0047b5c0 	call	47b5c <__b2d>
   47ddc:	d80b883a 	mov	r5,sp
   47de0:	8809883a 	mov	r4,r17
   47de4:	1025883a 	mov	r18,r2
   47de8:	1821883a 	mov	r16,r3
   47dec:	0047b5c0 	call	47b5c <__b2d>
   47df0:	8a000417 	ldw	r8,16(r17)
   47df4:	99000417 	ldw	r4,16(r19)
   47df8:	d9400117 	ldw	r5,4(sp)
   47dfc:	2209c83a 	sub	r4,r4,r8
   47e00:	2010917a 	slli	r8,r4,5
   47e04:	d9000017 	ldw	r4,0(sp)
   47e08:	2909c83a 	sub	r4,r5,r4
   47e0c:	4109883a 	add	r4,r8,r4
   47e10:	01000e0e 	bge	zero,r4,47e4c <__ratio+0x98>
   47e14:	2008953a 	slli	r4,r4,20
   47e18:	2421883a 	add	r16,r4,r16
   47e1c:	100d883a 	mov	r6,r2
   47e20:	180f883a 	mov	r7,r3
   47e24:	9009883a 	mov	r4,r18
   47e28:	800b883a 	mov	r5,r16
   47e2c:	004052c0 	call	4052c <__divdf3>
   47e30:	dfc00617 	ldw	ra,24(sp)
   47e34:	dcc00517 	ldw	r19,20(sp)
   47e38:	dc800417 	ldw	r18,16(sp)
   47e3c:	dc400317 	ldw	r17,12(sp)
   47e40:	dc000217 	ldw	r16,8(sp)
   47e44:	dec00704 	addi	sp,sp,28
   47e48:	f800283a 	ret
   47e4c:	2008953a 	slli	r4,r4,20
   47e50:	1907c83a 	sub	r3,r3,r4
   47e54:	003ff106 	br	47e1c <__alt_data_end+0xfffe0d1c>

00047e58 <_mprec_log10>:
   47e58:	defffe04 	addi	sp,sp,-8
   47e5c:	dc000015 	stw	r16,0(sp)
   47e60:	dfc00115 	stw	ra,4(sp)
   47e64:	008005c4 	movi	r2,23
   47e68:	2021883a 	mov	r16,r4
   47e6c:	11000d0e 	bge	r2,r4,47ea4 <_mprec_log10+0x4c>
   47e70:	0005883a 	mov	r2,zero
   47e74:	00cffc34 	movhi	r3,16368
   47e78:	843fffc4 	addi	r16,r16,-1
   47e7c:	000d883a 	mov	r6,zero
   47e80:	01d00934 	movhi	r7,16420
   47e84:	1009883a 	mov	r4,r2
   47e88:	180b883a 	mov	r5,r3
   47e8c:	004bd440 	call	4bd44 <__muldf3>
   47e90:	803ff91e 	bne	r16,zero,47e78 <__alt_data_end+0xfffe0d78>
   47e94:	dfc00117 	ldw	ra,4(sp)
   47e98:	dc000017 	ldw	r16,0(sp)
   47e9c:	dec00204 	addi	sp,sp,8
   47ea0:	f800283a 	ret
   47ea4:	202090fa 	slli	r16,r4,3
   47ea8:	00800174 	movhi	r2,5
   47eac:	10be6d04 	addi	r2,r2,-1612
   47eb0:	1421883a 	add	r16,r2,r16
   47eb4:	80800017 	ldw	r2,0(r16)
   47eb8:	80c00117 	ldw	r3,4(r16)
   47ebc:	dfc00117 	ldw	ra,4(sp)
   47ec0:	dc000017 	ldw	r16,0(sp)
   47ec4:	dec00204 	addi	sp,sp,8
   47ec8:	f800283a 	ret

00047ecc <__copybits>:
   47ecc:	297fffc4 	addi	r5,r5,-1
   47ed0:	280fd17a 	srai	r7,r5,5
   47ed4:	30c00417 	ldw	r3,16(r6)
   47ed8:	30800504 	addi	r2,r6,20
   47edc:	39c00044 	addi	r7,r7,1
   47ee0:	18c7883a 	add	r3,r3,r3
   47ee4:	39cf883a 	add	r7,r7,r7
   47ee8:	18c7883a 	add	r3,r3,r3
   47eec:	39cf883a 	add	r7,r7,r7
   47ef0:	10c7883a 	add	r3,r2,r3
   47ef4:	21cf883a 	add	r7,r4,r7
   47ef8:	10c00d2e 	bgeu	r2,r3,47f30 <__copybits+0x64>
   47efc:	200b883a 	mov	r5,r4
   47f00:	12000017 	ldw	r8,0(r2)
   47f04:	29400104 	addi	r5,r5,4
   47f08:	10800104 	addi	r2,r2,4
   47f0c:	2a3fff15 	stw	r8,-4(r5)
   47f10:	10fffb36 	bltu	r2,r3,47f00 <__alt_data_end+0xfffe0e00>
   47f14:	1985c83a 	sub	r2,r3,r6
   47f18:	10bffac4 	addi	r2,r2,-21
   47f1c:	1004d0ba 	srli	r2,r2,2
   47f20:	10800044 	addi	r2,r2,1
   47f24:	1085883a 	add	r2,r2,r2
   47f28:	1085883a 	add	r2,r2,r2
   47f2c:	2089883a 	add	r4,r4,r2
   47f30:	21c0032e 	bgeu	r4,r7,47f40 <__copybits+0x74>
   47f34:	20000015 	stw	zero,0(r4)
   47f38:	21000104 	addi	r4,r4,4
   47f3c:	21fffd36 	bltu	r4,r7,47f34 <__alt_data_end+0xfffe0e34>
   47f40:	f800283a 	ret

00047f44 <__any_on>:
   47f44:	20c00417 	ldw	r3,16(r4)
   47f48:	2805d17a 	srai	r2,r5,5
   47f4c:	21000504 	addi	r4,r4,20
   47f50:	18800d0e 	bge	r3,r2,47f88 <__any_on+0x44>
   47f54:	18c7883a 	add	r3,r3,r3
   47f58:	18c7883a 	add	r3,r3,r3
   47f5c:	20c7883a 	add	r3,r4,r3
   47f60:	20c0192e 	bgeu	r4,r3,47fc8 <__any_on+0x84>
   47f64:	18bfff17 	ldw	r2,-4(r3)
   47f68:	18ffff04 	addi	r3,r3,-4
   47f6c:	1000041e 	bne	r2,zero,47f80 <__any_on+0x3c>
   47f70:	20c0142e 	bgeu	r4,r3,47fc4 <__any_on+0x80>
   47f74:	18ffff04 	addi	r3,r3,-4
   47f78:	19400017 	ldw	r5,0(r3)
   47f7c:	283ffc26 	beq	r5,zero,47f70 <__alt_data_end+0xfffe0e70>
   47f80:	00800044 	movi	r2,1
   47f84:	f800283a 	ret
   47f88:	10c00a0e 	bge	r2,r3,47fb4 <__any_on+0x70>
   47f8c:	1085883a 	add	r2,r2,r2
   47f90:	1085883a 	add	r2,r2,r2
   47f94:	294007cc 	andi	r5,r5,31
   47f98:	2087883a 	add	r3,r4,r2
   47f9c:	283ff026 	beq	r5,zero,47f60 <__alt_data_end+0xfffe0e60>
   47fa0:	19800017 	ldw	r6,0(r3)
   47fa4:	3144d83a 	srl	r2,r6,r5
   47fa8:	114a983a 	sll	r5,r2,r5
   47fac:	317ff41e 	bne	r6,r5,47f80 <__alt_data_end+0xfffe0e80>
   47fb0:	003feb06 	br	47f60 <__alt_data_end+0xfffe0e60>
   47fb4:	1085883a 	add	r2,r2,r2
   47fb8:	1085883a 	add	r2,r2,r2
   47fbc:	2087883a 	add	r3,r4,r2
   47fc0:	003fe706 	br	47f60 <__alt_data_end+0xfffe0e60>
   47fc4:	f800283a 	ret
   47fc8:	0005883a 	mov	r2,zero
   47fcc:	f800283a 	ret

00047fd0 <_realloc_r>:
   47fd0:	defff604 	addi	sp,sp,-40
   47fd4:	dc800215 	stw	r18,8(sp)
   47fd8:	dfc00915 	stw	ra,36(sp)
   47fdc:	df000815 	stw	fp,32(sp)
   47fe0:	ddc00715 	stw	r23,28(sp)
   47fe4:	dd800615 	stw	r22,24(sp)
   47fe8:	dd400515 	stw	r21,20(sp)
   47fec:	dd000415 	stw	r20,16(sp)
   47ff0:	dcc00315 	stw	r19,12(sp)
   47ff4:	dc400115 	stw	r17,4(sp)
   47ff8:	dc000015 	stw	r16,0(sp)
   47ffc:	3025883a 	mov	r18,r6
   48000:	2800b726 	beq	r5,zero,482e0 <_realloc_r+0x310>
   48004:	282b883a 	mov	r21,r5
   48008:	2029883a 	mov	r20,r4
   4800c:	004d4d80 	call	4d4d8 <__malloc_lock>
   48010:	a8bfff17 	ldw	r2,-4(r21)
   48014:	043fff04 	movi	r16,-4
   48018:	90c002c4 	addi	r3,r18,11
   4801c:	01000584 	movi	r4,22
   48020:	acfffe04 	addi	r19,r21,-8
   48024:	1420703a 	and	r16,r2,r16
   48028:	20c0332e 	bgeu	r4,r3,480f8 <_realloc_r+0x128>
   4802c:	047ffe04 	movi	r17,-8
   48030:	1c62703a 	and	r17,r3,r17
   48034:	8807883a 	mov	r3,r17
   48038:	88005816 	blt	r17,zero,4819c <_realloc_r+0x1cc>
   4803c:	8c805736 	bltu	r17,r18,4819c <_realloc_r+0x1cc>
   48040:	80c0300e 	bge	r16,r3,48104 <_realloc_r+0x134>
   48044:	07000174 	movhi	fp,5
   48048:	e73fd904 	addi	fp,fp,-156
   4804c:	e1c00217 	ldw	r7,8(fp)
   48050:	9c09883a 	add	r4,r19,r16
   48054:	22000117 	ldw	r8,4(r4)
   48058:	21c06326 	beq	r4,r7,481e8 <_realloc_r+0x218>
   4805c:	017fff84 	movi	r5,-2
   48060:	414a703a 	and	r5,r8,r5
   48064:	214b883a 	add	r5,r4,r5
   48068:	29800117 	ldw	r6,4(r5)
   4806c:	3180004c 	andi	r6,r6,1
   48070:	30003f26 	beq	r6,zero,48170 <_realloc_r+0x1a0>
   48074:	1080004c 	andi	r2,r2,1
   48078:	10008326 	beq	r2,zero,48288 <_realloc_r+0x2b8>
   4807c:	900b883a 	mov	r5,r18
   48080:	a009883a 	mov	r4,r20
   48084:	00463180 	call	46318 <_malloc_r>
   48088:	1025883a 	mov	r18,r2
   4808c:	10011e26 	beq	r2,zero,48508 <_realloc_r+0x538>
   48090:	a93fff17 	ldw	r4,-4(r21)
   48094:	10fffe04 	addi	r3,r2,-8
   48098:	00bfff84 	movi	r2,-2
   4809c:	2084703a 	and	r2,r4,r2
   480a0:	9885883a 	add	r2,r19,r2
   480a4:	1880ee26 	beq	r3,r2,48460 <_realloc_r+0x490>
   480a8:	81bfff04 	addi	r6,r16,-4
   480ac:	00800904 	movi	r2,36
   480b0:	1180b836 	bltu	r2,r6,48394 <_realloc_r+0x3c4>
   480b4:	00c004c4 	movi	r3,19
   480b8:	19809636 	bltu	r3,r6,48314 <_realloc_r+0x344>
   480bc:	9005883a 	mov	r2,r18
   480c0:	a807883a 	mov	r3,r21
   480c4:	19000017 	ldw	r4,0(r3)
   480c8:	11000015 	stw	r4,0(r2)
   480cc:	19000117 	ldw	r4,4(r3)
   480d0:	11000115 	stw	r4,4(r2)
   480d4:	18c00217 	ldw	r3,8(r3)
   480d8:	10c00215 	stw	r3,8(r2)
   480dc:	a80b883a 	mov	r5,r21
   480e0:	a009883a 	mov	r4,r20
   480e4:	004572c0 	call	4572c <_free_r>
   480e8:	a009883a 	mov	r4,r20
   480ec:	004d4fc0 	call	4d4fc <__malloc_unlock>
   480f0:	9005883a 	mov	r2,r18
   480f4:	00001206 	br	48140 <_realloc_r+0x170>
   480f8:	00c00404 	movi	r3,16
   480fc:	1823883a 	mov	r17,r3
   48100:	003fce06 	br	4803c <__alt_data_end+0xfffe0f3c>
   48104:	a825883a 	mov	r18,r21
   48108:	8445c83a 	sub	r2,r16,r17
   4810c:	00c003c4 	movi	r3,15
   48110:	18802636 	bltu	r3,r2,481ac <_realloc_r+0x1dc>
   48114:	99800117 	ldw	r6,4(r19)
   48118:	9c07883a 	add	r3,r19,r16
   4811c:	3180004c 	andi	r6,r6,1
   48120:	3420b03a 	or	r16,r6,r16
   48124:	9c000115 	stw	r16,4(r19)
   48128:	18800117 	ldw	r2,4(r3)
   4812c:	10800054 	ori	r2,r2,1
   48130:	18800115 	stw	r2,4(r3)
   48134:	a009883a 	mov	r4,r20
   48138:	004d4fc0 	call	4d4fc <__malloc_unlock>
   4813c:	9005883a 	mov	r2,r18
   48140:	dfc00917 	ldw	ra,36(sp)
   48144:	df000817 	ldw	fp,32(sp)
   48148:	ddc00717 	ldw	r23,28(sp)
   4814c:	dd800617 	ldw	r22,24(sp)
   48150:	dd400517 	ldw	r21,20(sp)
   48154:	dd000417 	ldw	r20,16(sp)
   48158:	dcc00317 	ldw	r19,12(sp)
   4815c:	dc800217 	ldw	r18,8(sp)
   48160:	dc400117 	ldw	r17,4(sp)
   48164:	dc000017 	ldw	r16,0(sp)
   48168:	dec00a04 	addi	sp,sp,40
   4816c:	f800283a 	ret
   48170:	017fff04 	movi	r5,-4
   48174:	414a703a 	and	r5,r8,r5
   48178:	814d883a 	add	r6,r16,r5
   4817c:	30c01f16 	blt	r6,r3,481fc <_realloc_r+0x22c>
   48180:	20800317 	ldw	r2,12(r4)
   48184:	20c00217 	ldw	r3,8(r4)
   48188:	a825883a 	mov	r18,r21
   4818c:	3021883a 	mov	r16,r6
   48190:	18800315 	stw	r2,12(r3)
   48194:	10c00215 	stw	r3,8(r2)
   48198:	003fdb06 	br	48108 <__alt_data_end+0xfffe1008>
   4819c:	00800304 	movi	r2,12
   481a0:	a0800015 	stw	r2,0(r20)
   481a4:	0005883a 	mov	r2,zero
   481a8:	003fe506 	br	48140 <__alt_data_end+0xfffe1040>
   481ac:	98c00117 	ldw	r3,4(r19)
   481b0:	9c4b883a 	add	r5,r19,r17
   481b4:	11000054 	ori	r4,r2,1
   481b8:	18c0004c 	andi	r3,r3,1
   481bc:	1c62b03a 	or	r17,r3,r17
   481c0:	9c400115 	stw	r17,4(r19)
   481c4:	29000115 	stw	r4,4(r5)
   481c8:	2885883a 	add	r2,r5,r2
   481cc:	10c00117 	ldw	r3,4(r2)
   481d0:	29400204 	addi	r5,r5,8
   481d4:	a009883a 	mov	r4,r20
   481d8:	18c00054 	ori	r3,r3,1
   481dc:	10c00115 	stw	r3,4(r2)
   481e0:	004572c0 	call	4572c <_free_r>
   481e4:	003fd306 	br	48134 <__alt_data_end+0xfffe1034>
   481e8:	017fff04 	movi	r5,-4
   481ec:	414a703a 	and	r5,r8,r5
   481f0:	89800404 	addi	r6,r17,16
   481f4:	8151883a 	add	r8,r16,r5
   481f8:	4180590e 	bge	r8,r6,48360 <_realloc_r+0x390>
   481fc:	1080004c 	andi	r2,r2,1
   48200:	103f9e1e 	bne	r2,zero,4807c <__alt_data_end+0xfffe0f7c>
   48204:	adbffe17 	ldw	r22,-8(r21)
   48208:	00bfff04 	movi	r2,-4
   4820c:	9dadc83a 	sub	r22,r19,r22
   48210:	b1800117 	ldw	r6,4(r22)
   48214:	3084703a 	and	r2,r6,r2
   48218:	20002026 	beq	r4,zero,4829c <_realloc_r+0x2cc>
   4821c:	80af883a 	add	r23,r16,r2
   48220:	b96f883a 	add	r23,r23,r5
   48224:	21c05f26 	beq	r4,r7,483a4 <_realloc_r+0x3d4>
   48228:	b8c01c16 	blt	r23,r3,4829c <_realloc_r+0x2cc>
   4822c:	20800317 	ldw	r2,12(r4)
   48230:	20c00217 	ldw	r3,8(r4)
   48234:	81bfff04 	addi	r6,r16,-4
   48238:	01000904 	movi	r4,36
   4823c:	18800315 	stw	r2,12(r3)
   48240:	10c00215 	stw	r3,8(r2)
   48244:	b0c00217 	ldw	r3,8(r22)
   48248:	b0800317 	ldw	r2,12(r22)
   4824c:	b4800204 	addi	r18,r22,8
   48250:	18800315 	stw	r2,12(r3)
   48254:	10c00215 	stw	r3,8(r2)
   48258:	21801b36 	bltu	r4,r6,482c8 <_realloc_r+0x2f8>
   4825c:	008004c4 	movi	r2,19
   48260:	1180352e 	bgeu	r2,r6,48338 <_realloc_r+0x368>
   48264:	a8800017 	ldw	r2,0(r21)
   48268:	b0800215 	stw	r2,8(r22)
   4826c:	a8800117 	ldw	r2,4(r21)
   48270:	b0800315 	stw	r2,12(r22)
   48274:	008006c4 	movi	r2,27
   48278:	11807f36 	bltu	r2,r6,48478 <_realloc_r+0x4a8>
   4827c:	b0800404 	addi	r2,r22,16
   48280:	ad400204 	addi	r21,r21,8
   48284:	00002d06 	br	4833c <_realloc_r+0x36c>
   48288:	adbffe17 	ldw	r22,-8(r21)
   4828c:	00bfff04 	movi	r2,-4
   48290:	9dadc83a 	sub	r22,r19,r22
   48294:	b1000117 	ldw	r4,4(r22)
   48298:	2084703a 	and	r2,r4,r2
   4829c:	b03f7726 	beq	r22,zero,4807c <__alt_data_end+0xfffe0f7c>
   482a0:	80af883a 	add	r23,r16,r2
   482a4:	b8ff7516 	blt	r23,r3,4807c <__alt_data_end+0xfffe0f7c>
   482a8:	b0800317 	ldw	r2,12(r22)
   482ac:	b0c00217 	ldw	r3,8(r22)
   482b0:	81bfff04 	addi	r6,r16,-4
   482b4:	01000904 	movi	r4,36
   482b8:	18800315 	stw	r2,12(r3)
   482bc:	10c00215 	stw	r3,8(r2)
   482c0:	b4800204 	addi	r18,r22,8
   482c4:	21bfe52e 	bgeu	r4,r6,4825c <__alt_data_end+0xfffe115c>
   482c8:	a80b883a 	mov	r5,r21
   482cc:	9009883a 	mov	r4,r18
   482d0:	0046d500 	call	46d50 <memmove>
   482d4:	b821883a 	mov	r16,r23
   482d8:	b027883a 	mov	r19,r22
   482dc:	003f8a06 	br	48108 <__alt_data_end+0xfffe1008>
   482e0:	300b883a 	mov	r5,r6
   482e4:	dfc00917 	ldw	ra,36(sp)
   482e8:	df000817 	ldw	fp,32(sp)
   482ec:	ddc00717 	ldw	r23,28(sp)
   482f0:	dd800617 	ldw	r22,24(sp)
   482f4:	dd400517 	ldw	r21,20(sp)
   482f8:	dd000417 	ldw	r20,16(sp)
   482fc:	dcc00317 	ldw	r19,12(sp)
   48300:	dc800217 	ldw	r18,8(sp)
   48304:	dc400117 	ldw	r17,4(sp)
   48308:	dc000017 	ldw	r16,0(sp)
   4830c:	dec00a04 	addi	sp,sp,40
   48310:	00463181 	jmpi	46318 <_malloc_r>
   48314:	a8c00017 	ldw	r3,0(r21)
   48318:	90c00015 	stw	r3,0(r18)
   4831c:	a8c00117 	ldw	r3,4(r21)
   48320:	90c00115 	stw	r3,4(r18)
   48324:	00c006c4 	movi	r3,27
   48328:	19804536 	bltu	r3,r6,48440 <_realloc_r+0x470>
   4832c:	90800204 	addi	r2,r18,8
   48330:	a8c00204 	addi	r3,r21,8
   48334:	003f6306 	br	480c4 <__alt_data_end+0xfffe0fc4>
   48338:	9005883a 	mov	r2,r18
   4833c:	a8c00017 	ldw	r3,0(r21)
   48340:	b821883a 	mov	r16,r23
   48344:	b027883a 	mov	r19,r22
   48348:	10c00015 	stw	r3,0(r2)
   4834c:	a8c00117 	ldw	r3,4(r21)
   48350:	10c00115 	stw	r3,4(r2)
   48354:	a8c00217 	ldw	r3,8(r21)
   48358:	10c00215 	stw	r3,8(r2)
   4835c:	003f6a06 	br	48108 <__alt_data_end+0xfffe1008>
   48360:	9c67883a 	add	r19,r19,r17
   48364:	4445c83a 	sub	r2,r8,r17
   48368:	e4c00215 	stw	r19,8(fp)
   4836c:	10800054 	ori	r2,r2,1
   48370:	98800115 	stw	r2,4(r19)
   48374:	a8bfff17 	ldw	r2,-4(r21)
   48378:	a009883a 	mov	r4,r20
   4837c:	1080004c 	andi	r2,r2,1
   48380:	1462b03a 	or	r17,r2,r17
   48384:	ac7fff15 	stw	r17,-4(r21)
   48388:	004d4fc0 	call	4d4fc <__malloc_unlock>
   4838c:	a805883a 	mov	r2,r21
   48390:	003f6b06 	br	48140 <__alt_data_end+0xfffe1040>
   48394:	a80b883a 	mov	r5,r21
   48398:	9009883a 	mov	r4,r18
   4839c:	0046d500 	call	46d50 <memmove>
   483a0:	003f4e06 	br	480dc <__alt_data_end+0xfffe0fdc>
   483a4:	89000404 	addi	r4,r17,16
   483a8:	b93fbc16 	blt	r23,r4,4829c <__alt_data_end+0xfffe119c>
   483ac:	b0800317 	ldw	r2,12(r22)
   483b0:	b0c00217 	ldw	r3,8(r22)
   483b4:	81bfff04 	addi	r6,r16,-4
   483b8:	01000904 	movi	r4,36
   483bc:	18800315 	stw	r2,12(r3)
   483c0:	10c00215 	stw	r3,8(r2)
   483c4:	b4800204 	addi	r18,r22,8
   483c8:	21804336 	bltu	r4,r6,484d8 <_realloc_r+0x508>
   483cc:	008004c4 	movi	r2,19
   483d0:	11803f2e 	bgeu	r2,r6,484d0 <_realloc_r+0x500>
   483d4:	a8800017 	ldw	r2,0(r21)
   483d8:	b0800215 	stw	r2,8(r22)
   483dc:	a8800117 	ldw	r2,4(r21)
   483e0:	b0800315 	stw	r2,12(r22)
   483e4:	008006c4 	movi	r2,27
   483e8:	11803f36 	bltu	r2,r6,484e8 <_realloc_r+0x518>
   483ec:	b0800404 	addi	r2,r22,16
   483f0:	ad400204 	addi	r21,r21,8
   483f4:	a8c00017 	ldw	r3,0(r21)
   483f8:	10c00015 	stw	r3,0(r2)
   483fc:	a8c00117 	ldw	r3,4(r21)
   48400:	10c00115 	stw	r3,4(r2)
   48404:	a8c00217 	ldw	r3,8(r21)
   48408:	10c00215 	stw	r3,8(r2)
   4840c:	b447883a 	add	r3,r22,r17
   48410:	bc45c83a 	sub	r2,r23,r17
   48414:	e0c00215 	stw	r3,8(fp)
   48418:	10800054 	ori	r2,r2,1
   4841c:	18800115 	stw	r2,4(r3)
   48420:	b0800117 	ldw	r2,4(r22)
   48424:	a009883a 	mov	r4,r20
   48428:	1080004c 	andi	r2,r2,1
   4842c:	1462b03a 	or	r17,r2,r17
   48430:	b4400115 	stw	r17,4(r22)
   48434:	004d4fc0 	call	4d4fc <__malloc_unlock>
   48438:	9005883a 	mov	r2,r18
   4843c:	003f4006 	br	48140 <__alt_data_end+0xfffe1040>
   48440:	a8c00217 	ldw	r3,8(r21)
   48444:	90c00215 	stw	r3,8(r18)
   48448:	a8c00317 	ldw	r3,12(r21)
   4844c:	90c00315 	stw	r3,12(r18)
   48450:	30801126 	beq	r6,r2,48498 <_realloc_r+0x4c8>
   48454:	90800404 	addi	r2,r18,16
   48458:	a8c00404 	addi	r3,r21,16
   4845c:	003f1906 	br	480c4 <__alt_data_end+0xfffe0fc4>
   48460:	90ffff17 	ldw	r3,-4(r18)
   48464:	00bfff04 	movi	r2,-4
   48468:	a825883a 	mov	r18,r21
   4846c:	1884703a 	and	r2,r3,r2
   48470:	80a1883a 	add	r16,r16,r2
   48474:	003f2406 	br	48108 <__alt_data_end+0xfffe1008>
   48478:	a8800217 	ldw	r2,8(r21)
   4847c:	b0800415 	stw	r2,16(r22)
   48480:	a8800317 	ldw	r2,12(r21)
   48484:	b0800515 	stw	r2,20(r22)
   48488:	31000a26 	beq	r6,r4,484b4 <_realloc_r+0x4e4>
   4848c:	b0800604 	addi	r2,r22,24
   48490:	ad400404 	addi	r21,r21,16
   48494:	003fa906 	br	4833c <__alt_data_end+0xfffe123c>
   48498:	a9000417 	ldw	r4,16(r21)
   4849c:	90800604 	addi	r2,r18,24
   484a0:	a8c00604 	addi	r3,r21,24
   484a4:	91000415 	stw	r4,16(r18)
   484a8:	a9000517 	ldw	r4,20(r21)
   484ac:	91000515 	stw	r4,20(r18)
   484b0:	003f0406 	br	480c4 <__alt_data_end+0xfffe0fc4>
   484b4:	a8c00417 	ldw	r3,16(r21)
   484b8:	ad400604 	addi	r21,r21,24
   484bc:	b0800804 	addi	r2,r22,32
   484c0:	b0c00615 	stw	r3,24(r22)
   484c4:	a8ffff17 	ldw	r3,-4(r21)
   484c8:	b0c00715 	stw	r3,28(r22)
   484cc:	003f9b06 	br	4833c <__alt_data_end+0xfffe123c>
   484d0:	9005883a 	mov	r2,r18
   484d4:	003fc706 	br	483f4 <__alt_data_end+0xfffe12f4>
   484d8:	a80b883a 	mov	r5,r21
   484dc:	9009883a 	mov	r4,r18
   484e0:	0046d500 	call	46d50 <memmove>
   484e4:	003fc906 	br	4840c <__alt_data_end+0xfffe130c>
   484e8:	a8800217 	ldw	r2,8(r21)
   484ec:	b0800415 	stw	r2,16(r22)
   484f0:	a8800317 	ldw	r2,12(r21)
   484f4:	b0800515 	stw	r2,20(r22)
   484f8:	31000726 	beq	r6,r4,48518 <_realloc_r+0x548>
   484fc:	b0800604 	addi	r2,r22,24
   48500:	ad400404 	addi	r21,r21,16
   48504:	003fbb06 	br	483f4 <__alt_data_end+0xfffe12f4>
   48508:	a009883a 	mov	r4,r20
   4850c:	004d4fc0 	call	4d4fc <__malloc_unlock>
   48510:	0005883a 	mov	r2,zero
   48514:	003f0a06 	br	48140 <__alt_data_end+0xfffe1040>
   48518:	a8c00417 	ldw	r3,16(r21)
   4851c:	ad400604 	addi	r21,r21,24
   48520:	b0800804 	addi	r2,r22,32
   48524:	b0c00615 	stw	r3,24(r22)
   48528:	a8ffff17 	ldw	r3,-4(r21)
   4852c:	b0c00715 	stw	r3,28(r22)
   48530:	003fb006 	br	483f4 <__alt_data_end+0xfffe12f4>

00048534 <__fpclassifyd>:
   48534:	00a00034 	movhi	r2,32768
   48538:	10bfffc4 	addi	r2,r2,-1
   4853c:	2884703a 	and	r2,r5,r2
   48540:	10000726 	beq	r2,zero,48560 <__fpclassifyd+0x2c>
   48544:	00fffc34 	movhi	r3,65520
   48548:	019ff834 	movhi	r6,32736
   4854c:	28c7883a 	add	r3,r5,r3
   48550:	31bfffc4 	addi	r6,r6,-1
   48554:	30c00536 	bltu	r6,r3,4856c <__fpclassifyd+0x38>
   48558:	00800104 	movi	r2,4
   4855c:	f800283a 	ret
   48560:	2000021e 	bne	r4,zero,4856c <__fpclassifyd+0x38>
   48564:	00800084 	movi	r2,2
   48568:	f800283a 	ret
   4856c:	00dffc34 	movhi	r3,32752
   48570:	019ff834 	movhi	r6,32736
   48574:	28cb883a 	add	r5,r5,r3
   48578:	31bfffc4 	addi	r6,r6,-1
   4857c:	317ff62e 	bgeu	r6,r5,48558 <__alt_data_end+0xfffe1458>
   48580:	01400434 	movhi	r5,16
   48584:	297fffc4 	addi	r5,r5,-1
   48588:	28800236 	bltu	r5,r2,48594 <__fpclassifyd+0x60>
   4858c:	008000c4 	movi	r2,3
   48590:	f800283a 	ret
   48594:	10c00226 	beq	r2,r3,485a0 <__fpclassifyd+0x6c>
   48598:	0005883a 	mov	r2,zero
   4859c:	f800283a 	ret
   485a0:	2005003a 	cmpeq	r2,r4,zero
   485a4:	f800283a 	ret

000485a8 <_sbrk_r>:
   485a8:	defffd04 	addi	sp,sp,-12
   485ac:	dc000015 	stw	r16,0(sp)
   485b0:	04000174 	movhi	r16,5
   485b4:	dc400115 	stw	r17,4(sp)
   485b8:	840c2e04 	addi	r16,r16,12472
   485bc:	2023883a 	mov	r17,r4
   485c0:	2809883a 	mov	r4,r5
   485c4:	dfc00215 	stw	ra,8(sp)
   485c8:	80000015 	stw	zero,0(r16)
   485cc:	004d6bc0 	call	4d6bc <sbrk>
   485d0:	00ffffc4 	movi	r3,-1
   485d4:	10c00526 	beq	r2,r3,485ec <_sbrk_r+0x44>
   485d8:	dfc00217 	ldw	ra,8(sp)
   485dc:	dc400117 	ldw	r17,4(sp)
   485e0:	dc000017 	ldw	r16,0(sp)
   485e4:	dec00304 	addi	sp,sp,12
   485e8:	f800283a 	ret
   485ec:	80c00017 	ldw	r3,0(r16)
   485f0:	183ff926 	beq	r3,zero,485d8 <__alt_data_end+0xfffe14d8>
   485f4:	88c00015 	stw	r3,0(r17)
   485f8:	003ff706 	br	485d8 <__alt_data_end+0xfffe14d8>

000485fc <__sread>:
   485fc:	defffe04 	addi	sp,sp,-8
   48600:	dc000015 	stw	r16,0(sp)
   48604:	2821883a 	mov	r16,r5
   48608:	2940038f 	ldh	r5,14(r5)
   4860c:	dfc00115 	stw	ra,4(sp)
   48610:	004a3f00 	call	4a3f0 <_read_r>
   48614:	10000716 	blt	r2,zero,48634 <__sread+0x38>
   48618:	80c01417 	ldw	r3,80(r16)
   4861c:	1887883a 	add	r3,r3,r2
   48620:	80c01415 	stw	r3,80(r16)
   48624:	dfc00117 	ldw	ra,4(sp)
   48628:	dc000017 	ldw	r16,0(sp)
   4862c:	dec00204 	addi	sp,sp,8
   48630:	f800283a 	ret
   48634:	80c0030b 	ldhu	r3,12(r16)
   48638:	18fbffcc 	andi	r3,r3,61439
   4863c:	80c0030d 	sth	r3,12(r16)
   48640:	dfc00117 	ldw	ra,4(sp)
   48644:	dc000017 	ldw	r16,0(sp)
   48648:	dec00204 	addi	sp,sp,8
   4864c:	f800283a 	ret

00048650 <__seofread>:
   48650:	0005883a 	mov	r2,zero
   48654:	f800283a 	ret

00048658 <__swrite>:
   48658:	2880030b 	ldhu	r2,12(r5)
   4865c:	defffb04 	addi	sp,sp,-20
   48660:	dcc00315 	stw	r19,12(sp)
   48664:	dc800215 	stw	r18,8(sp)
   48668:	dc400115 	stw	r17,4(sp)
   4866c:	dc000015 	stw	r16,0(sp)
   48670:	dfc00415 	stw	ra,16(sp)
   48674:	10c0400c 	andi	r3,r2,256
   48678:	2821883a 	mov	r16,r5
   4867c:	2023883a 	mov	r17,r4
   48680:	3025883a 	mov	r18,r6
   48684:	3827883a 	mov	r19,r7
   48688:	18000526 	beq	r3,zero,486a0 <__swrite+0x48>
   4868c:	2940038f 	ldh	r5,14(r5)
   48690:	01c00084 	movi	r7,2
   48694:	000d883a 	mov	r6,zero
   48698:	004a3900 	call	4a390 <_lseek_r>
   4869c:	8080030b 	ldhu	r2,12(r16)
   486a0:	8140038f 	ldh	r5,14(r16)
   486a4:	10bbffcc 	andi	r2,r2,61439
   486a8:	980f883a 	mov	r7,r19
   486ac:	900d883a 	mov	r6,r18
   486b0:	8809883a 	mov	r4,r17
   486b4:	8080030d 	sth	r2,12(r16)
   486b8:	dfc00417 	ldw	ra,16(sp)
   486bc:	dcc00317 	ldw	r19,12(sp)
   486c0:	dc800217 	ldw	r18,8(sp)
   486c4:	dc400117 	ldw	r17,4(sp)
   486c8:	dc000017 	ldw	r16,0(sp)
   486cc:	dec00504 	addi	sp,sp,20
   486d0:	0049e5c1 	jmpi	49e5c <_write_r>

000486d4 <__sseek>:
   486d4:	defffe04 	addi	sp,sp,-8
   486d8:	dc000015 	stw	r16,0(sp)
   486dc:	2821883a 	mov	r16,r5
   486e0:	2940038f 	ldh	r5,14(r5)
   486e4:	dfc00115 	stw	ra,4(sp)
   486e8:	004a3900 	call	4a390 <_lseek_r>
   486ec:	00ffffc4 	movi	r3,-1
   486f0:	10c00826 	beq	r2,r3,48714 <__sseek+0x40>
   486f4:	80c0030b 	ldhu	r3,12(r16)
   486f8:	80801415 	stw	r2,80(r16)
   486fc:	18c40014 	ori	r3,r3,4096
   48700:	80c0030d 	sth	r3,12(r16)
   48704:	dfc00117 	ldw	ra,4(sp)
   48708:	dc000017 	ldw	r16,0(sp)
   4870c:	dec00204 	addi	sp,sp,8
   48710:	f800283a 	ret
   48714:	80c0030b 	ldhu	r3,12(r16)
   48718:	18fbffcc 	andi	r3,r3,61439
   4871c:	80c0030d 	sth	r3,12(r16)
   48720:	dfc00117 	ldw	ra,4(sp)
   48724:	dc000017 	ldw	r16,0(sp)
   48728:	dec00204 	addi	sp,sp,8
   4872c:	f800283a 	ret

00048730 <__sclose>:
   48730:	2940038f 	ldh	r5,14(r5)
   48734:	0049ebc1 	jmpi	49ebc <_close_r>

00048738 <strcmp>:
   48738:	2144b03a 	or	r2,r4,r5
   4873c:	108000cc 	andi	r2,r2,3
   48740:	1000171e 	bne	r2,zero,487a0 <strcmp+0x68>
   48744:	20800017 	ldw	r2,0(r4)
   48748:	28c00017 	ldw	r3,0(r5)
   4874c:	10c0141e 	bne	r2,r3,487a0 <strcmp+0x68>
   48750:	027fbff4 	movhi	r9,65279
   48754:	4a7fbfc4 	addi	r9,r9,-257
   48758:	0086303a 	nor	r3,zero,r2
   4875c:	02202074 	movhi	r8,32897
   48760:	1245883a 	add	r2,r2,r9
   48764:	42202004 	addi	r8,r8,-32640
   48768:	10c4703a 	and	r2,r2,r3
   4876c:	1204703a 	and	r2,r2,r8
   48770:	10000226 	beq	r2,zero,4877c <strcmp+0x44>
   48774:	00002306 	br	48804 <strcmp+0xcc>
   48778:	1000221e 	bne	r2,zero,48804 <strcmp+0xcc>
   4877c:	21000104 	addi	r4,r4,4
   48780:	20c00017 	ldw	r3,0(r4)
   48784:	29400104 	addi	r5,r5,4
   48788:	29800017 	ldw	r6,0(r5)
   4878c:	1a4f883a 	add	r7,r3,r9
   48790:	00c4303a 	nor	r2,zero,r3
   48794:	3884703a 	and	r2,r7,r2
   48798:	1204703a 	and	r2,r2,r8
   4879c:	19bff626 	beq	r3,r6,48778 <__alt_data_end+0xfffe1678>
   487a0:	20800003 	ldbu	r2,0(r4)
   487a4:	10c03fcc 	andi	r3,r2,255
   487a8:	18c0201c 	xori	r3,r3,128
   487ac:	18ffe004 	addi	r3,r3,-128
   487b0:	18000c26 	beq	r3,zero,487e4 <strcmp+0xac>
   487b4:	29800007 	ldb	r6,0(r5)
   487b8:	19800326 	beq	r3,r6,487c8 <strcmp+0x90>
   487bc:	00001306 	br	4880c <strcmp+0xd4>
   487c0:	29800007 	ldb	r6,0(r5)
   487c4:	11800b1e 	bne	r2,r6,487f4 <strcmp+0xbc>
   487c8:	21000044 	addi	r4,r4,1
   487cc:	20c00003 	ldbu	r3,0(r4)
   487d0:	29400044 	addi	r5,r5,1
   487d4:	18803fcc 	andi	r2,r3,255
   487d8:	1080201c 	xori	r2,r2,128
   487dc:	10bfe004 	addi	r2,r2,-128
   487e0:	103ff71e 	bne	r2,zero,487c0 <__alt_data_end+0xfffe16c0>
   487e4:	0007883a 	mov	r3,zero
   487e8:	28800003 	ldbu	r2,0(r5)
   487ec:	1885c83a 	sub	r2,r3,r2
   487f0:	f800283a 	ret
   487f4:	28800003 	ldbu	r2,0(r5)
   487f8:	18c03fcc 	andi	r3,r3,255
   487fc:	1885c83a 	sub	r2,r3,r2
   48800:	f800283a 	ret
   48804:	0005883a 	mov	r2,zero
   48808:	f800283a 	ret
   4880c:	10c03fcc 	andi	r3,r2,255
   48810:	003ff506 	br	487e8 <__alt_data_end+0xfffe16e8>

00048814 <__sprint_r.part.0>:
   48814:	28801917 	ldw	r2,100(r5)
   48818:	defff604 	addi	sp,sp,-40
   4881c:	dd400515 	stw	r21,20(sp)
   48820:	dfc00915 	stw	ra,36(sp)
   48824:	df000815 	stw	fp,32(sp)
   48828:	ddc00715 	stw	r23,28(sp)
   4882c:	dd800615 	stw	r22,24(sp)
   48830:	dd000415 	stw	r20,16(sp)
   48834:	dcc00315 	stw	r19,12(sp)
   48838:	dc800215 	stw	r18,8(sp)
   4883c:	dc400115 	stw	r17,4(sp)
   48840:	dc000015 	stw	r16,0(sp)
   48844:	1088000c 	andi	r2,r2,8192
   48848:	302b883a 	mov	r21,r6
   4884c:	10002e26 	beq	r2,zero,48908 <__sprint_r.part.0+0xf4>
   48850:	30800217 	ldw	r2,8(r6)
   48854:	35800017 	ldw	r22,0(r6)
   48858:	10002926 	beq	r2,zero,48900 <__sprint_r.part.0+0xec>
   4885c:	2827883a 	mov	r19,r5
   48860:	2029883a 	mov	r20,r4
   48864:	b5c00104 	addi	r23,r22,4
   48868:	04bfffc4 	movi	r18,-1
   4886c:	bc400017 	ldw	r17,0(r23)
   48870:	b4000017 	ldw	r16,0(r22)
   48874:	0039883a 	mov	fp,zero
   48878:	8822d0ba 	srli	r17,r17,2
   4887c:	8800031e 	bne	r17,zero,4888c <__sprint_r.part.0+0x78>
   48880:	00001806 	br	488e4 <__sprint_r.part.0+0xd0>
   48884:	84000104 	addi	r16,r16,4
   48888:	8f001526 	beq	r17,fp,488e0 <__sprint_r.part.0+0xcc>
   4888c:	81400017 	ldw	r5,0(r16)
   48890:	980d883a 	mov	r6,r19
   48894:	a009883a 	mov	r4,r20
   48898:	004a23c0 	call	4a23c <_fputwc_r>
   4889c:	e7000044 	addi	fp,fp,1
   488a0:	14bff81e 	bne	r2,r18,48884 <__alt_data_end+0xfffe1784>
   488a4:	9005883a 	mov	r2,r18
   488a8:	a8000215 	stw	zero,8(r21)
   488ac:	a8000115 	stw	zero,4(r21)
   488b0:	dfc00917 	ldw	ra,36(sp)
   488b4:	df000817 	ldw	fp,32(sp)
   488b8:	ddc00717 	ldw	r23,28(sp)
   488bc:	dd800617 	ldw	r22,24(sp)
   488c0:	dd400517 	ldw	r21,20(sp)
   488c4:	dd000417 	ldw	r20,16(sp)
   488c8:	dcc00317 	ldw	r19,12(sp)
   488cc:	dc800217 	ldw	r18,8(sp)
   488d0:	dc400117 	ldw	r17,4(sp)
   488d4:	dc000017 	ldw	r16,0(sp)
   488d8:	dec00a04 	addi	sp,sp,40
   488dc:	f800283a 	ret
   488e0:	a8800217 	ldw	r2,8(r21)
   488e4:	8c63883a 	add	r17,r17,r17
   488e8:	8c63883a 	add	r17,r17,r17
   488ec:	1445c83a 	sub	r2,r2,r17
   488f0:	a8800215 	stw	r2,8(r21)
   488f4:	b5800204 	addi	r22,r22,8
   488f8:	bdc00204 	addi	r23,r23,8
   488fc:	103fdb1e 	bne	r2,zero,4886c <__alt_data_end+0xfffe176c>
   48900:	0005883a 	mov	r2,zero
   48904:	003fe806 	br	488a8 <__alt_data_end+0xfffe17a8>
   48908:	0045a3c0 	call	45a3c <__sfvwrite_r>
   4890c:	003fe606 	br	488a8 <__alt_data_end+0xfffe17a8>

00048910 <__sprint_r>:
   48910:	30c00217 	ldw	r3,8(r6)
   48914:	18000126 	beq	r3,zero,4891c <__sprint_r+0xc>
   48918:	00488141 	jmpi	48814 <__sprint_r.part.0>
   4891c:	30000115 	stw	zero,4(r6)
   48920:	0005883a 	mov	r2,zero
   48924:	f800283a 	ret

00048928 <___vfiprintf_internal_r>:
   48928:	deffc904 	addi	sp,sp,-220
   4892c:	df003515 	stw	fp,212(sp)
   48930:	dd003115 	stw	r20,196(sp)
   48934:	dfc03615 	stw	ra,216(sp)
   48938:	ddc03415 	stw	r23,208(sp)
   4893c:	dd803315 	stw	r22,204(sp)
   48940:	dd403215 	stw	r21,200(sp)
   48944:	dcc03015 	stw	r19,192(sp)
   48948:	dc802f15 	stw	r18,188(sp)
   4894c:	dc402e15 	stw	r17,184(sp)
   48950:	dc002d15 	stw	r16,180(sp)
   48954:	d9002015 	stw	r4,128(sp)
   48958:	d9c02215 	stw	r7,136(sp)
   4895c:	2829883a 	mov	r20,r5
   48960:	3039883a 	mov	fp,r6
   48964:	20000226 	beq	r4,zero,48970 <___vfiprintf_internal_r+0x48>
   48968:	20800e17 	ldw	r2,56(r4)
   4896c:	1000cf26 	beq	r2,zero,48cac <___vfiprintf_internal_r+0x384>
   48970:	a080030b 	ldhu	r2,12(r20)
   48974:	10c8000c 	andi	r3,r2,8192
   48978:	1800061e 	bne	r3,zero,48994 <___vfiprintf_internal_r+0x6c>
   4897c:	a1001917 	ldw	r4,100(r20)
   48980:	00f7ffc4 	movi	r3,-8193
   48984:	10880014 	ori	r2,r2,8192
   48988:	20c6703a 	and	r3,r4,r3
   4898c:	a080030d 	sth	r2,12(r20)
   48990:	a0c01915 	stw	r3,100(r20)
   48994:	10c0020c 	andi	r3,r2,8
   48998:	1800a926 	beq	r3,zero,48c40 <___vfiprintf_internal_r+0x318>
   4899c:	a0c00417 	ldw	r3,16(r20)
   489a0:	1800a726 	beq	r3,zero,48c40 <___vfiprintf_internal_r+0x318>
   489a4:	1080068c 	andi	r2,r2,26
   489a8:	00c00284 	movi	r3,10
   489ac:	10c0ac26 	beq	r2,r3,48c60 <___vfiprintf_internal_r+0x338>
   489b0:	da801a04 	addi	r10,sp,104
   489b4:	da801e15 	stw	r10,120(sp)
   489b8:	d8801e17 	ldw	r2,120(sp)
   489bc:	da8019c4 	addi	r10,sp,103
   489c0:	05800174 	movhi	r22,5
   489c4:	05c00174 	movhi	r23,5
   489c8:	da801f15 	stw	r10,124(sp)
   489cc:	1295c83a 	sub	r10,r2,r10
   489d0:	b5bea304 	addi	r22,r22,-1396
   489d4:	bdfe9f04 	addi	r23,r23,-1412
   489d8:	dec01a15 	stw	sp,104(sp)
   489dc:	d8001c15 	stw	zero,112(sp)
   489e0:	d8001b15 	stw	zero,108(sp)
   489e4:	d8002615 	stw	zero,152(sp)
   489e8:	d8002315 	stw	zero,140(sp)
   489ec:	da802715 	stw	r10,156(sp)
   489f0:	d811883a 	mov	r8,sp
   489f4:	dd002115 	stw	r20,132(sp)
   489f8:	e021883a 	mov	r16,fp
   489fc:	80800007 	ldb	r2,0(r16)
   48a00:	1003ea26 	beq	r2,zero,499ac <___vfiprintf_internal_r+0x1084>
   48a04:	00c00944 	movi	r3,37
   48a08:	8025883a 	mov	r18,r16
   48a0c:	10c0021e 	bne	r2,r3,48a18 <___vfiprintf_internal_r+0xf0>
   48a10:	00001606 	br	48a6c <___vfiprintf_internal_r+0x144>
   48a14:	10c00326 	beq	r2,r3,48a24 <___vfiprintf_internal_r+0xfc>
   48a18:	94800044 	addi	r18,r18,1
   48a1c:	90800007 	ldb	r2,0(r18)
   48a20:	103ffc1e 	bne	r2,zero,48a14 <__alt_data_end+0xfffe1914>
   48a24:	9423c83a 	sub	r17,r18,r16
   48a28:	88001026 	beq	r17,zero,48a6c <___vfiprintf_internal_r+0x144>
   48a2c:	d8c01c17 	ldw	r3,112(sp)
   48a30:	d8801b17 	ldw	r2,108(sp)
   48a34:	44000015 	stw	r16,0(r8)
   48a38:	88c7883a 	add	r3,r17,r3
   48a3c:	10800044 	addi	r2,r2,1
   48a40:	44400115 	stw	r17,4(r8)
   48a44:	d8c01c15 	stw	r3,112(sp)
   48a48:	d8801b15 	stw	r2,108(sp)
   48a4c:	010001c4 	movi	r4,7
   48a50:	2080760e 	bge	r4,r2,48c2c <___vfiprintf_internal_r+0x304>
   48a54:	1803821e 	bne	r3,zero,49860 <___vfiprintf_internal_r+0xf38>
   48a58:	da802317 	ldw	r10,140(sp)
   48a5c:	d8001b15 	stw	zero,108(sp)
   48a60:	d811883a 	mov	r8,sp
   48a64:	5455883a 	add	r10,r10,r17
   48a68:	da802315 	stw	r10,140(sp)
   48a6c:	90800007 	ldb	r2,0(r18)
   48a70:	10044626 	beq	r2,zero,49b8c <___vfiprintf_internal_r+0x1264>
   48a74:	90c00047 	ldb	r3,1(r18)
   48a78:	94000044 	addi	r16,r18,1
   48a7c:	d8001d85 	stb	zero,118(sp)
   48a80:	0009883a 	mov	r4,zero
   48a84:	000f883a 	mov	r7,zero
   48a88:	027fffc4 	movi	r9,-1
   48a8c:	0023883a 	mov	r17,zero
   48a90:	0029883a 	mov	r20,zero
   48a94:	01401604 	movi	r5,88
   48a98:	01800244 	movi	r6,9
   48a9c:	03400a84 	movi	r13,42
   48aa0:	03001b04 	movi	r12,108
   48aa4:	84000044 	addi	r16,r16,1
   48aa8:	18bff804 	addi	r2,r3,-32
   48aac:	28827336 	bltu	r5,r2,4947c <___vfiprintf_internal_r+0xb54>
   48ab0:	100490ba 	slli	r2,r2,2
   48ab4:	02800174 	movhi	r10,5
   48ab8:	52a2b204 	addi	r10,r10,-30008
   48abc:	1285883a 	add	r2,r2,r10
   48ac0:	10800017 	ldw	r2,0(r2)
   48ac4:	1000683a 	jmp	r2
   48ac8:	000491b0 	cmpltui	zero,zero,4678
   48acc:	0004947c 	xorhi	zero,zero,4689
   48ad0:	0004947c 	xorhi	zero,zero,4689
   48ad4:	000491d0 	cmplti	zero,zero,4679
   48ad8:	0004947c 	xorhi	zero,zero,4689
   48adc:	0004947c 	xorhi	zero,zero,4689
   48ae0:	0004947c 	xorhi	zero,zero,4689
   48ae4:	0004947c 	xorhi	zero,zero,4689
   48ae8:	0004947c 	xorhi	zero,zero,4689
   48aec:	0004947c 	xorhi	zero,zero,4689
   48af0:	000493b8 	rdprs	zero,zero,4686
   48af4:	000493d4 	movui	zero,4687
   48af8:	0004947c 	xorhi	zero,zero,4689
   48afc:	00048cbc 	xorhi	zero,zero,4658
   48b00:	000493e4 	muli	zero,zero,4687
   48b04:	0004947c 	xorhi	zero,zero,4689
   48b08:	000491dc 	xori	zero,zero,4679
   48b0c:	000491e8 	cmpgeui	zero,zero,4679
   48b10:	000491e8 	cmpgeui	zero,zero,4679
   48b14:	000491e8 	cmpgeui	zero,zero,4679
   48b18:	000491e8 	cmpgeui	zero,zero,4679
   48b1c:	000491e8 	cmpgeui	zero,zero,4679
   48b20:	000491e8 	cmpgeui	zero,zero,4679
   48b24:	000491e8 	cmpgeui	zero,zero,4679
   48b28:	000491e8 	cmpgeui	zero,zero,4679
   48b2c:	000491e8 	cmpgeui	zero,zero,4679
   48b30:	0004947c 	xorhi	zero,zero,4689
   48b34:	0004947c 	xorhi	zero,zero,4689
   48b38:	0004947c 	xorhi	zero,zero,4689
   48b3c:	0004947c 	xorhi	zero,zero,4689
   48b40:	0004947c 	xorhi	zero,zero,4689
   48b44:	0004947c 	xorhi	zero,zero,4689
   48b48:	0004947c 	xorhi	zero,zero,4689
   48b4c:	0004947c 	xorhi	zero,zero,4689
   48b50:	0004947c 	xorhi	zero,zero,4689
   48b54:	0004947c 	xorhi	zero,zero,4689
   48b58:	00049214 	movui	zero,4680
   48b5c:	0004947c 	xorhi	zero,zero,4689
   48b60:	0004947c 	xorhi	zero,zero,4689
   48b64:	0004947c 	xorhi	zero,zero,4689
   48b68:	0004947c 	xorhi	zero,zero,4689
   48b6c:	0004947c 	xorhi	zero,zero,4689
   48b70:	0004947c 	xorhi	zero,zero,4689
   48b74:	0004947c 	xorhi	zero,zero,4689
   48b78:	0004947c 	xorhi	zero,zero,4689
   48b7c:	0004947c 	xorhi	zero,zero,4689
   48b80:	0004947c 	xorhi	zero,zero,4689
   48b84:	0004924c 	andi	zero,zero,4681
   48b88:	0004947c 	xorhi	zero,zero,4689
   48b8c:	0004947c 	xorhi	zero,zero,4689
   48b90:	0004947c 	xorhi	zero,zero,4689
   48b94:	0004947c 	xorhi	zero,zero,4689
   48b98:	0004947c 	xorhi	zero,zero,4689
   48b9c:	000492a4 	muli	zero,zero,4682
   48ba0:	0004947c 	xorhi	zero,zero,4689
   48ba4:	0004947c 	xorhi	zero,zero,4689
   48ba8:	00049314 	movui	zero,4684
   48bac:	0004947c 	xorhi	zero,zero,4689
   48bb0:	0004947c 	xorhi	zero,zero,4689
   48bb4:	0004947c 	xorhi	zero,zero,4689
   48bb8:	0004947c 	xorhi	zero,zero,4689
   48bbc:	0004947c 	xorhi	zero,zero,4689
   48bc0:	0004947c 	xorhi	zero,zero,4689
   48bc4:	0004947c 	xorhi	zero,zero,4689
   48bc8:	0004947c 	xorhi	zero,zero,4689
   48bcc:	0004947c 	xorhi	zero,zero,4689
   48bd0:	0004947c 	xorhi	zero,zero,4689
   48bd4:	000490c0 	call	490c <__alt_mem_onchip_memory2-0x3b6f4>
   48bd8:	000490ec 	andhi	zero,zero,4675
   48bdc:	0004947c 	xorhi	zero,zero,4689
   48be0:	0004947c 	xorhi	zero,zero,4689
   48be4:	0004947c 	xorhi	zero,zero,4689
   48be8:	00049424 	muli	zero,zero,4688
   48bec:	000490ec 	andhi	zero,zero,4675
   48bf0:	0004947c 	xorhi	zero,zero,4689
   48bf4:	0004947c 	xorhi	zero,zero,4689
   48bf8:	00048f80 	call	48f8 <__alt_mem_onchip_memory2-0x3b708>
   48bfc:	0004947c 	xorhi	zero,zero,4689
   48c00:	00048f90 	cmplti	zero,zero,4670
   48c04:	00048fcc 	andi	zero,zero,4671
   48c08:	00048cc8 	cmpgei	zero,zero,4659
   48c0c:	00048f74 	movhi	zero,4669
   48c10:	0004947c 	xorhi	zero,zero,4689
   48c14:	00049350 	cmplti	zero,zero,4685
   48c18:	0004947c 	xorhi	zero,zero,4689
   48c1c:	000493a8 	cmpgeui	zero,zero,4686
   48c20:	0004947c 	xorhi	zero,zero,4689
   48c24:	0004947c 	xorhi	zero,zero,4689
   48c28:	0004906c 	andhi	zero,zero,4673
   48c2c:	42000204 	addi	r8,r8,8
   48c30:	da802317 	ldw	r10,140(sp)
   48c34:	5455883a 	add	r10,r10,r17
   48c38:	da802315 	stw	r10,140(sp)
   48c3c:	003f8b06 	br	48a6c <__alt_data_end+0xfffe196c>
   48c40:	d9002017 	ldw	r4,128(sp)
   48c44:	a00b883a 	mov	r5,r20
   48c48:	00435e40 	call	435e4 <__swsetup_r>
   48c4c:	1003b11e 	bne	r2,zero,49b14 <___vfiprintf_internal_r+0x11ec>
   48c50:	a080030b 	ldhu	r2,12(r20)
   48c54:	00c00284 	movi	r3,10
   48c58:	1080068c 	andi	r2,r2,26
   48c5c:	10ff541e 	bne	r2,r3,489b0 <__alt_data_end+0xfffe18b0>
   48c60:	a080038f 	ldh	r2,14(r20)
   48c64:	103f5216 	blt	r2,zero,489b0 <__alt_data_end+0xfffe18b0>
   48c68:	d9c02217 	ldw	r7,136(sp)
   48c6c:	d9002017 	ldw	r4,128(sp)
   48c70:	e00d883a 	mov	r6,fp
   48c74:	a00b883a 	mov	r5,r20
   48c78:	0049da00 	call	49da0 <__sbprintf>
   48c7c:	dfc03617 	ldw	ra,216(sp)
   48c80:	df003517 	ldw	fp,212(sp)
   48c84:	ddc03417 	ldw	r23,208(sp)
   48c88:	dd803317 	ldw	r22,204(sp)
   48c8c:	dd403217 	ldw	r21,200(sp)
   48c90:	dd003117 	ldw	r20,196(sp)
   48c94:	dcc03017 	ldw	r19,192(sp)
   48c98:	dc802f17 	ldw	r18,188(sp)
   48c9c:	dc402e17 	ldw	r17,184(sp)
   48ca0:	dc002d17 	ldw	r16,180(sp)
   48ca4:	dec03704 	addi	sp,sp,220
   48ca8:	f800283a 	ret
   48cac:	00455b80 	call	455b8 <__sinit>
   48cb0:	003f2f06 	br	48970 <__alt_data_end+0xfffe1870>
   48cb4:	0463c83a 	sub	r17,zero,r17
   48cb8:	d8802215 	stw	r2,136(sp)
   48cbc:	a5000114 	ori	r20,r20,4
   48cc0:	80c00007 	ldb	r3,0(r16)
   48cc4:	003f7706 	br	48aa4 <__alt_data_end+0xfffe19a4>
   48cc8:	00800c04 	movi	r2,48
   48ccc:	da802217 	ldw	r10,136(sp)
   48cd0:	d8801d05 	stb	r2,116(sp)
   48cd4:	00801e04 	movi	r2,120
   48cd8:	d8801d45 	stb	r2,117(sp)
   48cdc:	d8001d85 	stb	zero,118(sp)
   48ce0:	50c00104 	addi	r3,r10,4
   48ce4:	54800017 	ldw	r18,0(r10)
   48ce8:	0027883a 	mov	r19,zero
   48cec:	a0800094 	ori	r2,r20,2
   48cf0:	48030b16 	blt	r9,zero,49920 <___vfiprintf_internal_r+0xff8>
   48cf4:	00bfdfc4 	movi	r2,-129
   48cf8:	a096703a 	and	r11,r20,r2
   48cfc:	d8c02215 	stw	r3,136(sp)
   48d00:	5d000094 	ori	r20,r11,2
   48d04:	90032b1e 	bne	r18,zero,499b4 <___vfiprintf_internal_r+0x108c>
   48d08:	00800174 	movhi	r2,5
   48d0c:	10be3e04 	addi	r2,r2,-1800
   48d10:	d8802615 	stw	r2,152(sp)
   48d14:	0039883a 	mov	fp,zero
   48d18:	48017b1e 	bne	r9,zero,49308 <___vfiprintf_internal_r+0x9e0>
   48d1c:	0013883a 	mov	r9,zero
   48d20:	0027883a 	mov	r19,zero
   48d24:	dd401a04 	addi	r21,sp,104
   48d28:	4825883a 	mov	r18,r9
   48d2c:	4cc0010e 	bge	r9,r19,48d34 <___vfiprintf_internal_r+0x40c>
   48d30:	9825883a 	mov	r18,r19
   48d34:	e7003fcc 	andi	fp,fp,255
   48d38:	e700201c 	xori	fp,fp,128
   48d3c:	e73fe004 	addi	fp,fp,-128
   48d40:	e0000126 	beq	fp,zero,48d48 <___vfiprintf_internal_r+0x420>
   48d44:	94800044 	addi	r18,r18,1
   48d48:	a380008c 	andi	r14,r20,2
   48d4c:	70000126 	beq	r14,zero,48d54 <___vfiprintf_internal_r+0x42c>
   48d50:	94800084 	addi	r18,r18,2
   48d54:	a700210c 	andi	fp,r20,132
   48d58:	e001df1e 	bne	fp,zero,494d8 <___vfiprintf_internal_r+0xbb0>
   48d5c:	8c87c83a 	sub	r3,r17,r18
   48d60:	00c1dd0e 	bge	zero,r3,494d8 <___vfiprintf_internal_r+0xbb0>
   48d64:	01c00404 	movi	r7,16
   48d68:	d8801c17 	ldw	r2,112(sp)
   48d6c:	38c3ad0e 	bge	r7,r3,49c24 <___vfiprintf_internal_r+0x12fc>
   48d70:	02800174 	movhi	r10,5
   48d74:	52bea304 	addi	r10,r10,-1396
   48d78:	dc002915 	stw	r16,164(sp)
   48d7c:	d9801b17 	ldw	r6,108(sp)
   48d80:	da802415 	stw	r10,144(sp)
   48d84:	03c001c4 	movi	r15,7
   48d88:	da402515 	stw	r9,148(sp)
   48d8c:	db802815 	stw	r14,160(sp)
   48d90:	1821883a 	mov	r16,r3
   48d94:	00000506 	br	48dac <___vfiprintf_internal_r+0x484>
   48d98:	31400084 	addi	r5,r6,2
   48d9c:	42000204 	addi	r8,r8,8
   48da0:	200d883a 	mov	r6,r4
   48da4:	843ffc04 	addi	r16,r16,-16
   48da8:	3c000d0e 	bge	r7,r16,48de0 <___vfiprintf_internal_r+0x4b8>
   48dac:	10800404 	addi	r2,r2,16
   48db0:	31000044 	addi	r4,r6,1
   48db4:	45800015 	stw	r22,0(r8)
   48db8:	41c00115 	stw	r7,4(r8)
   48dbc:	d8801c15 	stw	r2,112(sp)
   48dc0:	d9001b15 	stw	r4,108(sp)
   48dc4:	793ff40e 	bge	r15,r4,48d98 <__alt_data_end+0xfffe1c98>
   48dc8:	1001b51e 	bne	r2,zero,494a0 <___vfiprintf_internal_r+0xb78>
   48dcc:	843ffc04 	addi	r16,r16,-16
   48dd0:	000d883a 	mov	r6,zero
   48dd4:	01400044 	movi	r5,1
   48dd8:	d811883a 	mov	r8,sp
   48ddc:	3c3ff316 	blt	r7,r16,48dac <__alt_data_end+0xfffe1cac>
   48de0:	8007883a 	mov	r3,r16
   48de4:	da402517 	ldw	r9,148(sp)
   48de8:	db802817 	ldw	r14,160(sp)
   48dec:	dc002917 	ldw	r16,164(sp)
   48df0:	da802417 	ldw	r10,144(sp)
   48df4:	1885883a 	add	r2,r3,r2
   48df8:	40c00115 	stw	r3,4(r8)
   48dfc:	42800015 	stw	r10,0(r8)
   48e00:	d8801c15 	stw	r2,112(sp)
   48e04:	d9401b15 	stw	r5,108(sp)
   48e08:	00c001c4 	movi	r3,7
   48e0c:	19426016 	blt	r3,r5,49790 <___vfiprintf_internal_r+0xe68>
   48e10:	d8c01d87 	ldb	r3,118(sp)
   48e14:	42000204 	addi	r8,r8,8
   48e18:	29000044 	addi	r4,r5,1
   48e1c:	1801b31e 	bne	r3,zero,494ec <___vfiprintf_internal_r+0xbc4>
   48e20:	7001c026 	beq	r14,zero,49524 <___vfiprintf_internal_r+0xbfc>
   48e24:	d8c01d04 	addi	r3,sp,116
   48e28:	10800084 	addi	r2,r2,2
   48e2c:	40c00015 	stw	r3,0(r8)
   48e30:	00c00084 	movi	r3,2
   48e34:	40c00115 	stw	r3,4(r8)
   48e38:	d8801c15 	stw	r2,112(sp)
   48e3c:	d9001b15 	stw	r4,108(sp)
   48e40:	00c001c4 	movi	r3,7
   48e44:	1902650e 	bge	r3,r4,497dc <___vfiprintf_internal_r+0xeb4>
   48e48:	10029a1e 	bne	r2,zero,498b4 <___vfiprintf_internal_r+0xf8c>
   48e4c:	00c02004 	movi	r3,128
   48e50:	01000044 	movi	r4,1
   48e54:	000b883a 	mov	r5,zero
   48e58:	d811883a 	mov	r8,sp
   48e5c:	e0c1b31e 	bne	fp,r3,4952c <___vfiprintf_internal_r+0xc04>
   48e60:	8cb9c83a 	sub	fp,r17,r18
   48e64:	0701b10e 	bge	zero,fp,4952c <___vfiprintf_internal_r+0xc04>
   48e68:	01c00404 	movi	r7,16
   48e6c:	3f03890e 	bge	r7,fp,49c94 <___vfiprintf_internal_r+0x136c>
   48e70:	00c00174 	movhi	r3,5
   48e74:	18fe9f04 	addi	r3,r3,-1412
   48e78:	d8c02415 	stw	r3,144(sp)
   48e7c:	8007883a 	mov	r3,r16
   48e80:	034001c4 	movi	r13,7
   48e84:	e021883a 	mov	r16,fp
   48e88:	da402515 	stw	r9,148(sp)
   48e8c:	1839883a 	mov	fp,r3
   48e90:	00000506 	br	48ea8 <___vfiprintf_internal_r+0x580>
   48e94:	29800084 	addi	r6,r5,2
   48e98:	42000204 	addi	r8,r8,8
   48e9c:	180b883a 	mov	r5,r3
   48ea0:	843ffc04 	addi	r16,r16,-16
   48ea4:	3c000d0e 	bge	r7,r16,48edc <___vfiprintf_internal_r+0x5b4>
   48ea8:	10800404 	addi	r2,r2,16
   48eac:	28c00044 	addi	r3,r5,1
   48eb0:	45c00015 	stw	r23,0(r8)
   48eb4:	41c00115 	stw	r7,4(r8)
   48eb8:	d8801c15 	stw	r2,112(sp)
   48ebc:	d8c01b15 	stw	r3,108(sp)
   48ec0:	68fff40e 	bge	r13,r3,48e94 <__alt_data_end+0xfffe1d94>
   48ec4:	1002241e 	bne	r2,zero,49758 <___vfiprintf_internal_r+0xe30>
   48ec8:	843ffc04 	addi	r16,r16,-16
   48ecc:	01800044 	movi	r6,1
   48ed0:	000b883a 	mov	r5,zero
   48ed4:	d811883a 	mov	r8,sp
   48ed8:	3c3ff316 	blt	r7,r16,48ea8 <__alt_data_end+0xfffe1da8>
   48edc:	da402517 	ldw	r9,148(sp)
   48ee0:	e007883a 	mov	r3,fp
   48ee4:	8039883a 	mov	fp,r16
   48ee8:	1821883a 	mov	r16,r3
   48eec:	d8c02417 	ldw	r3,144(sp)
   48ef0:	1705883a 	add	r2,r2,fp
   48ef4:	47000115 	stw	fp,4(r8)
   48ef8:	40c00015 	stw	r3,0(r8)
   48efc:	d8801c15 	stw	r2,112(sp)
   48f00:	d9801b15 	stw	r6,108(sp)
   48f04:	00c001c4 	movi	r3,7
   48f08:	19827616 	blt	r3,r6,498e4 <___vfiprintf_internal_r+0xfbc>
   48f0c:	4cf9c83a 	sub	fp,r9,r19
   48f10:	42000204 	addi	r8,r8,8
   48f14:	31000044 	addi	r4,r6,1
   48f18:	300b883a 	mov	r5,r6
   48f1c:	07018516 	blt	zero,fp,49534 <___vfiprintf_internal_r+0xc0c>
   48f20:	9885883a 	add	r2,r19,r2
   48f24:	45400015 	stw	r21,0(r8)
   48f28:	44c00115 	stw	r19,4(r8)
   48f2c:	d8801c15 	stw	r2,112(sp)
   48f30:	d9001b15 	stw	r4,108(sp)
   48f34:	00c001c4 	movi	r3,7
   48f38:	1901dd0e 	bge	r3,r4,496b0 <___vfiprintf_internal_r+0xd88>
   48f3c:	1002401e 	bne	r2,zero,49840 <___vfiprintf_internal_r+0xf18>
   48f40:	d8001b15 	stw	zero,108(sp)
   48f44:	a2c0010c 	andi	r11,r20,4
   48f48:	58000226 	beq	r11,zero,48f54 <___vfiprintf_internal_r+0x62c>
   48f4c:	8ca7c83a 	sub	r19,r17,r18
   48f50:	04c2f216 	blt	zero,r19,49b1c <___vfiprintf_internal_r+0x11f4>
   48f54:	8c80010e 	bge	r17,r18,48f5c <___vfiprintf_internal_r+0x634>
   48f58:	9023883a 	mov	r17,r18
   48f5c:	da802317 	ldw	r10,140(sp)
   48f60:	5455883a 	add	r10,r10,r17
   48f64:	da802315 	stw	r10,140(sp)
   48f68:	d8001b15 	stw	zero,108(sp)
   48f6c:	d811883a 	mov	r8,sp
   48f70:	003ea206 	br	489fc <__alt_data_end+0xfffe18fc>
   48f74:	a5000814 	ori	r20,r20,32
   48f78:	80c00007 	ldb	r3,0(r16)
   48f7c:	003ec906 	br	48aa4 <__alt_data_end+0xfffe19a4>
   48f80:	80c00007 	ldb	r3,0(r16)
   48f84:	1b030926 	beq	r3,r12,49bac <___vfiprintf_internal_r+0x1284>
   48f88:	a5000414 	ori	r20,r20,16
   48f8c:	003ec506 	br	48aa4 <__alt_data_end+0xfffe19a4>
   48f90:	21003fcc 	andi	r4,r4,255
   48f94:	20035e1e 	bne	r4,zero,49d10 <___vfiprintf_internal_r+0x13e8>
   48f98:	a080080c 	andi	r2,r20,32
   48f9c:	1002a526 	beq	r2,zero,49a34 <___vfiprintf_internal_r+0x110c>
   48fa0:	da802217 	ldw	r10,136(sp)
   48fa4:	50800017 	ldw	r2,0(r10)
   48fa8:	da802317 	ldw	r10,140(sp)
   48fac:	5007d7fa 	srai	r3,r10,31
   48fb0:	da802217 	ldw	r10,136(sp)
   48fb4:	10c00115 	stw	r3,4(r2)
   48fb8:	52800104 	addi	r10,r10,4
   48fbc:	da802215 	stw	r10,136(sp)
   48fc0:	da802317 	ldw	r10,140(sp)
   48fc4:	12800015 	stw	r10,0(r2)
   48fc8:	003e8c06 	br	489fc <__alt_data_end+0xfffe18fc>
   48fcc:	21003fcc 	andi	r4,r4,255
   48fd0:	2003511e 	bne	r4,zero,49d18 <___vfiprintf_internal_r+0x13f0>
   48fd4:	a080080c 	andi	r2,r20,32
   48fd8:	1000a126 	beq	r2,zero,49260 <___vfiprintf_internal_r+0x938>
   48fdc:	da802217 	ldw	r10,136(sp)
   48fe0:	d8001d85 	stb	zero,118(sp)
   48fe4:	50800204 	addi	r2,r10,8
   48fe8:	54800017 	ldw	r18,0(r10)
   48fec:	54c00117 	ldw	r19,4(r10)
   48ff0:	4802b416 	blt	r9,zero,49ac4 <___vfiprintf_internal_r+0x119c>
   48ff4:	013fdfc4 	movi	r4,-129
   48ff8:	94c6b03a 	or	r3,r18,r19
   48ffc:	d8802215 	stw	r2,136(sp)
   49000:	a128703a 	and	r20,r20,r4
   49004:	1800a226 	beq	r3,zero,49290 <___vfiprintf_internal_r+0x968>
   49008:	0039883a 	mov	fp,zero
   4900c:	dd401a04 	addi	r21,sp,104
   49010:	9006d0fa 	srli	r3,r18,3
   49014:	9808977a 	slli	r4,r19,29
   49018:	9826d0fa 	srli	r19,r19,3
   4901c:	948001cc 	andi	r18,r18,7
   49020:	90800c04 	addi	r2,r18,48
   49024:	ad7fffc4 	addi	r21,r21,-1
   49028:	20e4b03a 	or	r18,r4,r3
   4902c:	a8800005 	stb	r2,0(r21)
   49030:	94c6b03a 	or	r3,r18,r19
   49034:	183ff61e 	bne	r3,zero,49010 <__alt_data_end+0xfffe1f10>
   49038:	a0c0004c 	andi	r3,r20,1
   4903c:	18005926 	beq	r3,zero,491a4 <___vfiprintf_internal_r+0x87c>
   49040:	10803fcc 	andi	r2,r2,255
   49044:	1080201c 	xori	r2,r2,128
   49048:	10bfe004 	addi	r2,r2,-128
   4904c:	00c00c04 	movi	r3,48
   49050:	10c05426 	beq	r2,r3,491a4 <___vfiprintf_internal_r+0x87c>
   49054:	da801e17 	ldw	r10,120(sp)
   49058:	a8bfffc4 	addi	r2,r21,-1
   4905c:	a8ffffc5 	stb	r3,-1(r21)
   49060:	50a7c83a 	sub	r19,r10,r2
   49064:	102b883a 	mov	r21,r2
   49068:	003f2f06 	br	48d28 <__alt_data_end+0xfffe1c28>
   4906c:	21003fcc 	andi	r4,r4,255
   49070:	2003421e 	bne	r4,zero,49d7c <___vfiprintf_internal_r+0x1454>
   49074:	00800174 	movhi	r2,5
   49078:	10be3e04 	addi	r2,r2,-1800
   4907c:	d8802615 	stw	r2,152(sp)
   49080:	a080080c 	andi	r2,r20,32
   49084:	1000aa26 	beq	r2,zero,49330 <___vfiprintf_internal_r+0xa08>
   49088:	da802217 	ldw	r10,136(sp)
   4908c:	54800017 	ldw	r18,0(r10)
   49090:	54c00117 	ldw	r19,4(r10)
   49094:	52800204 	addi	r10,r10,8
   49098:	da802215 	stw	r10,136(sp)
   4909c:	a080004c 	andi	r2,r20,1
   490a0:	1001d226 	beq	r2,zero,497ec <___vfiprintf_internal_r+0xec4>
   490a4:	94c4b03a 	or	r2,r18,r19
   490a8:	1002351e 	bne	r2,zero,49980 <___vfiprintf_internal_r+0x1058>
   490ac:	d8001d85 	stb	zero,118(sp)
   490b0:	48022216 	blt	r9,zero,4993c <___vfiprintf_internal_r+0x1014>
   490b4:	00bfdfc4 	movi	r2,-129
   490b8:	a0a8703a 	and	r20,r20,r2
   490bc:	003f1506 	br	48d14 <__alt_data_end+0xfffe1c14>
   490c0:	da802217 	ldw	r10,136(sp)
   490c4:	04800044 	movi	r18,1
   490c8:	d8001d85 	stb	zero,118(sp)
   490cc:	50800017 	ldw	r2,0(r10)
   490d0:	52800104 	addi	r10,r10,4
   490d4:	da802215 	stw	r10,136(sp)
   490d8:	d8801005 	stb	r2,64(sp)
   490dc:	9027883a 	mov	r19,r18
   490e0:	dd401004 	addi	r21,sp,64
   490e4:	0013883a 	mov	r9,zero
   490e8:	003f1706 	br	48d48 <__alt_data_end+0xfffe1c48>
   490ec:	21003fcc 	andi	r4,r4,255
   490f0:	2003201e 	bne	r4,zero,49d74 <___vfiprintf_internal_r+0x144c>
   490f4:	a080080c 	andi	r2,r20,32
   490f8:	10004b26 	beq	r2,zero,49228 <___vfiprintf_internal_r+0x900>
   490fc:	da802217 	ldw	r10,136(sp)
   49100:	50800117 	ldw	r2,4(r10)
   49104:	54800017 	ldw	r18,0(r10)
   49108:	52800204 	addi	r10,r10,8
   4910c:	da802215 	stw	r10,136(sp)
   49110:	1027883a 	mov	r19,r2
   49114:	10022c16 	blt	r2,zero,499c8 <___vfiprintf_internal_r+0x10a0>
   49118:	df001d83 	ldbu	fp,118(sp)
   4911c:	48007216 	blt	r9,zero,492e8 <___vfiprintf_internal_r+0x9c0>
   49120:	00ffdfc4 	movi	r3,-129
   49124:	94c4b03a 	or	r2,r18,r19
   49128:	a0e8703a 	and	r20,r20,r3
   4912c:	1000cc26 	beq	r2,zero,49460 <___vfiprintf_internal_r+0xb38>
   49130:	98021026 	beq	r19,zero,49974 <___vfiprintf_internal_r+0x104c>
   49134:	dc402415 	stw	r17,144(sp)
   49138:	dc002515 	stw	r16,148(sp)
   4913c:	9823883a 	mov	r17,r19
   49140:	9021883a 	mov	r16,r18
   49144:	dd401a04 	addi	r21,sp,104
   49148:	4825883a 	mov	r18,r9
   4914c:	4027883a 	mov	r19,r8
   49150:	8009883a 	mov	r4,r16
   49154:	880b883a 	mov	r5,r17
   49158:	01800284 	movi	r6,10
   4915c:	000f883a 	mov	r7,zero
   49160:	004ad080 	call	4ad08 <__umoddi3>
   49164:	10800c04 	addi	r2,r2,48
   49168:	ad7fffc4 	addi	r21,r21,-1
   4916c:	8009883a 	mov	r4,r16
   49170:	880b883a 	mov	r5,r17
   49174:	a8800005 	stb	r2,0(r21)
   49178:	01800284 	movi	r6,10
   4917c:	000f883a 	mov	r7,zero
   49180:	004a7900 	call	4a790 <__udivdi3>
   49184:	1021883a 	mov	r16,r2
   49188:	10c4b03a 	or	r2,r2,r3
   4918c:	1823883a 	mov	r17,r3
   49190:	103fef1e 	bne	r2,zero,49150 <__alt_data_end+0xfffe2050>
   49194:	dc402417 	ldw	r17,144(sp)
   49198:	dc002517 	ldw	r16,148(sp)
   4919c:	9013883a 	mov	r9,r18
   491a0:	9811883a 	mov	r8,r19
   491a4:	da801e17 	ldw	r10,120(sp)
   491a8:	5567c83a 	sub	r19,r10,r21
   491ac:	003ede06 	br	48d28 <__alt_data_end+0xfffe1c28>
   491b0:	38803fcc 	andi	r2,r7,255
   491b4:	1080201c 	xori	r2,r2,128
   491b8:	10bfe004 	addi	r2,r2,-128
   491bc:	1002371e 	bne	r2,zero,49a9c <___vfiprintf_internal_r+0x1174>
   491c0:	01000044 	movi	r4,1
   491c4:	01c00804 	movi	r7,32
   491c8:	80c00007 	ldb	r3,0(r16)
   491cc:	003e3506 	br	48aa4 <__alt_data_end+0xfffe19a4>
   491d0:	a5000054 	ori	r20,r20,1
   491d4:	80c00007 	ldb	r3,0(r16)
   491d8:	003e3206 	br	48aa4 <__alt_data_end+0xfffe19a4>
   491dc:	a5002014 	ori	r20,r20,128
   491e0:	80c00007 	ldb	r3,0(r16)
   491e4:	003e2f06 	br	48aa4 <__alt_data_end+0xfffe19a4>
   491e8:	8015883a 	mov	r10,r16
   491ec:	0023883a 	mov	r17,zero
   491f0:	18bff404 	addi	r2,r3,-48
   491f4:	50c00007 	ldb	r3,0(r10)
   491f8:	8c4002a4 	muli	r17,r17,10
   491fc:	84000044 	addi	r16,r16,1
   49200:	8015883a 	mov	r10,r16
   49204:	1463883a 	add	r17,r2,r17
   49208:	18bff404 	addi	r2,r3,-48
   4920c:	30bff92e 	bgeu	r6,r2,491f4 <__alt_data_end+0xfffe20f4>
   49210:	003e2506 	br	48aa8 <__alt_data_end+0xfffe19a8>
   49214:	21003fcc 	andi	r4,r4,255
   49218:	2002d41e 	bne	r4,zero,49d6c <___vfiprintf_internal_r+0x1444>
   4921c:	a5000414 	ori	r20,r20,16
   49220:	a080080c 	andi	r2,r20,32
   49224:	103fb51e 	bne	r2,zero,490fc <__alt_data_end+0xfffe1ffc>
   49228:	a080040c 	andi	r2,r20,16
   4922c:	1001f826 	beq	r2,zero,49a10 <___vfiprintf_internal_r+0x10e8>
   49230:	da802217 	ldw	r10,136(sp)
   49234:	54800017 	ldw	r18,0(r10)
   49238:	52800104 	addi	r10,r10,4
   4923c:	da802215 	stw	r10,136(sp)
   49240:	9027d7fa 	srai	r19,r18,31
   49244:	9805883a 	mov	r2,r19
   49248:	003fb206 	br	49114 <__alt_data_end+0xfffe2014>
   4924c:	21003fcc 	andi	r4,r4,255
   49250:	2002c41e 	bne	r4,zero,49d64 <___vfiprintf_internal_r+0x143c>
   49254:	a5000414 	ori	r20,r20,16
   49258:	a080080c 	andi	r2,r20,32
   4925c:	103f5f1e 	bne	r2,zero,48fdc <__alt_data_end+0xfffe1edc>
   49260:	a080040c 	andi	r2,r20,16
   49264:	10020f26 	beq	r2,zero,49aa4 <___vfiprintf_internal_r+0x117c>
   49268:	da802217 	ldw	r10,136(sp)
   4926c:	d8001d85 	stb	zero,118(sp)
   49270:	0027883a 	mov	r19,zero
   49274:	50800104 	addi	r2,r10,4
   49278:	54800017 	ldw	r18,0(r10)
   4927c:	48021116 	blt	r9,zero,49ac4 <___vfiprintf_internal_r+0x119c>
   49280:	00ffdfc4 	movi	r3,-129
   49284:	d8802215 	stw	r2,136(sp)
   49288:	a0e8703a 	and	r20,r20,r3
   4928c:	903f5e1e 	bne	r18,zero,49008 <__alt_data_end+0xfffe1f08>
   49290:	0039883a 	mov	fp,zero
   49294:	4802a626 	beq	r9,zero,49d30 <___vfiprintf_internal_r+0x1408>
   49298:	0025883a 	mov	r18,zero
   4929c:	0027883a 	mov	r19,zero
   492a0:	003f5a06 	br	4900c <__alt_data_end+0xfffe1f0c>
   492a4:	21003fcc 	andi	r4,r4,255
   492a8:	20029f1e 	bne	r4,zero,49d28 <___vfiprintf_internal_r+0x1400>
   492ac:	a5000414 	ori	r20,r20,16
   492b0:	a080080c 	andi	r2,r20,32
   492b4:	10005e1e 	bne	r2,zero,49430 <___vfiprintf_internal_r+0xb08>
   492b8:	a080040c 	andi	r2,r20,16
   492bc:	1001a21e 	bne	r2,zero,49948 <___vfiprintf_internal_r+0x1020>
   492c0:	a080100c 	andi	r2,r20,64
   492c4:	d8001d85 	stb	zero,118(sp)
   492c8:	da802217 	ldw	r10,136(sp)
   492cc:	1002231e 	bne	r2,zero,49b5c <___vfiprintf_internal_r+0x1234>
   492d0:	50800104 	addi	r2,r10,4
   492d4:	54800017 	ldw	r18,0(r10)
   492d8:	0027883a 	mov	r19,zero
   492dc:	4801a00e 	bge	r9,zero,49960 <___vfiprintf_internal_r+0x1038>
   492e0:	d8802215 	stw	r2,136(sp)
   492e4:	0039883a 	mov	fp,zero
   492e8:	94c4b03a 	or	r2,r18,r19
   492ec:	103f901e 	bne	r2,zero,49130 <__alt_data_end+0xfffe2030>
   492f0:	00800044 	movi	r2,1
   492f4:	10803fcc 	andi	r2,r2,255
   492f8:	00c00044 	movi	r3,1
   492fc:	10c05926 	beq	r2,r3,49464 <___vfiprintf_internal_r+0xb3c>
   49300:	00c00084 	movi	r3,2
   49304:	10ffe41e 	bne	r2,r3,49298 <__alt_data_end+0xfffe2198>
   49308:	0025883a 	mov	r18,zero
   4930c:	0027883a 	mov	r19,zero
   49310:	00013d06 	br	49808 <___vfiprintf_internal_r+0xee0>
   49314:	21003fcc 	andi	r4,r4,255
   49318:	2002811e 	bne	r4,zero,49d20 <___vfiprintf_internal_r+0x13f8>
   4931c:	00800174 	movhi	r2,5
   49320:	10be3904 	addi	r2,r2,-1820
   49324:	d8802615 	stw	r2,152(sp)
   49328:	a080080c 	andi	r2,r20,32
   4932c:	103f561e 	bne	r2,zero,49088 <__alt_data_end+0xfffe1f88>
   49330:	a080040c 	andi	r2,r20,16
   49334:	1001d126 	beq	r2,zero,49a7c <___vfiprintf_internal_r+0x1154>
   49338:	da802217 	ldw	r10,136(sp)
   4933c:	0027883a 	mov	r19,zero
   49340:	54800017 	ldw	r18,0(r10)
   49344:	52800104 	addi	r10,r10,4
   49348:	da802215 	stw	r10,136(sp)
   4934c:	003f5306 	br	4909c <__alt_data_end+0xfffe1f9c>
   49350:	da802217 	ldw	r10,136(sp)
   49354:	d8001d85 	stb	zero,118(sp)
   49358:	55400017 	ldw	r21,0(r10)
   4935c:	50c00104 	addi	r3,r10,4
   49360:	a8024226 	beq	r21,zero,49c6c <___vfiprintf_internal_r+0x1344>
   49364:	48021816 	blt	r9,zero,49bc8 <___vfiprintf_internal_r+0x12a0>
   49368:	480d883a 	mov	r6,r9
   4936c:	000b883a 	mov	r5,zero
   49370:	a809883a 	mov	r4,r21
   49374:	d8c02a15 	stw	r3,168(sp)
   49378:	da002b15 	stw	r8,172(sp)
   4937c:	da402c15 	stw	r9,176(sp)
   49380:	0046b240 	call	46b24 <memchr>
   49384:	d8c02a17 	ldw	r3,168(sp)
   49388:	da002b17 	ldw	r8,172(sp)
   4938c:	da402c17 	ldw	r9,176(sp)
   49390:	10024826 	beq	r2,zero,49cb4 <___vfiprintf_internal_r+0x138c>
   49394:	1567c83a 	sub	r19,r2,r21
   49398:	df001d83 	ldbu	fp,118(sp)
   4939c:	d8c02215 	stw	r3,136(sp)
   493a0:	0013883a 	mov	r9,zero
   493a4:	003e6006 	br	48d28 <__alt_data_end+0xfffe1c28>
   493a8:	21003fcc 	andi	r4,r4,255
   493ac:	203fc026 	beq	r4,zero,492b0 <__alt_data_end+0xfffe21b0>
   493b0:	d9c01d85 	stb	r7,118(sp)
   493b4:	003fbe06 	br	492b0 <__alt_data_end+0xfffe21b0>
   493b8:	da802217 	ldw	r10,136(sp)
   493bc:	54400017 	ldw	r17,0(r10)
   493c0:	50800104 	addi	r2,r10,4
   493c4:	883e3b16 	blt	r17,zero,48cb4 <__alt_data_end+0xfffe1bb4>
   493c8:	d8802215 	stw	r2,136(sp)
   493cc:	80c00007 	ldb	r3,0(r16)
   493d0:	003db406 	br	48aa4 <__alt_data_end+0xfffe19a4>
   493d4:	01000044 	movi	r4,1
   493d8:	01c00ac4 	movi	r7,43
   493dc:	80c00007 	ldb	r3,0(r16)
   493e0:	003db006 	br	48aa4 <__alt_data_end+0xfffe19a4>
   493e4:	80c00007 	ldb	r3,0(r16)
   493e8:	82800044 	addi	r10,r16,1
   493ec:	1b423c26 	beq	r3,r13,49ce0 <___vfiprintf_internal_r+0x13b8>
   493f0:	18bff404 	addi	r2,r3,-48
   493f4:	0013883a 	mov	r9,zero
   493f8:	30822b36 	bltu	r6,r2,49ca8 <___vfiprintf_internal_r+0x1380>
   493fc:	50c00007 	ldb	r3,0(r10)
   49400:	4a4002a4 	muli	r9,r9,10
   49404:	54000044 	addi	r16,r10,1
   49408:	8015883a 	mov	r10,r16
   4940c:	4893883a 	add	r9,r9,r2
   49410:	18bff404 	addi	r2,r3,-48
   49414:	30bff92e 	bgeu	r6,r2,493fc <__alt_data_end+0xfffe22fc>
   49418:	483da30e 	bge	r9,zero,48aa8 <__alt_data_end+0xfffe19a8>
   4941c:	027fffc4 	movi	r9,-1
   49420:	003da106 	br	48aa8 <__alt_data_end+0xfffe19a8>
   49424:	a5001014 	ori	r20,r20,64
   49428:	80c00007 	ldb	r3,0(r16)
   4942c:	003d9d06 	br	48aa4 <__alt_data_end+0xfffe19a4>
   49430:	da802217 	ldw	r10,136(sp)
   49434:	d8001d85 	stb	zero,118(sp)
   49438:	50c00204 	addi	r3,r10,8
   4943c:	54800017 	ldw	r18,0(r10)
   49440:	54c00117 	ldw	r19,4(r10)
   49444:	4801ca16 	blt	r9,zero,49b70 <___vfiprintf_internal_r+0x1248>
   49448:	013fdfc4 	movi	r4,-129
   4944c:	94c4b03a 	or	r2,r18,r19
   49450:	d8c02215 	stw	r3,136(sp)
   49454:	a128703a 	and	r20,r20,r4
   49458:	0039883a 	mov	fp,zero
   4945c:	103f341e 	bne	r2,zero,49130 <__alt_data_end+0xfffe2030>
   49460:	483e2e26 	beq	r9,zero,48d1c <__alt_data_end+0xfffe1c1c>
   49464:	0025883a 	mov	r18,zero
   49468:	94800c04 	addi	r18,r18,48
   4946c:	dc8019c5 	stb	r18,103(sp)
   49470:	dcc02717 	ldw	r19,156(sp)
   49474:	dd4019c4 	addi	r21,sp,103
   49478:	003e2b06 	br	48d28 <__alt_data_end+0xfffe1c28>
   4947c:	21003fcc 	andi	r4,r4,255
   49480:	2002361e 	bne	r4,zero,49d5c <___vfiprintf_internal_r+0x1434>
   49484:	1801c126 	beq	r3,zero,49b8c <___vfiprintf_internal_r+0x1264>
   49488:	04800044 	movi	r18,1
   4948c:	d8c01005 	stb	r3,64(sp)
   49490:	d8001d85 	stb	zero,118(sp)
   49494:	9027883a 	mov	r19,r18
   49498:	dd401004 	addi	r21,sp,64
   4949c:	003f1106 	br	490e4 <__alt_data_end+0xfffe1fe4>
   494a0:	d9402117 	ldw	r5,132(sp)
   494a4:	d9002017 	ldw	r4,128(sp)
   494a8:	d9801a04 	addi	r6,sp,104
   494ac:	d9c02b15 	stw	r7,172(sp)
   494b0:	dbc02a15 	stw	r15,168(sp)
   494b4:	00488140 	call	48814 <__sprint_r.part.0>
   494b8:	d9c02b17 	ldw	r7,172(sp)
   494bc:	dbc02a17 	ldw	r15,168(sp)
   494c0:	10006d1e 	bne	r2,zero,49678 <___vfiprintf_internal_r+0xd50>
   494c4:	d9801b17 	ldw	r6,108(sp)
   494c8:	d8801c17 	ldw	r2,112(sp)
   494cc:	d811883a 	mov	r8,sp
   494d0:	31400044 	addi	r5,r6,1
   494d4:	003e3306 	br	48da4 <__alt_data_end+0xfffe1ca4>
   494d8:	d9401b17 	ldw	r5,108(sp)
   494dc:	d8801c17 	ldw	r2,112(sp)
   494e0:	29000044 	addi	r4,r5,1
   494e4:	d8c01d87 	ldb	r3,118(sp)
   494e8:	183e4d26 	beq	r3,zero,48e20 <__alt_data_end+0xfffe1d20>
   494ec:	00c00044 	movi	r3,1
   494f0:	d9401d84 	addi	r5,sp,118
   494f4:	10c5883a 	add	r2,r2,r3
   494f8:	41400015 	stw	r5,0(r8)
   494fc:	40c00115 	stw	r3,4(r8)
   49500:	d8801c15 	stw	r2,112(sp)
   49504:	d9001b15 	stw	r4,108(sp)
   49508:	014001c4 	movi	r5,7
   4950c:	2900a90e 	bge	r5,r4,497b4 <___vfiprintf_internal_r+0xe8c>
   49510:	1000da1e 	bne	r2,zero,4987c <___vfiprintf_internal_r+0xf54>
   49514:	7000ab1e 	bne	r14,zero,497c4 <___vfiprintf_internal_r+0xe9c>
   49518:	000b883a 	mov	r5,zero
   4951c:	1809883a 	mov	r4,r3
   49520:	d811883a 	mov	r8,sp
   49524:	00c02004 	movi	r3,128
   49528:	e0fe4d26 	beq	fp,r3,48e60 <__alt_data_end+0xfffe1d60>
   4952c:	4cf9c83a 	sub	fp,r9,r19
   49530:	073e7b0e 	bge	zero,fp,48f20 <__alt_data_end+0xfffe1e20>
   49534:	01c00404 	movi	r7,16
   49538:	3f01900e 	bge	r7,fp,49b7c <___vfiprintf_internal_r+0x1254>
   4953c:	00c00174 	movhi	r3,5
   49540:	18fe9f04 	addi	r3,r3,-1412
   49544:	d8c02415 	stw	r3,144(sp)
   49548:	034001c4 	movi	r13,7
   4954c:	00000506 	br	49564 <___vfiprintf_internal_r+0xc3c>
   49550:	29000084 	addi	r4,r5,2
   49554:	42000204 	addi	r8,r8,8
   49558:	180b883a 	mov	r5,r3
   4955c:	e73ffc04 	addi	fp,fp,-16
   49560:	3f000d0e 	bge	r7,fp,49598 <___vfiprintf_internal_r+0xc70>
   49564:	10800404 	addi	r2,r2,16
   49568:	28c00044 	addi	r3,r5,1
   4956c:	45c00015 	stw	r23,0(r8)
   49570:	41c00115 	stw	r7,4(r8)
   49574:	d8801c15 	stw	r2,112(sp)
   49578:	d8c01b15 	stw	r3,108(sp)
   4957c:	68fff40e 	bge	r13,r3,49550 <__alt_data_end+0xfffe2450>
   49580:	1000101e 	bne	r2,zero,495c4 <___vfiprintf_internal_r+0xc9c>
   49584:	e73ffc04 	addi	fp,fp,-16
   49588:	01000044 	movi	r4,1
   4958c:	000b883a 	mov	r5,zero
   49590:	d811883a 	mov	r8,sp
   49594:	3f3ff316 	blt	r7,fp,49564 <__alt_data_end+0xfffe2464>
   49598:	da802417 	ldw	r10,144(sp)
   4959c:	1705883a 	add	r2,r2,fp
   495a0:	47000115 	stw	fp,4(r8)
   495a4:	42800015 	stw	r10,0(r8)
   495a8:	d8801c15 	stw	r2,112(sp)
   495ac:	d9001b15 	stw	r4,108(sp)
   495b0:	00c001c4 	movi	r3,7
   495b4:	19003616 	blt	r3,r4,49690 <___vfiprintf_internal_r+0xd68>
   495b8:	42000204 	addi	r8,r8,8
   495bc:	21000044 	addi	r4,r4,1
   495c0:	003e5706 	br	48f20 <__alt_data_end+0xfffe1e20>
   495c4:	d9402117 	ldw	r5,132(sp)
   495c8:	d9002017 	ldw	r4,128(sp)
   495cc:	d9801a04 	addi	r6,sp,104
   495d0:	d9c02b15 	stw	r7,172(sp)
   495d4:	db402a15 	stw	r13,168(sp)
   495d8:	00488140 	call	48814 <__sprint_r.part.0>
   495dc:	d9c02b17 	ldw	r7,172(sp)
   495e0:	db402a17 	ldw	r13,168(sp)
   495e4:	1000241e 	bne	r2,zero,49678 <___vfiprintf_internal_r+0xd50>
   495e8:	d9401b17 	ldw	r5,108(sp)
   495ec:	d8801c17 	ldw	r2,112(sp)
   495f0:	d811883a 	mov	r8,sp
   495f4:	29000044 	addi	r4,r5,1
   495f8:	003fd806 	br	4955c <__alt_data_end+0xfffe245c>
   495fc:	d9401b17 	ldw	r5,108(sp)
   49600:	00c00174 	movhi	r3,5
   49604:	18fea304 	addi	r3,r3,-1396
   49608:	d8c02415 	stw	r3,144(sp)
   4960c:	29400044 	addi	r5,r5,1
   49610:	d8c02417 	ldw	r3,144(sp)
   49614:	14c5883a 	add	r2,r2,r19
   49618:	44c00115 	stw	r19,4(r8)
   4961c:	40c00015 	stw	r3,0(r8)
   49620:	d8801c15 	stw	r2,112(sp)
   49624:	d9401b15 	stw	r5,108(sp)
   49628:	00c001c4 	movi	r3,7
   4962c:	1940070e 	bge	r3,r5,4964c <___vfiprintf_internal_r+0xd24>
   49630:	103e4826 	beq	r2,zero,48f54 <__alt_data_end+0xfffe1e54>
   49634:	d9402117 	ldw	r5,132(sp)
   49638:	d9002017 	ldw	r4,128(sp)
   4963c:	d9801a04 	addi	r6,sp,104
   49640:	00488140 	call	48814 <__sprint_r.part.0>
   49644:	10000c1e 	bne	r2,zero,49678 <___vfiprintf_internal_r+0xd50>
   49648:	d8801c17 	ldw	r2,112(sp)
   4964c:	8c80010e 	bge	r17,r18,49654 <___vfiprintf_internal_r+0xd2c>
   49650:	9023883a 	mov	r17,r18
   49654:	da802317 	ldw	r10,140(sp)
   49658:	5455883a 	add	r10,r10,r17
   4965c:	da802315 	stw	r10,140(sp)
   49660:	103e4126 	beq	r2,zero,48f68 <__alt_data_end+0xfffe1e68>
   49664:	d9402117 	ldw	r5,132(sp)
   49668:	d9002017 	ldw	r4,128(sp)
   4966c:	d9801a04 	addi	r6,sp,104
   49670:	00488140 	call	48814 <__sprint_r.part.0>
   49674:	103e3c26 	beq	r2,zero,48f68 <__alt_data_end+0xfffe1e68>
   49678:	dd002117 	ldw	r20,132(sp)
   4967c:	a080030b 	ldhu	r2,12(r20)
   49680:	1080100c 	andi	r2,r2,64
   49684:	1001231e 	bne	r2,zero,49b14 <___vfiprintf_internal_r+0x11ec>
   49688:	d8802317 	ldw	r2,140(sp)
   4968c:	003d7b06 	br	48c7c <__alt_data_end+0xfffe1b7c>
   49690:	1000991e 	bne	r2,zero,498f8 <___vfiprintf_internal_r+0xfd0>
   49694:	00c00044 	movi	r3,1
   49698:	9805883a 	mov	r2,r19
   4969c:	dd400015 	stw	r21,0(sp)
   496a0:	dcc00115 	stw	r19,4(sp)
   496a4:	dcc01c15 	stw	r19,112(sp)
   496a8:	d8c01b15 	stw	r3,108(sp)
   496ac:	d811883a 	mov	r8,sp
   496b0:	42000204 	addi	r8,r8,8
   496b4:	a2c0010c 	andi	r11,r20,4
   496b8:	583fe426 	beq	r11,zero,4964c <__alt_data_end+0xfffe254c>
   496bc:	8ca7c83a 	sub	r19,r17,r18
   496c0:	04ffe20e 	bge	zero,r19,4964c <__alt_data_end+0xfffe254c>
   496c4:	01c00404 	movi	r7,16
   496c8:	3cffcc0e 	bge	r7,r19,495fc <__alt_data_end+0xfffe24fc>
   496cc:	02800174 	movhi	r10,5
   496d0:	52bea304 	addi	r10,r10,-1396
   496d4:	d9001b17 	ldw	r4,108(sp)
   496d8:	da802415 	stw	r10,144(sp)
   496dc:	382b883a 	mov	r21,r7
   496e0:	050001c4 	movi	r20,7
   496e4:	df002017 	ldw	fp,128(sp)
   496e8:	00000506 	br	49700 <___vfiprintf_internal_r+0xdd8>
   496ec:	21400084 	addi	r5,r4,2
   496f0:	42000204 	addi	r8,r8,8
   496f4:	1809883a 	mov	r4,r3
   496f8:	9cfffc04 	addi	r19,r19,-16
   496fc:	acffc40e 	bge	r21,r19,49610 <__alt_data_end+0xfffe2510>
   49700:	10800404 	addi	r2,r2,16
   49704:	20c00044 	addi	r3,r4,1
   49708:	45800015 	stw	r22,0(r8)
   4970c:	45400115 	stw	r21,4(r8)
   49710:	d8801c15 	stw	r2,112(sp)
   49714:	d8c01b15 	stw	r3,108(sp)
   49718:	a0fff40e 	bge	r20,r3,496ec <__alt_data_end+0xfffe25ec>
   4971c:	1000041e 	bne	r2,zero,49730 <___vfiprintf_internal_r+0xe08>
   49720:	01400044 	movi	r5,1
   49724:	0009883a 	mov	r4,zero
   49728:	d811883a 	mov	r8,sp
   4972c:	003ff206 	br	496f8 <__alt_data_end+0xfffe25f8>
   49730:	d9402117 	ldw	r5,132(sp)
   49734:	d9801a04 	addi	r6,sp,104
   49738:	e009883a 	mov	r4,fp
   4973c:	00488140 	call	48814 <__sprint_r.part.0>
   49740:	103fcd1e 	bne	r2,zero,49678 <__alt_data_end+0xfffe2578>
   49744:	d9001b17 	ldw	r4,108(sp)
   49748:	d8801c17 	ldw	r2,112(sp)
   4974c:	d811883a 	mov	r8,sp
   49750:	21400044 	addi	r5,r4,1
   49754:	003fe806 	br	496f8 <__alt_data_end+0xfffe25f8>
   49758:	d9402117 	ldw	r5,132(sp)
   4975c:	d9002017 	ldw	r4,128(sp)
   49760:	d9801a04 	addi	r6,sp,104
   49764:	d9c02b15 	stw	r7,172(sp)
   49768:	db402a15 	stw	r13,168(sp)
   4976c:	00488140 	call	48814 <__sprint_r.part.0>
   49770:	d9c02b17 	ldw	r7,172(sp)
   49774:	db402a17 	ldw	r13,168(sp)
   49778:	103fbf1e 	bne	r2,zero,49678 <__alt_data_end+0xfffe2578>
   4977c:	d9401b17 	ldw	r5,108(sp)
   49780:	d8801c17 	ldw	r2,112(sp)
   49784:	d811883a 	mov	r8,sp
   49788:	29800044 	addi	r6,r5,1
   4978c:	003dc406 	br	48ea0 <__alt_data_end+0xfffe1da0>
   49790:	1000d21e 	bne	r2,zero,49adc <___vfiprintf_internal_r+0x11b4>
   49794:	d8c01d87 	ldb	r3,118(sp)
   49798:	18009526 	beq	r3,zero,499f0 <___vfiprintf_internal_r+0x10c8>
   4979c:	00800044 	movi	r2,1
   497a0:	d8c01d84 	addi	r3,sp,118
   497a4:	1009883a 	mov	r4,r2
   497a8:	d8c00015 	stw	r3,0(sp)
   497ac:	d8800115 	stw	r2,4(sp)
   497b0:	d811883a 	mov	r8,sp
   497b4:	200b883a 	mov	r5,r4
   497b8:	42000204 	addi	r8,r8,8
   497bc:	21000044 	addi	r4,r4,1
   497c0:	003d9706 	br	48e20 <__alt_data_end+0xfffe1d20>
   497c4:	d9001d04 	addi	r4,sp,116
   497c8:	00800084 	movi	r2,2
   497cc:	d9000015 	stw	r4,0(sp)
   497d0:	d8800115 	stw	r2,4(sp)
   497d4:	1809883a 	mov	r4,r3
   497d8:	d811883a 	mov	r8,sp
   497dc:	200b883a 	mov	r5,r4
   497e0:	42000204 	addi	r8,r8,8
   497e4:	21000044 	addi	r4,r4,1
   497e8:	003f4e06 	br	49524 <__alt_data_end+0xfffe2424>
   497ec:	d8001d85 	stb	zero,118(sp)
   497f0:	48005016 	blt	r9,zero,49934 <___vfiprintf_internal_r+0x100c>
   497f4:	00ffdfc4 	movi	r3,-129
   497f8:	94c4b03a 	or	r2,r18,r19
   497fc:	a0e8703a 	and	r20,r20,r3
   49800:	103d4426 	beq	r2,zero,48d14 <__alt_data_end+0xfffe1c14>
   49804:	0039883a 	mov	fp,zero
   49808:	d9002617 	ldw	r4,152(sp)
   4980c:	dd401a04 	addi	r21,sp,104
   49810:	908003cc 	andi	r2,r18,15
   49814:	9806973a 	slli	r3,r19,28
   49818:	2085883a 	add	r2,r4,r2
   4981c:	9024d13a 	srli	r18,r18,4
   49820:	10800003 	ldbu	r2,0(r2)
   49824:	9826d13a 	srli	r19,r19,4
   49828:	ad7fffc4 	addi	r21,r21,-1
   4982c:	1ca4b03a 	or	r18,r3,r18
   49830:	a8800005 	stb	r2,0(r21)
   49834:	94c4b03a 	or	r2,r18,r19
   49838:	103ff51e 	bne	r2,zero,49810 <__alt_data_end+0xfffe2710>
   4983c:	003e5906 	br	491a4 <__alt_data_end+0xfffe20a4>
   49840:	d9402117 	ldw	r5,132(sp)
   49844:	d9002017 	ldw	r4,128(sp)
   49848:	d9801a04 	addi	r6,sp,104
   4984c:	00488140 	call	48814 <__sprint_r.part.0>
   49850:	103f891e 	bne	r2,zero,49678 <__alt_data_end+0xfffe2578>
   49854:	d8801c17 	ldw	r2,112(sp)
   49858:	d811883a 	mov	r8,sp
   4985c:	003f9506 	br	496b4 <__alt_data_end+0xfffe25b4>
   49860:	d9402117 	ldw	r5,132(sp)
   49864:	d9002017 	ldw	r4,128(sp)
   49868:	d9801a04 	addi	r6,sp,104
   4986c:	00488140 	call	48814 <__sprint_r.part.0>
   49870:	103f811e 	bne	r2,zero,49678 <__alt_data_end+0xfffe2578>
   49874:	d811883a 	mov	r8,sp
   49878:	003ced06 	br	48c30 <__alt_data_end+0xfffe1b30>
   4987c:	d9402117 	ldw	r5,132(sp)
   49880:	d9002017 	ldw	r4,128(sp)
   49884:	d9801a04 	addi	r6,sp,104
   49888:	da402c15 	stw	r9,176(sp)
   4988c:	db802a15 	stw	r14,168(sp)
   49890:	00488140 	call	48814 <__sprint_r.part.0>
   49894:	da402c17 	ldw	r9,176(sp)
   49898:	db802a17 	ldw	r14,168(sp)
   4989c:	103f761e 	bne	r2,zero,49678 <__alt_data_end+0xfffe2578>
   498a0:	d9401b17 	ldw	r5,108(sp)
   498a4:	d8801c17 	ldw	r2,112(sp)
   498a8:	d811883a 	mov	r8,sp
   498ac:	29000044 	addi	r4,r5,1
   498b0:	003d5b06 	br	48e20 <__alt_data_end+0xfffe1d20>
   498b4:	d9402117 	ldw	r5,132(sp)
   498b8:	d9002017 	ldw	r4,128(sp)
   498bc:	d9801a04 	addi	r6,sp,104
   498c0:	da402c15 	stw	r9,176(sp)
   498c4:	00488140 	call	48814 <__sprint_r.part.0>
   498c8:	da402c17 	ldw	r9,176(sp)
   498cc:	103f6a1e 	bne	r2,zero,49678 <__alt_data_end+0xfffe2578>
   498d0:	d9401b17 	ldw	r5,108(sp)
   498d4:	d8801c17 	ldw	r2,112(sp)
   498d8:	d811883a 	mov	r8,sp
   498dc:	29000044 	addi	r4,r5,1
   498e0:	003f1006 	br	49524 <__alt_data_end+0xfffe2424>
   498e4:	1000c31e 	bne	r2,zero,49bf4 <___vfiprintf_internal_r+0x12cc>
   498e8:	01000044 	movi	r4,1
   498ec:	000b883a 	mov	r5,zero
   498f0:	d811883a 	mov	r8,sp
   498f4:	003f0d06 	br	4952c <__alt_data_end+0xfffe242c>
   498f8:	d9402117 	ldw	r5,132(sp)
   498fc:	d9002017 	ldw	r4,128(sp)
   49900:	d9801a04 	addi	r6,sp,104
   49904:	00488140 	call	48814 <__sprint_r.part.0>
   49908:	103f5b1e 	bne	r2,zero,49678 <__alt_data_end+0xfffe2578>
   4990c:	d9001b17 	ldw	r4,108(sp)
   49910:	d8801c17 	ldw	r2,112(sp)
   49914:	d811883a 	mov	r8,sp
   49918:	21000044 	addi	r4,r4,1
   4991c:	003d8006 	br	48f20 <__alt_data_end+0xfffe1e20>
   49920:	01000174 	movhi	r4,5
   49924:	213e3e04 	addi	r4,r4,-1800
   49928:	d9002615 	stw	r4,152(sp)
   4992c:	d8c02215 	stw	r3,136(sp)
   49930:	1029883a 	mov	r20,r2
   49934:	94c4b03a 	or	r2,r18,r19
   49938:	103fb21e 	bne	r2,zero,49804 <__alt_data_end+0xfffe2704>
   4993c:	0039883a 	mov	fp,zero
   49940:	00800084 	movi	r2,2
   49944:	003e6b06 	br	492f4 <__alt_data_end+0xfffe21f4>
   49948:	da802217 	ldw	r10,136(sp)
   4994c:	d8001d85 	stb	zero,118(sp)
   49950:	0027883a 	mov	r19,zero
   49954:	50800104 	addi	r2,r10,4
   49958:	54800017 	ldw	r18,0(r10)
   4995c:	483e6016 	blt	r9,zero,492e0 <__alt_data_end+0xfffe21e0>
   49960:	00ffdfc4 	movi	r3,-129
   49964:	d8802215 	stw	r2,136(sp)
   49968:	a0e8703a 	and	r20,r20,r3
   4996c:	0039883a 	mov	fp,zero
   49970:	903ebb26 	beq	r18,zero,49460 <__alt_data_end+0xfffe2360>
   49974:	00800244 	movi	r2,9
   49978:	14bdee36 	bltu	r2,r18,49134 <__alt_data_end+0xfffe2034>
   4997c:	003eba06 	br	49468 <__alt_data_end+0xfffe2368>
   49980:	00800c04 	movi	r2,48
   49984:	d8c01d45 	stb	r3,117(sp)
   49988:	d8801d05 	stb	r2,116(sp)
   4998c:	d8001d85 	stb	zero,118(sp)
   49990:	a0c00094 	ori	r3,r20,2
   49994:	4800a916 	blt	r9,zero,49c3c <___vfiprintf_internal_r+0x1314>
   49998:	00bfdfc4 	movi	r2,-129
   4999c:	a096703a 	and	r11,r20,r2
   499a0:	5d000094 	ori	r20,r11,2
   499a4:	0039883a 	mov	fp,zero
   499a8:	003f9706 	br	49808 <__alt_data_end+0xfffe2708>
   499ac:	8025883a 	mov	r18,r16
   499b0:	003c2e06 	br	48a6c <__alt_data_end+0xfffe196c>
   499b4:	00800174 	movhi	r2,5
   499b8:	10be3e04 	addi	r2,r2,-1800
   499bc:	0039883a 	mov	fp,zero
   499c0:	d8802615 	stw	r2,152(sp)
   499c4:	003f9006 	br	49808 <__alt_data_end+0xfffe2708>
   499c8:	04a5c83a 	sub	r18,zero,r18
   499cc:	07000b44 	movi	fp,45
   499d0:	9004c03a 	cmpne	r2,r18,zero
   499d4:	04e7c83a 	sub	r19,zero,r19
   499d8:	df001d85 	stb	fp,118(sp)
   499dc:	98a7c83a 	sub	r19,r19,r2
   499e0:	48009f16 	blt	r9,zero,49c60 <___vfiprintf_internal_r+0x1338>
   499e4:	00bfdfc4 	movi	r2,-129
   499e8:	a0a8703a 	and	r20,r20,r2
   499ec:	003dd006 	br	49130 <__alt_data_end+0xfffe2030>
   499f0:	70004c26 	beq	r14,zero,49b24 <___vfiprintf_internal_r+0x11fc>
   499f4:	00800084 	movi	r2,2
   499f8:	d8c01d04 	addi	r3,sp,116
   499fc:	d8c00015 	stw	r3,0(sp)
   49a00:	d8800115 	stw	r2,4(sp)
   49a04:	01000044 	movi	r4,1
   49a08:	d811883a 	mov	r8,sp
   49a0c:	003f7306 	br	497dc <__alt_data_end+0xfffe26dc>
   49a10:	a080100c 	andi	r2,r20,64
   49a14:	da802217 	ldw	r10,136(sp)
   49a18:	103e0626 	beq	r2,zero,49234 <__alt_data_end+0xfffe2134>
   49a1c:	5480000f 	ldh	r18,0(r10)
   49a20:	52800104 	addi	r10,r10,4
   49a24:	da802215 	stw	r10,136(sp)
   49a28:	9027d7fa 	srai	r19,r18,31
   49a2c:	9805883a 	mov	r2,r19
   49a30:	003db806 	br	49114 <__alt_data_end+0xfffe2014>
   49a34:	a080040c 	andi	r2,r20,16
   49a38:	1000091e 	bne	r2,zero,49a60 <___vfiprintf_internal_r+0x1138>
   49a3c:	a2c0100c 	andi	r11,r20,64
   49a40:	58000726 	beq	r11,zero,49a60 <___vfiprintf_internal_r+0x1138>
   49a44:	da802217 	ldw	r10,136(sp)
   49a48:	50800017 	ldw	r2,0(r10)
   49a4c:	52800104 	addi	r10,r10,4
   49a50:	da802215 	stw	r10,136(sp)
   49a54:	da802317 	ldw	r10,140(sp)
   49a58:	1280000d 	sth	r10,0(r2)
   49a5c:	003be706 	br	489fc <__alt_data_end+0xfffe18fc>
   49a60:	da802217 	ldw	r10,136(sp)
   49a64:	50800017 	ldw	r2,0(r10)
   49a68:	52800104 	addi	r10,r10,4
   49a6c:	da802215 	stw	r10,136(sp)
   49a70:	da802317 	ldw	r10,140(sp)
   49a74:	12800015 	stw	r10,0(r2)
   49a78:	003be006 	br	489fc <__alt_data_end+0xfffe18fc>
   49a7c:	a080100c 	andi	r2,r20,64
   49a80:	da802217 	ldw	r10,136(sp)
   49a84:	10003026 	beq	r2,zero,49b48 <___vfiprintf_internal_r+0x1220>
   49a88:	5480000b 	ldhu	r18,0(r10)
   49a8c:	52800104 	addi	r10,r10,4
   49a90:	0027883a 	mov	r19,zero
   49a94:	da802215 	stw	r10,136(sp)
   49a98:	003d8006 	br	4909c <__alt_data_end+0xfffe1f9c>
   49a9c:	80c00007 	ldb	r3,0(r16)
   49aa0:	003c0006 	br	48aa4 <__alt_data_end+0xfffe19a4>
   49aa4:	a080100c 	andi	r2,r20,64
   49aa8:	d8001d85 	stb	zero,118(sp)
   49aac:	da802217 	ldw	r10,136(sp)
   49ab0:	1000201e 	bne	r2,zero,49b34 <___vfiprintf_internal_r+0x120c>
   49ab4:	50800104 	addi	r2,r10,4
   49ab8:	54800017 	ldw	r18,0(r10)
   49abc:	0027883a 	mov	r19,zero
   49ac0:	483def0e 	bge	r9,zero,49280 <__alt_data_end+0xfffe2180>
   49ac4:	94c6b03a 	or	r3,r18,r19
   49ac8:	d8802215 	stw	r2,136(sp)
   49acc:	183d4e1e 	bne	r3,zero,49008 <__alt_data_end+0xfffe1f08>
   49ad0:	0039883a 	mov	fp,zero
   49ad4:	0005883a 	mov	r2,zero
   49ad8:	003e0606 	br	492f4 <__alt_data_end+0xfffe21f4>
   49adc:	d9402117 	ldw	r5,132(sp)
   49ae0:	d9002017 	ldw	r4,128(sp)
   49ae4:	d9801a04 	addi	r6,sp,104
   49ae8:	da402c15 	stw	r9,176(sp)
   49aec:	db802a15 	stw	r14,168(sp)
   49af0:	00488140 	call	48814 <__sprint_r.part.0>
   49af4:	da402c17 	ldw	r9,176(sp)
   49af8:	db802a17 	ldw	r14,168(sp)
   49afc:	103ede1e 	bne	r2,zero,49678 <__alt_data_end+0xfffe2578>
   49b00:	d9401b17 	ldw	r5,108(sp)
   49b04:	d8801c17 	ldw	r2,112(sp)
   49b08:	d811883a 	mov	r8,sp
   49b0c:	29000044 	addi	r4,r5,1
   49b10:	003e7406 	br	494e4 <__alt_data_end+0xfffe23e4>
   49b14:	00bfffc4 	movi	r2,-1
   49b18:	003c5806 	br	48c7c <__alt_data_end+0xfffe1b7c>
   49b1c:	d811883a 	mov	r8,sp
   49b20:	003ee806 	br	496c4 <__alt_data_end+0xfffe25c4>
   49b24:	000b883a 	mov	r5,zero
   49b28:	01000044 	movi	r4,1
   49b2c:	d811883a 	mov	r8,sp
   49b30:	003e7c06 	br	49524 <__alt_data_end+0xfffe2424>
   49b34:	50800104 	addi	r2,r10,4
   49b38:	5480000b 	ldhu	r18,0(r10)
   49b3c:	0027883a 	mov	r19,zero
   49b40:	483dcf0e 	bge	r9,zero,49280 <__alt_data_end+0xfffe2180>
   49b44:	003fdf06 	br	49ac4 <__alt_data_end+0xfffe29c4>
   49b48:	54800017 	ldw	r18,0(r10)
   49b4c:	52800104 	addi	r10,r10,4
   49b50:	0027883a 	mov	r19,zero
   49b54:	da802215 	stw	r10,136(sp)
   49b58:	003d5006 	br	4909c <__alt_data_end+0xfffe1f9c>
   49b5c:	50800104 	addi	r2,r10,4
   49b60:	5480000b 	ldhu	r18,0(r10)
   49b64:	0027883a 	mov	r19,zero
   49b68:	483f7d0e 	bge	r9,zero,49960 <__alt_data_end+0xfffe2860>
   49b6c:	003ddc06 	br	492e0 <__alt_data_end+0xfffe21e0>
   49b70:	d8c02215 	stw	r3,136(sp)
   49b74:	0039883a 	mov	fp,zero
   49b78:	003ddb06 	br	492e8 <__alt_data_end+0xfffe21e8>
   49b7c:	02800174 	movhi	r10,5
   49b80:	52be9f04 	addi	r10,r10,-1412
   49b84:	da802415 	stw	r10,144(sp)
   49b88:	003e8306 	br	49598 <__alt_data_end+0xfffe2498>
   49b8c:	d8801c17 	ldw	r2,112(sp)
   49b90:	dd002117 	ldw	r20,132(sp)
   49b94:	103eb926 	beq	r2,zero,4967c <__alt_data_end+0xfffe257c>
   49b98:	d9002017 	ldw	r4,128(sp)
   49b9c:	d9801a04 	addi	r6,sp,104
   49ba0:	a00b883a 	mov	r5,r20
   49ba4:	00488140 	call	48814 <__sprint_r.part.0>
   49ba8:	003eb406 	br	4967c <__alt_data_end+0xfffe257c>
   49bac:	80c00043 	ldbu	r3,1(r16)
   49bb0:	a5000814 	ori	r20,r20,32
   49bb4:	84000044 	addi	r16,r16,1
   49bb8:	18c03fcc 	andi	r3,r3,255
   49bbc:	18c0201c 	xori	r3,r3,128
   49bc0:	18ffe004 	addi	r3,r3,-128
   49bc4:	003bb706 	br	48aa4 <__alt_data_end+0xfffe19a4>
   49bc8:	a809883a 	mov	r4,r21
   49bcc:	d8c02a15 	stw	r3,168(sp)
   49bd0:	da002b15 	stw	r8,172(sp)
   49bd4:	004127c0 	call	4127c <strlen>
   49bd8:	d8c02a17 	ldw	r3,168(sp)
   49bdc:	1027883a 	mov	r19,r2
   49be0:	df001d83 	ldbu	fp,118(sp)
   49be4:	d8c02215 	stw	r3,136(sp)
   49be8:	0013883a 	mov	r9,zero
   49bec:	da002b17 	ldw	r8,172(sp)
   49bf0:	003c4d06 	br	48d28 <__alt_data_end+0xfffe1c28>
   49bf4:	d9402117 	ldw	r5,132(sp)
   49bf8:	d9002017 	ldw	r4,128(sp)
   49bfc:	d9801a04 	addi	r6,sp,104
   49c00:	da402c15 	stw	r9,176(sp)
   49c04:	00488140 	call	48814 <__sprint_r.part.0>
   49c08:	da402c17 	ldw	r9,176(sp)
   49c0c:	103e9a1e 	bne	r2,zero,49678 <__alt_data_end+0xfffe2578>
   49c10:	d9401b17 	ldw	r5,108(sp)
   49c14:	d8801c17 	ldw	r2,112(sp)
   49c18:	d811883a 	mov	r8,sp
   49c1c:	29000044 	addi	r4,r5,1
   49c20:	003e4206 	br	4952c <__alt_data_end+0xfffe242c>
   49c24:	d9401b17 	ldw	r5,108(sp)
   49c28:	01000174 	movhi	r4,5
   49c2c:	213ea304 	addi	r4,r4,-1396
   49c30:	d9002415 	stw	r4,144(sp)
   49c34:	29400044 	addi	r5,r5,1
   49c38:	003c6d06 	br	48df0 <__alt_data_end+0xfffe1cf0>
   49c3c:	0039883a 	mov	fp,zero
   49c40:	00800084 	movi	r2,2
   49c44:	10803fcc 	andi	r2,r2,255
   49c48:	01000044 	movi	r4,1
   49c4c:	11001e26 	beq	r2,r4,49cc8 <___vfiprintf_internal_r+0x13a0>
   49c50:	01000084 	movi	r4,2
   49c54:	11001e1e 	bne	r2,r4,49cd0 <___vfiprintf_internal_r+0x13a8>
   49c58:	1829883a 	mov	r20,r3
   49c5c:	003eea06 	br	49808 <__alt_data_end+0xfffe2708>
   49c60:	a007883a 	mov	r3,r20
   49c64:	00800044 	movi	r2,1
   49c68:	003ff606 	br	49c44 <__alt_data_end+0xfffe2b44>
   49c6c:	00800184 	movi	r2,6
   49c70:	1240012e 	bgeu	r2,r9,49c78 <___vfiprintf_internal_r+0x1350>
   49c74:	1013883a 	mov	r9,r2
   49c78:	4827883a 	mov	r19,r9
   49c7c:	4825883a 	mov	r18,r9
   49c80:	48001516 	blt	r9,zero,49cd8 <___vfiprintf_internal_r+0x13b0>
   49c84:	05400174 	movhi	r21,5
   49c88:	d8c02215 	stw	r3,136(sp)
   49c8c:	ad7e4304 	addi	r21,r21,-1780
   49c90:	003d1406 	br	490e4 <__alt_data_end+0xfffe1fe4>
   49c94:	02800174 	movhi	r10,5
   49c98:	52be9f04 	addi	r10,r10,-1412
   49c9c:	da802415 	stw	r10,144(sp)
   49ca0:	200d883a 	mov	r6,r4
   49ca4:	003c9106 	br	48eec <__alt_data_end+0xfffe1dec>
   49ca8:	5021883a 	mov	r16,r10
   49cac:	0013883a 	mov	r9,zero
   49cb0:	003b7d06 	br	48aa8 <__alt_data_end+0xfffe19a8>
   49cb4:	4827883a 	mov	r19,r9
   49cb8:	df001d83 	ldbu	fp,118(sp)
   49cbc:	d8c02215 	stw	r3,136(sp)
   49cc0:	0013883a 	mov	r9,zero
   49cc4:	003c1806 	br	48d28 <__alt_data_end+0xfffe1c28>
   49cc8:	1829883a 	mov	r20,r3
   49ccc:	003d1806 	br	49130 <__alt_data_end+0xfffe2030>
   49cd0:	1829883a 	mov	r20,r3
   49cd4:	003ccd06 	br	4900c <__alt_data_end+0xfffe1f0c>
   49cd8:	0025883a 	mov	r18,zero
   49cdc:	003fe906 	br	49c84 <__alt_data_end+0xfffe2b84>
   49ce0:	d8802217 	ldw	r2,136(sp)
   49ce4:	80c00043 	ldbu	r3,1(r16)
   49ce8:	5021883a 	mov	r16,r10
   49cec:	12400017 	ldw	r9,0(r2)
   49cf0:	10800104 	addi	r2,r2,4
   49cf4:	d8802215 	stw	r2,136(sp)
   49cf8:	483faf0e 	bge	r9,zero,49bb8 <__alt_data_end+0xfffe2ab8>
   49cfc:	18c03fcc 	andi	r3,r3,255
   49d00:	18c0201c 	xori	r3,r3,128
   49d04:	027fffc4 	movi	r9,-1
   49d08:	18ffe004 	addi	r3,r3,-128
   49d0c:	003b6506 	br	48aa4 <__alt_data_end+0xfffe19a4>
   49d10:	d9c01d85 	stb	r7,118(sp)
   49d14:	003ca006 	br	48f98 <__alt_data_end+0xfffe1e98>
   49d18:	d9c01d85 	stb	r7,118(sp)
   49d1c:	003cad06 	br	48fd4 <__alt_data_end+0xfffe1ed4>
   49d20:	d9c01d85 	stb	r7,118(sp)
   49d24:	003d7d06 	br	4931c <__alt_data_end+0xfffe221c>
   49d28:	d9c01d85 	stb	r7,118(sp)
   49d2c:	003d5f06 	br	492ac <__alt_data_end+0xfffe21ac>
   49d30:	a080004c 	andi	r2,r20,1
   49d34:	0039883a 	mov	fp,zero
   49d38:	10000526 	beq	r2,zero,49d50 <___vfiprintf_internal_r+0x1428>
   49d3c:	00800c04 	movi	r2,48
   49d40:	d88019c5 	stb	r2,103(sp)
   49d44:	dcc02717 	ldw	r19,156(sp)
   49d48:	dd4019c4 	addi	r21,sp,103
   49d4c:	003bf606 	br	48d28 <__alt_data_end+0xfffe1c28>
   49d50:	0027883a 	mov	r19,zero
   49d54:	dd401a04 	addi	r21,sp,104
   49d58:	003bf306 	br	48d28 <__alt_data_end+0xfffe1c28>
   49d5c:	d9c01d85 	stb	r7,118(sp)
   49d60:	003dc806 	br	49484 <__alt_data_end+0xfffe2384>
   49d64:	d9c01d85 	stb	r7,118(sp)
   49d68:	003d3a06 	br	49254 <__alt_data_end+0xfffe2154>
   49d6c:	d9c01d85 	stb	r7,118(sp)
   49d70:	003d2a06 	br	4921c <__alt_data_end+0xfffe211c>
   49d74:	d9c01d85 	stb	r7,118(sp)
   49d78:	003cde06 	br	490f4 <__alt_data_end+0xfffe1ff4>
   49d7c:	d9c01d85 	stb	r7,118(sp)
   49d80:	003cbc06 	br	49074 <__alt_data_end+0xfffe1f74>

00049d84 <__vfiprintf_internal>:
   49d84:	00800174 	movhi	r2,5
   49d88:	10855e04 	addi	r2,r2,5496
   49d8c:	300f883a 	mov	r7,r6
   49d90:	280d883a 	mov	r6,r5
   49d94:	200b883a 	mov	r5,r4
   49d98:	11000017 	ldw	r4,0(r2)
   49d9c:	00489281 	jmpi	48928 <___vfiprintf_internal_r>

00049da0 <__sbprintf>:
   49da0:	2880030b 	ldhu	r2,12(r5)
   49da4:	2ac01917 	ldw	r11,100(r5)
   49da8:	2a80038b 	ldhu	r10,14(r5)
   49dac:	2a400717 	ldw	r9,28(r5)
   49db0:	2a000917 	ldw	r8,36(r5)
   49db4:	defee204 	addi	sp,sp,-1144
   49db8:	00c10004 	movi	r3,1024
   49dbc:	dc011a15 	stw	r16,1128(sp)
   49dc0:	10bfff4c 	andi	r2,r2,65533
   49dc4:	2821883a 	mov	r16,r5
   49dc8:	d8cb883a 	add	r5,sp,r3
   49dcc:	dc811c15 	stw	r18,1136(sp)
   49dd0:	dc411b15 	stw	r17,1132(sp)
   49dd4:	dfc11d15 	stw	ra,1140(sp)
   49dd8:	2025883a 	mov	r18,r4
   49ddc:	d881030d 	sth	r2,1036(sp)
   49de0:	dac11915 	stw	r11,1124(sp)
   49de4:	da81038d 	sth	r10,1038(sp)
   49de8:	da410715 	stw	r9,1052(sp)
   49dec:	da010915 	stw	r8,1060(sp)
   49df0:	dec10015 	stw	sp,1024(sp)
   49df4:	dec10415 	stw	sp,1040(sp)
   49df8:	d8c10215 	stw	r3,1032(sp)
   49dfc:	d8c10515 	stw	r3,1044(sp)
   49e00:	d8010615 	stw	zero,1048(sp)
   49e04:	00489280 	call	48928 <___vfiprintf_internal_r>
   49e08:	1023883a 	mov	r17,r2
   49e0c:	10000416 	blt	r2,zero,49e20 <__sbprintf+0x80>
   49e10:	d9410004 	addi	r5,sp,1024
   49e14:	9009883a 	mov	r4,r18
   49e18:	00451dc0 	call	451dc <_fflush_r>
   49e1c:	10000d1e 	bne	r2,zero,49e54 <__sbprintf+0xb4>
   49e20:	d881030b 	ldhu	r2,1036(sp)
   49e24:	1080100c 	andi	r2,r2,64
   49e28:	10000326 	beq	r2,zero,49e38 <__sbprintf+0x98>
   49e2c:	8080030b 	ldhu	r2,12(r16)
   49e30:	10801014 	ori	r2,r2,64
   49e34:	8080030d 	sth	r2,12(r16)
   49e38:	8805883a 	mov	r2,r17
   49e3c:	dfc11d17 	ldw	ra,1140(sp)
   49e40:	dc811c17 	ldw	r18,1136(sp)
   49e44:	dc411b17 	ldw	r17,1132(sp)
   49e48:	dc011a17 	ldw	r16,1128(sp)
   49e4c:	dec11e04 	addi	sp,sp,1144
   49e50:	f800283a 	ret
   49e54:	047fffc4 	movi	r17,-1
   49e58:	003ff106 	br	49e20 <__alt_data_end+0xfffe2d20>

00049e5c <_write_r>:
   49e5c:	defffd04 	addi	sp,sp,-12
   49e60:	2805883a 	mov	r2,r5
   49e64:	dc000015 	stw	r16,0(sp)
   49e68:	04000174 	movhi	r16,5
   49e6c:	dc400115 	stw	r17,4(sp)
   49e70:	300b883a 	mov	r5,r6
   49e74:	840c2e04 	addi	r16,r16,12472
   49e78:	2023883a 	mov	r17,r4
   49e7c:	380d883a 	mov	r6,r7
   49e80:	1009883a 	mov	r4,r2
   49e84:	dfc00215 	stw	ra,8(sp)
   49e88:	80000015 	stw	zero,0(r16)
   49e8c:	004d7d80 	call	4d7d8 <write>
   49e90:	00ffffc4 	movi	r3,-1
   49e94:	10c00526 	beq	r2,r3,49eac <_write_r+0x50>
   49e98:	dfc00217 	ldw	ra,8(sp)
   49e9c:	dc400117 	ldw	r17,4(sp)
   49ea0:	dc000017 	ldw	r16,0(sp)
   49ea4:	dec00304 	addi	sp,sp,12
   49ea8:	f800283a 	ret
   49eac:	80c00017 	ldw	r3,0(r16)
   49eb0:	183ff926 	beq	r3,zero,49e98 <__alt_data_end+0xfffe2d98>
   49eb4:	88c00015 	stw	r3,0(r17)
   49eb8:	003ff706 	br	49e98 <__alt_data_end+0xfffe2d98>

00049ebc <_close_r>:
   49ebc:	defffd04 	addi	sp,sp,-12
   49ec0:	dc000015 	stw	r16,0(sp)
   49ec4:	04000174 	movhi	r16,5
   49ec8:	dc400115 	stw	r17,4(sp)
   49ecc:	840c2e04 	addi	r16,r16,12472
   49ed0:	2023883a 	mov	r17,r4
   49ed4:	2809883a 	mov	r4,r5
   49ed8:	dfc00215 	stw	ra,8(sp)
   49edc:	80000015 	stw	zero,0(r16)
   49ee0:	004cf980 	call	4cf98 <close>
   49ee4:	00ffffc4 	movi	r3,-1
   49ee8:	10c00526 	beq	r2,r3,49f00 <_close_r+0x44>
   49eec:	dfc00217 	ldw	ra,8(sp)
   49ef0:	dc400117 	ldw	r17,4(sp)
   49ef4:	dc000017 	ldw	r16,0(sp)
   49ef8:	dec00304 	addi	sp,sp,12
   49efc:	f800283a 	ret
   49f00:	80c00017 	ldw	r3,0(r16)
   49f04:	183ff926 	beq	r3,zero,49eec <__alt_data_end+0xfffe2dec>
   49f08:	88c00015 	stw	r3,0(r17)
   49f0c:	003ff706 	br	49eec <__alt_data_end+0xfffe2dec>

00049f10 <_calloc_r>:
   49f10:	298b383a 	mul	r5,r5,r6
   49f14:	defffe04 	addi	sp,sp,-8
   49f18:	dfc00115 	stw	ra,4(sp)
   49f1c:	dc000015 	stw	r16,0(sp)
   49f20:	00463180 	call	46318 <_malloc_r>
   49f24:	10002926 	beq	r2,zero,49fcc <_calloc_r+0xbc>
   49f28:	11bfff17 	ldw	r6,-4(r2)
   49f2c:	1021883a 	mov	r16,r2
   49f30:	00bfff04 	movi	r2,-4
   49f34:	308c703a 	and	r6,r6,r2
   49f38:	00c00904 	movi	r3,36
   49f3c:	308d883a 	add	r6,r6,r2
   49f40:	19801636 	bltu	r3,r6,49f9c <_calloc_r+0x8c>
   49f44:	008004c4 	movi	r2,19
   49f48:	11800b2e 	bgeu	r2,r6,49f78 <_calloc_r+0x68>
   49f4c:	80000015 	stw	zero,0(r16)
   49f50:	80000115 	stw	zero,4(r16)
   49f54:	008006c4 	movi	r2,27
   49f58:	11801a2e 	bgeu	r2,r6,49fc4 <_calloc_r+0xb4>
   49f5c:	80000215 	stw	zero,8(r16)
   49f60:	80000315 	stw	zero,12(r16)
   49f64:	30c0151e 	bne	r6,r3,49fbc <_calloc_r+0xac>
   49f68:	80000415 	stw	zero,16(r16)
   49f6c:	80800604 	addi	r2,r16,24
   49f70:	80000515 	stw	zero,20(r16)
   49f74:	00000106 	br	49f7c <_calloc_r+0x6c>
   49f78:	8005883a 	mov	r2,r16
   49f7c:	10000015 	stw	zero,0(r2)
   49f80:	10000115 	stw	zero,4(r2)
   49f84:	10000215 	stw	zero,8(r2)
   49f88:	8005883a 	mov	r2,r16
   49f8c:	dfc00117 	ldw	ra,4(sp)
   49f90:	dc000017 	ldw	r16,0(sp)
   49f94:	dec00204 	addi	sp,sp,8
   49f98:	f800283a 	ret
   49f9c:	000b883a 	mov	r5,zero
   49fa0:	8009883a 	mov	r4,r16
   49fa4:	0046eac0 	call	46eac <memset>
   49fa8:	8005883a 	mov	r2,r16
   49fac:	dfc00117 	ldw	ra,4(sp)
   49fb0:	dc000017 	ldw	r16,0(sp)
   49fb4:	dec00204 	addi	sp,sp,8
   49fb8:	f800283a 	ret
   49fbc:	80800404 	addi	r2,r16,16
   49fc0:	003fee06 	br	49f7c <__alt_data_end+0xfffe2e7c>
   49fc4:	80800204 	addi	r2,r16,8
   49fc8:	003fec06 	br	49f7c <__alt_data_end+0xfffe2e7c>
   49fcc:	0005883a 	mov	r2,zero
   49fd0:	003fee06 	br	49f8c <__alt_data_end+0xfffe2e8c>

00049fd4 <_fclose_r>:
   49fd4:	28003926 	beq	r5,zero,4a0bc <_fclose_r+0xe8>
   49fd8:	defffc04 	addi	sp,sp,-16
   49fdc:	dc400115 	stw	r17,4(sp)
   49fe0:	dc000015 	stw	r16,0(sp)
   49fe4:	dfc00315 	stw	ra,12(sp)
   49fe8:	dc800215 	stw	r18,8(sp)
   49fec:	2023883a 	mov	r17,r4
   49ff0:	2821883a 	mov	r16,r5
   49ff4:	20000226 	beq	r4,zero,4a000 <_fclose_r+0x2c>
   49ff8:	20800e17 	ldw	r2,56(r4)
   49ffc:	10002726 	beq	r2,zero,4a09c <_fclose_r+0xc8>
   4a000:	8080030f 	ldh	r2,12(r16)
   4a004:	1000071e 	bne	r2,zero,4a024 <_fclose_r+0x50>
   4a008:	0005883a 	mov	r2,zero
   4a00c:	dfc00317 	ldw	ra,12(sp)
   4a010:	dc800217 	ldw	r18,8(sp)
   4a014:	dc400117 	ldw	r17,4(sp)
   4a018:	dc000017 	ldw	r16,0(sp)
   4a01c:	dec00404 	addi	sp,sp,16
   4a020:	f800283a 	ret
   4a024:	800b883a 	mov	r5,r16
   4a028:	8809883a 	mov	r4,r17
   4a02c:	0044fc00 	call	44fc0 <__sflush_r>
   4a030:	1025883a 	mov	r18,r2
   4a034:	80800b17 	ldw	r2,44(r16)
   4a038:	10000426 	beq	r2,zero,4a04c <_fclose_r+0x78>
   4a03c:	81400717 	ldw	r5,28(r16)
   4a040:	8809883a 	mov	r4,r17
   4a044:	103ee83a 	callr	r2
   4a048:	10001616 	blt	r2,zero,4a0a4 <_fclose_r+0xd0>
   4a04c:	8080030b 	ldhu	r2,12(r16)
   4a050:	1080200c 	andi	r2,r2,128
   4a054:	1000151e 	bne	r2,zero,4a0ac <_fclose_r+0xd8>
   4a058:	81400c17 	ldw	r5,48(r16)
   4a05c:	28000526 	beq	r5,zero,4a074 <_fclose_r+0xa0>
   4a060:	80801004 	addi	r2,r16,64
   4a064:	28800226 	beq	r5,r2,4a070 <_fclose_r+0x9c>
   4a068:	8809883a 	mov	r4,r17
   4a06c:	004572c0 	call	4572c <_free_r>
   4a070:	80000c15 	stw	zero,48(r16)
   4a074:	81401117 	ldw	r5,68(r16)
   4a078:	28000326 	beq	r5,zero,4a088 <_fclose_r+0xb4>
   4a07c:	8809883a 	mov	r4,r17
   4a080:	004572c0 	call	4572c <_free_r>
   4a084:	80001115 	stw	zero,68(r16)
   4a088:	00455c80 	call	455c8 <__sfp_lock_acquire>
   4a08c:	8000030d 	sth	zero,12(r16)
   4a090:	00455cc0 	call	455cc <__sfp_lock_release>
   4a094:	9005883a 	mov	r2,r18
   4a098:	003fdc06 	br	4a00c <__alt_data_end+0xfffe2f0c>
   4a09c:	00455b80 	call	455b8 <__sinit>
   4a0a0:	003fd706 	br	4a000 <__alt_data_end+0xfffe2f00>
   4a0a4:	04bfffc4 	movi	r18,-1
   4a0a8:	003fe806 	br	4a04c <__alt_data_end+0xfffe2f4c>
   4a0ac:	81400417 	ldw	r5,16(r16)
   4a0b0:	8809883a 	mov	r4,r17
   4a0b4:	004572c0 	call	4572c <_free_r>
   4a0b8:	003fe706 	br	4a058 <__alt_data_end+0xfffe2f58>
   4a0bc:	0005883a 	mov	r2,zero
   4a0c0:	f800283a 	ret

0004a0c4 <fclose>:
   4a0c4:	00800174 	movhi	r2,5
   4a0c8:	10855e04 	addi	r2,r2,5496
   4a0cc:	200b883a 	mov	r5,r4
   4a0d0:	11000017 	ldw	r4,0(r2)
   4a0d4:	0049fd41 	jmpi	49fd4 <_fclose_r>

0004a0d8 <__fputwc>:
   4a0d8:	defff804 	addi	sp,sp,-32
   4a0dc:	dcc00415 	stw	r19,16(sp)
   4a0e0:	dc800315 	stw	r18,12(sp)
   4a0e4:	dc000115 	stw	r16,4(sp)
   4a0e8:	dfc00715 	stw	ra,28(sp)
   4a0ec:	dd400615 	stw	r21,24(sp)
   4a0f0:	dd000515 	stw	r20,20(sp)
   4a0f4:	dc400215 	stw	r17,8(sp)
   4a0f8:	2027883a 	mov	r19,r4
   4a0fc:	2825883a 	mov	r18,r5
   4a100:	3021883a 	mov	r16,r6
   4a104:	00461080 	call	46108 <__locale_mb_cur_max>
   4a108:	00c00044 	movi	r3,1
   4a10c:	10c03e26 	beq	r2,r3,4a208 <__fputwc+0x130>
   4a110:	81c01704 	addi	r7,r16,92
   4a114:	900d883a 	mov	r6,r18
   4a118:	d80b883a 	mov	r5,sp
   4a11c:	9809883a 	mov	r4,r19
   4a120:	004a5a80 	call	4a5a8 <_wcrtomb_r>
   4a124:	1029883a 	mov	r20,r2
   4a128:	00bfffc4 	movi	r2,-1
   4a12c:	a0802026 	beq	r20,r2,4a1b0 <__fputwc+0xd8>
   4a130:	d9400003 	ldbu	r5,0(sp)
   4a134:	a0001c26 	beq	r20,zero,4a1a8 <__fputwc+0xd0>
   4a138:	0023883a 	mov	r17,zero
   4a13c:	05400284 	movi	r21,10
   4a140:	00000906 	br	4a168 <__fputwc+0x90>
   4a144:	80800017 	ldw	r2,0(r16)
   4a148:	11400005 	stb	r5,0(r2)
   4a14c:	80c00017 	ldw	r3,0(r16)
   4a150:	18c00044 	addi	r3,r3,1
   4a154:	80c00015 	stw	r3,0(r16)
   4a158:	8c400044 	addi	r17,r17,1
   4a15c:	dc45883a 	add	r2,sp,r17
   4a160:	8d00112e 	bgeu	r17,r20,4a1a8 <__fputwc+0xd0>
   4a164:	11400003 	ldbu	r5,0(r2)
   4a168:	80c00217 	ldw	r3,8(r16)
   4a16c:	18ffffc4 	addi	r3,r3,-1
   4a170:	80c00215 	stw	r3,8(r16)
   4a174:	183ff30e 	bge	r3,zero,4a144 <__alt_data_end+0xfffe3044>
   4a178:	80800617 	ldw	r2,24(r16)
   4a17c:	18801916 	blt	r3,r2,4a1e4 <__fputwc+0x10c>
   4a180:	80800017 	ldw	r2,0(r16)
   4a184:	11400005 	stb	r5,0(r2)
   4a188:	80800017 	ldw	r2,0(r16)
   4a18c:	10c00003 	ldbu	r3,0(r2)
   4a190:	10800044 	addi	r2,r2,1
   4a194:	1d402326 	beq	r3,r21,4a224 <__fputwc+0x14c>
   4a198:	80800015 	stw	r2,0(r16)
   4a19c:	8c400044 	addi	r17,r17,1
   4a1a0:	dc45883a 	add	r2,sp,r17
   4a1a4:	8d3fef36 	bltu	r17,r20,4a164 <__alt_data_end+0xfffe3064>
   4a1a8:	9005883a 	mov	r2,r18
   4a1ac:	00000406 	br	4a1c0 <__fputwc+0xe8>
   4a1b0:	80c0030b 	ldhu	r3,12(r16)
   4a1b4:	a005883a 	mov	r2,r20
   4a1b8:	18c01014 	ori	r3,r3,64
   4a1bc:	80c0030d 	sth	r3,12(r16)
   4a1c0:	dfc00717 	ldw	ra,28(sp)
   4a1c4:	dd400617 	ldw	r21,24(sp)
   4a1c8:	dd000517 	ldw	r20,20(sp)
   4a1cc:	dcc00417 	ldw	r19,16(sp)
   4a1d0:	dc800317 	ldw	r18,12(sp)
   4a1d4:	dc400217 	ldw	r17,8(sp)
   4a1d8:	dc000117 	ldw	r16,4(sp)
   4a1dc:	dec00804 	addi	sp,sp,32
   4a1e0:	f800283a 	ret
   4a1e4:	800d883a 	mov	r6,r16
   4a1e8:	29403fcc 	andi	r5,r5,255
   4a1ec:	9809883a 	mov	r4,r19
   4a1f0:	004a4500 	call	4a450 <__swbuf_r>
   4a1f4:	10bfffe0 	cmpeqi	r2,r2,-1
   4a1f8:	10803fcc 	andi	r2,r2,255
   4a1fc:	103fd626 	beq	r2,zero,4a158 <__alt_data_end+0xfffe3058>
   4a200:	00bfffc4 	movi	r2,-1
   4a204:	003fee06 	br	4a1c0 <__alt_data_end+0xfffe30c0>
   4a208:	90ffffc4 	addi	r3,r18,-1
   4a20c:	01003f84 	movi	r4,254
   4a210:	20ffbf36 	bltu	r4,r3,4a110 <__alt_data_end+0xfffe3010>
   4a214:	900b883a 	mov	r5,r18
   4a218:	dc800005 	stb	r18,0(sp)
   4a21c:	1029883a 	mov	r20,r2
   4a220:	003fc506 	br	4a138 <__alt_data_end+0xfffe3038>
   4a224:	800d883a 	mov	r6,r16
   4a228:	a80b883a 	mov	r5,r21
   4a22c:	9809883a 	mov	r4,r19
   4a230:	004a4500 	call	4a450 <__swbuf_r>
   4a234:	10bfffe0 	cmpeqi	r2,r2,-1
   4a238:	003fef06 	br	4a1f8 <__alt_data_end+0xfffe30f8>

0004a23c <_fputwc_r>:
   4a23c:	3080030b 	ldhu	r2,12(r6)
   4a240:	10c8000c 	andi	r3,r2,8192
   4a244:	1800051e 	bne	r3,zero,4a25c <_fputwc_r+0x20>
   4a248:	30c01917 	ldw	r3,100(r6)
   4a24c:	10880014 	ori	r2,r2,8192
   4a250:	3080030d 	sth	r2,12(r6)
   4a254:	18880014 	ori	r2,r3,8192
   4a258:	30801915 	stw	r2,100(r6)
   4a25c:	004a0d81 	jmpi	4a0d8 <__fputwc>

0004a260 <fputwc>:
   4a260:	00800174 	movhi	r2,5
   4a264:	defffc04 	addi	sp,sp,-16
   4a268:	10855e04 	addi	r2,r2,5496
   4a26c:	dc000115 	stw	r16,4(sp)
   4a270:	14000017 	ldw	r16,0(r2)
   4a274:	dc400215 	stw	r17,8(sp)
   4a278:	dfc00315 	stw	ra,12(sp)
   4a27c:	2023883a 	mov	r17,r4
   4a280:	80000226 	beq	r16,zero,4a28c <fputwc+0x2c>
   4a284:	80800e17 	ldw	r2,56(r16)
   4a288:	10001026 	beq	r2,zero,4a2cc <fputwc+0x6c>
   4a28c:	2880030b 	ldhu	r2,12(r5)
   4a290:	10c8000c 	andi	r3,r2,8192
   4a294:	1800051e 	bne	r3,zero,4a2ac <fputwc+0x4c>
   4a298:	28c01917 	ldw	r3,100(r5)
   4a29c:	10880014 	ori	r2,r2,8192
   4a2a0:	2880030d 	sth	r2,12(r5)
   4a2a4:	18880014 	ori	r2,r3,8192
   4a2a8:	28801915 	stw	r2,100(r5)
   4a2ac:	280d883a 	mov	r6,r5
   4a2b0:	8009883a 	mov	r4,r16
   4a2b4:	880b883a 	mov	r5,r17
   4a2b8:	dfc00317 	ldw	ra,12(sp)
   4a2bc:	dc400217 	ldw	r17,8(sp)
   4a2c0:	dc000117 	ldw	r16,4(sp)
   4a2c4:	dec00404 	addi	sp,sp,16
   4a2c8:	004a0d81 	jmpi	4a0d8 <__fputwc>
   4a2cc:	8009883a 	mov	r4,r16
   4a2d0:	d9400015 	stw	r5,0(sp)
   4a2d4:	00455b80 	call	455b8 <__sinit>
   4a2d8:	d9400017 	ldw	r5,0(sp)
   4a2dc:	003feb06 	br	4a28c <__alt_data_end+0xfffe318c>

0004a2e0 <_fstat_r>:
   4a2e0:	defffd04 	addi	sp,sp,-12
   4a2e4:	2805883a 	mov	r2,r5
   4a2e8:	dc000015 	stw	r16,0(sp)
   4a2ec:	04000174 	movhi	r16,5
   4a2f0:	dc400115 	stw	r17,4(sp)
   4a2f4:	840c2e04 	addi	r16,r16,12472
   4a2f8:	2023883a 	mov	r17,r4
   4a2fc:	300b883a 	mov	r5,r6
   4a300:	1009883a 	mov	r4,r2
   4a304:	dfc00215 	stw	ra,8(sp)
   4a308:	80000015 	stw	zero,0(r16)
   4a30c:	004d0d00 	call	4d0d0 <fstat>
   4a310:	00ffffc4 	movi	r3,-1
   4a314:	10c00526 	beq	r2,r3,4a32c <_fstat_r+0x4c>
   4a318:	dfc00217 	ldw	ra,8(sp)
   4a31c:	dc400117 	ldw	r17,4(sp)
   4a320:	dc000017 	ldw	r16,0(sp)
   4a324:	dec00304 	addi	sp,sp,12
   4a328:	f800283a 	ret
   4a32c:	80c00017 	ldw	r3,0(r16)
   4a330:	183ff926 	beq	r3,zero,4a318 <__alt_data_end+0xfffe3218>
   4a334:	88c00015 	stw	r3,0(r17)
   4a338:	003ff706 	br	4a318 <__alt_data_end+0xfffe3218>

0004a33c <_isatty_r>:
   4a33c:	defffd04 	addi	sp,sp,-12
   4a340:	dc000015 	stw	r16,0(sp)
   4a344:	04000174 	movhi	r16,5
   4a348:	dc400115 	stw	r17,4(sp)
   4a34c:	840c2e04 	addi	r16,r16,12472
   4a350:	2023883a 	mov	r17,r4
   4a354:	2809883a 	mov	r4,r5
   4a358:	dfc00215 	stw	ra,8(sp)
   4a35c:	80000015 	stw	zero,0(r16)
   4a360:	004d1bc0 	call	4d1bc <isatty>
   4a364:	00ffffc4 	movi	r3,-1
   4a368:	10c00526 	beq	r2,r3,4a380 <_isatty_r+0x44>
   4a36c:	dfc00217 	ldw	ra,8(sp)
   4a370:	dc400117 	ldw	r17,4(sp)
   4a374:	dc000017 	ldw	r16,0(sp)
   4a378:	dec00304 	addi	sp,sp,12
   4a37c:	f800283a 	ret
   4a380:	80c00017 	ldw	r3,0(r16)
   4a384:	183ff926 	beq	r3,zero,4a36c <__alt_data_end+0xfffe326c>
   4a388:	88c00015 	stw	r3,0(r17)
   4a38c:	003ff706 	br	4a36c <__alt_data_end+0xfffe326c>

0004a390 <_lseek_r>:
   4a390:	defffd04 	addi	sp,sp,-12
   4a394:	2805883a 	mov	r2,r5
   4a398:	dc000015 	stw	r16,0(sp)
   4a39c:	04000174 	movhi	r16,5
   4a3a0:	dc400115 	stw	r17,4(sp)
   4a3a4:	300b883a 	mov	r5,r6
   4a3a8:	840c2e04 	addi	r16,r16,12472
   4a3ac:	2023883a 	mov	r17,r4
   4a3b0:	380d883a 	mov	r6,r7
   4a3b4:	1009883a 	mov	r4,r2
   4a3b8:	dfc00215 	stw	ra,8(sp)
   4a3bc:	80000015 	stw	zero,0(r16)
   4a3c0:	004d3880 	call	4d388 <lseek>
   4a3c4:	00ffffc4 	movi	r3,-1
   4a3c8:	10c00526 	beq	r2,r3,4a3e0 <_lseek_r+0x50>
   4a3cc:	dfc00217 	ldw	ra,8(sp)
   4a3d0:	dc400117 	ldw	r17,4(sp)
   4a3d4:	dc000017 	ldw	r16,0(sp)
   4a3d8:	dec00304 	addi	sp,sp,12
   4a3dc:	f800283a 	ret
   4a3e0:	80c00017 	ldw	r3,0(r16)
   4a3e4:	183ff926 	beq	r3,zero,4a3cc <__alt_data_end+0xfffe32cc>
   4a3e8:	88c00015 	stw	r3,0(r17)
   4a3ec:	003ff706 	br	4a3cc <__alt_data_end+0xfffe32cc>

0004a3f0 <_read_r>:
   4a3f0:	defffd04 	addi	sp,sp,-12
   4a3f4:	2805883a 	mov	r2,r5
   4a3f8:	dc000015 	stw	r16,0(sp)
   4a3fc:	04000174 	movhi	r16,5
   4a400:	dc400115 	stw	r17,4(sp)
   4a404:	300b883a 	mov	r5,r6
   4a408:	840c2e04 	addi	r16,r16,12472
   4a40c:	2023883a 	mov	r17,r4
   4a410:	380d883a 	mov	r6,r7
   4a414:	1009883a 	mov	r4,r2
   4a418:	dfc00215 	stw	ra,8(sp)
   4a41c:	80000015 	stw	zero,0(r16)
   4a420:	004d55c0 	call	4d55c <read>
   4a424:	00ffffc4 	movi	r3,-1
   4a428:	10c00526 	beq	r2,r3,4a440 <_read_r+0x50>
   4a42c:	dfc00217 	ldw	ra,8(sp)
   4a430:	dc400117 	ldw	r17,4(sp)
   4a434:	dc000017 	ldw	r16,0(sp)
   4a438:	dec00304 	addi	sp,sp,12
   4a43c:	f800283a 	ret
   4a440:	80c00017 	ldw	r3,0(r16)
   4a444:	183ff926 	beq	r3,zero,4a42c <__alt_data_end+0xfffe332c>
   4a448:	88c00015 	stw	r3,0(r17)
   4a44c:	003ff706 	br	4a42c <__alt_data_end+0xfffe332c>

0004a450 <__swbuf_r>:
   4a450:	defffb04 	addi	sp,sp,-20
   4a454:	dcc00315 	stw	r19,12(sp)
   4a458:	dc800215 	stw	r18,8(sp)
   4a45c:	dc000015 	stw	r16,0(sp)
   4a460:	dfc00415 	stw	ra,16(sp)
   4a464:	dc400115 	stw	r17,4(sp)
   4a468:	2025883a 	mov	r18,r4
   4a46c:	2827883a 	mov	r19,r5
   4a470:	3021883a 	mov	r16,r6
   4a474:	20000226 	beq	r4,zero,4a480 <__swbuf_r+0x30>
   4a478:	20800e17 	ldw	r2,56(r4)
   4a47c:	10004226 	beq	r2,zero,4a588 <__swbuf_r+0x138>
   4a480:	80800617 	ldw	r2,24(r16)
   4a484:	8100030b 	ldhu	r4,12(r16)
   4a488:	80800215 	stw	r2,8(r16)
   4a48c:	2080020c 	andi	r2,r4,8
   4a490:	10003626 	beq	r2,zero,4a56c <__swbuf_r+0x11c>
   4a494:	80c00417 	ldw	r3,16(r16)
   4a498:	18003426 	beq	r3,zero,4a56c <__swbuf_r+0x11c>
   4a49c:	2088000c 	andi	r2,r4,8192
   4a4a0:	9c403fcc 	andi	r17,r19,255
   4a4a4:	10001a26 	beq	r2,zero,4a510 <__swbuf_r+0xc0>
   4a4a8:	80800017 	ldw	r2,0(r16)
   4a4ac:	81000517 	ldw	r4,20(r16)
   4a4b0:	10c7c83a 	sub	r3,r2,r3
   4a4b4:	1900200e 	bge	r3,r4,4a538 <__swbuf_r+0xe8>
   4a4b8:	18c00044 	addi	r3,r3,1
   4a4bc:	81000217 	ldw	r4,8(r16)
   4a4c0:	11400044 	addi	r5,r2,1
   4a4c4:	81400015 	stw	r5,0(r16)
   4a4c8:	213fffc4 	addi	r4,r4,-1
   4a4cc:	81000215 	stw	r4,8(r16)
   4a4d0:	14c00005 	stb	r19,0(r2)
   4a4d4:	80800517 	ldw	r2,20(r16)
   4a4d8:	10c01e26 	beq	r2,r3,4a554 <__swbuf_r+0x104>
   4a4dc:	8080030b 	ldhu	r2,12(r16)
   4a4e0:	1080004c 	andi	r2,r2,1
   4a4e4:	10000226 	beq	r2,zero,4a4f0 <__swbuf_r+0xa0>
   4a4e8:	00800284 	movi	r2,10
   4a4ec:	88801926 	beq	r17,r2,4a554 <__swbuf_r+0x104>
   4a4f0:	8805883a 	mov	r2,r17
   4a4f4:	dfc00417 	ldw	ra,16(sp)
   4a4f8:	dcc00317 	ldw	r19,12(sp)
   4a4fc:	dc800217 	ldw	r18,8(sp)
   4a500:	dc400117 	ldw	r17,4(sp)
   4a504:	dc000017 	ldw	r16,0(sp)
   4a508:	dec00504 	addi	sp,sp,20
   4a50c:	f800283a 	ret
   4a510:	81401917 	ldw	r5,100(r16)
   4a514:	00b7ffc4 	movi	r2,-8193
   4a518:	21080014 	ori	r4,r4,8192
   4a51c:	2884703a 	and	r2,r5,r2
   4a520:	80801915 	stw	r2,100(r16)
   4a524:	80800017 	ldw	r2,0(r16)
   4a528:	8100030d 	sth	r4,12(r16)
   4a52c:	81000517 	ldw	r4,20(r16)
   4a530:	10c7c83a 	sub	r3,r2,r3
   4a534:	193fe016 	blt	r3,r4,4a4b8 <__alt_data_end+0xfffe33b8>
   4a538:	800b883a 	mov	r5,r16
   4a53c:	9009883a 	mov	r4,r18
   4a540:	00451dc0 	call	451dc <_fflush_r>
   4a544:	1000071e 	bne	r2,zero,4a564 <__swbuf_r+0x114>
   4a548:	80800017 	ldw	r2,0(r16)
   4a54c:	00c00044 	movi	r3,1
   4a550:	003fda06 	br	4a4bc <__alt_data_end+0xfffe33bc>
   4a554:	800b883a 	mov	r5,r16
   4a558:	9009883a 	mov	r4,r18
   4a55c:	00451dc0 	call	451dc <_fflush_r>
   4a560:	103fe326 	beq	r2,zero,4a4f0 <__alt_data_end+0xfffe33f0>
   4a564:	00bfffc4 	movi	r2,-1
   4a568:	003fe206 	br	4a4f4 <__alt_data_end+0xfffe33f4>
   4a56c:	800b883a 	mov	r5,r16
   4a570:	9009883a 	mov	r4,r18
   4a574:	00435e40 	call	435e4 <__swsetup_r>
   4a578:	103ffa1e 	bne	r2,zero,4a564 <__alt_data_end+0xfffe3464>
   4a57c:	8100030b 	ldhu	r4,12(r16)
   4a580:	80c00417 	ldw	r3,16(r16)
   4a584:	003fc506 	br	4a49c <__alt_data_end+0xfffe339c>
   4a588:	00455b80 	call	455b8 <__sinit>
   4a58c:	003fbc06 	br	4a480 <__alt_data_end+0xfffe3380>

0004a590 <__swbuf>:
   4a590:	00800174 	movhi	r2,5
   4a594:	10855e04 	addi	r2,r2,5496
   4a598:	280d883a 	mov	r6,r5
   4a59c:	200b883a 	mov	r5,r4
   4a5a0:	11000017 	ldw	r4,0(r2)
   4a5a4:	004a4501 	jmpi	4a450 <__swbuf_r>

0004a5a8 <_wcrtomb_r>:
   4a5a8:	defff604 	addi	sp,sp,-40
   4a5ac:	00800174 	movhi	r2,5
   4a5b0:	dc800815 	stw	r18,32(sp)
   4a5b4:	dc400715 	stw	r17,28(sp)
   4a5b8:	dc000615 	stw	r16,24(sp)
   4a5bc:	10856204 	addi	r2,r2,5512
   4a5c0:	dfc00915 	stw	ra,36(sp)
   4a5c4:	2021883a 	mov	r16,r4
   4a5c8:	3823883a 	mov	r17,r7
   4a5cc:	14800017 	ldw	r18,0(r2)
   4a5d0:	28001426 	beq	r5,zero,4a624 <_wcrtomb_r+0x7c>
   4a5d4:	d9400415 	stw	r5,16(sp)
   4a5d8:	d9800515 	stw	r6,20(sp)
   4a5dc:	00460fc0 	call	460fc <__locale_charset>
   4a5e0:	d9800517 	ldw	r6,20(sp)
   4a5e4:	d9400417 	ldw	r5,16(sp)
   4a5e8:	100f883a 	mov	r7,r2
   4a5ec:	dc400015 	stw	r17,0(sp)
   4a5f0:	8009883a 	mov	r4,r16
   4a5f4:	903ee83a 	callr	r18
   4a5f8:	00ffffc4 	movi	r3,-1
   4a5fc:	10c0031e 	bne	r2,r3,4a60c <_wcrtomb_r+0x64>
   4a600:	88000015 	stw	zero,0(r17)
   4a604:	00c02284 	movi	r3,138
   4a608:	80c00015 	stw	r3,0(r16)
   4a60c:	dfc00917 	ldw	ra,36(sp)
   4a610:	dc800817 	ldw	r18,32(sp)
   4a614:	dc400717 	ldw	r17,28(sp)
   4a618:	dc000617 	ldw	r16,24(sp)
   4a61c:	dec00a04 	addi	sp,sp,40
   4a620:	f800283a 	ret
   4a624:	00460fc0 	call	460fc <__locale_charset>
   4a628:	100f883a 	mov	r7,r2
   4a62c:	dc400015 	stw	r17,0(sp)
   4a630:	000d883a 	mov	r6,zero
   4a634:	d9400104 	addi	r5,sp,4
   4a638:	8009883a 	mov	r4,r16
   4a63c:	903ee83a 	callr	r18
   4a640:	003fed06 	br	4a5f8 <__alt_data_end+0xfffe34f8>

0004a644 <wcrtomb>:
   4a644:	defff604 	addi	sp,sp,-40
   4a648:	00800174 	movhi	r2,5
   4a64c:	dc800615 	stw	r18,24(sp)
   4a650:	dc400515 	stw	r17,20(sp)
   4a654:	10855e04 	addi	r2,r2,5496
   4a658:	dfc00915 	stw	ra,36(sp)
   4a65c:	dd000815 	stw	r20,32(sp)
   4a660:	dcc00715 	stw	r19,28(sp)
   4a664:	dc000415 	stw	r16,16(sp)
   4a668:	3025883a 	mov	r18,r6
   4a66c:	14400017 	ldw	r17,0(r2)
   4a670:	20001926 	beq	r4,zero,4a6d8 <wcrtomb+0x94>
   4a674:	00800174 	movhi	r2,5
   4a678:	10856204 	addi	r2,r2,5512
   4a67c:	15000017 	ldw	r20,0(r2)
   4a680:	2021883a 	mov	r16,r4
   4a684:	2827883a 	mov	r19,r5
   4a688:	00460fc0 	call	460fc <__locale_charset>
   4a68c:	100f883a 	mov	r7,r2
   4a690:	dc800015 	stw	r18,0(sp)
   4a694:	980d883a 	mov	r6,r19
   4a698:	800b883a 	mov	r5,r16
   4a69c:	8809883a 	mov	r4,r17
   4a6a0:	a03ee83a 	callr	r20
   4a6a4:	00ffffc4 	movi	r3,-1
   4a6a8:	10c0031e 	bne	r2,r3,4a6b8 <wcrtomb+0x74>
   4a6ac:	90000015 	stw	zero,0(r18)
   4a6b0:	00c02284 	movi	r3,138
   4a6b4:	88c00015 	stw	r3,0(r17)
   4a6b8:	dfc00917 	ldw	ra,36(sp)
   4a6bc:	dd000817 	ldw	r20,32(sp)
   4a6c0:	dcc00717 	ldw	r19,28(sp)
   4a6c4:	dc800617 	ldw	r18,24(sp)
   4a6c8:	dc400517 	ldw	r17,20(sp)
   4a6cc:	dc000417 	ldw	r16,16(sp)
   4a6d0:	dec00a04 	addi	sp,sp,40
   4a6d4:	f800283a 	ret
   4a6d8:	00800174 	movhi	r2,5
   4a6dc:	10856204 	addi	r2,r2,5512
   4a6e0:	14000017 	ldw	r16,0(r2)
   4a6e4:	00460fc0 	call	460fc <__locale_charset>
   4a6e8:	100f883a 	mov	r7,r2
   4a6ec:	dc800015 	stw	r18,0(sp)
   4a6f0:	000d883a 	mov	r6,zero
   4a6f4:	d9400104 	addi	r5,sp,4
   4a6f8:	8809883a 	mov	r4,r17
   4a6fc:	803ee83a 	callr	r16
   4a700:	003fe806 	br	4a6a4 <__alt_data_end+0xfffe35a4>

0004a704 <__ascii_wctomb>:
   4a704:	28000526 	beq	r5,zero,4a71c <__ascii_wctomb+0x18>
   4a708:	00803fc4 	movi	r2,255
   4a70c:	11800536 	bltu	r2,r6,4a724 <__ascii_wctomb+0x20>
   4a710:	29800005 	stb	r6,0(r5)
   4a714:	00800044 	movi	r2,1
   4a718:	f800283a 	ret
   4a71c:	0005883a 	mov	r2,zero
   4a720:	f800283a 	ret
   4a724:	00802284 	movi	r2,138
   4a728:	20800015 	stw	r2,0(r4)
   4a72c:	00bfffc4 	movi	r2,-1
   4a730:	f800283a 	ret

0004a734 <_wctomb_r>:
   4a734:	00800174 	movhi	r2,5
   4a738:	defff904 	addi	sp,sp,-28
   4a73c:	10856204 	addi	r2,r2,5512
   4a740:	dfc00615 	stw	ra,24(sp)
   4a744:	dc400515 	stw	r17,20(sp)
   4a748:	dc000415 	stw	r16,16(sp)
   4a74c:	3823883a 	mov	r17,r7
   4a750:	14000017 	ldw	r16,0(r2)
   4a754:	d9000115 	stw	r4,4(sp)
   4a758:	d9400215 	stw	r5,8(sp)
   4a75c:	d9800315 	stw	r6,12(sp)
   4a760:	00460fc0 	call	460fc <__locale_charset>
   4a764:	d9800317 	ldw	r6,12(sp)
   4a768:	d9400217 	ldw	r5,8(sp)
   4a76c:	d9000117 	ldw	r4,4(sp)
   4a770:	100f883a 	mov	r7,r2
   4a774:	dc400015 	stw	r17,0(sp)
   4a778:	803ee83a 	callr	r16
   4a77c:	dfc00617 	ldw	ra,24(sp)
   4a780:	dc400517 	ldw	r17,20(sp)
   4a784:	dc000417 	ldw	r16,16(sp)
   4a788:	dec00704 	addi	sp,sp,28
   4a78c:	f800283a 	ret

0004a790 <__udivdi3>:
   4a790:	defff504 	addi	sp,sp,-44
   4a794:	dcc00415 	stw	r19,16(sp)
   4a798:	dc000115 	stw	r16,4(sp)
   4a79c:	dfc00a15 	stw	ra,40(sp)
   4a7a0:	df000915 	stw	fp,36(sp)
   4a7a4:	ddc00815 	stw	r23,32(sp)
   4a7a8:	dd800715 	stw	r22,28(sp)
   4a7ac:	dd400615 	stw	r21,24(sp)
   4a7b0:	dd000515 	stw	r20,20(sp)
   4a7b4:	dc800315 	stw	r18,12(sp)
   4a7b8:	dc400215 	stw	r17,8(sp)
   4a7bc:	2027883a 	mov	r19,r4
   4a7c0:	2821883a 	mov	r16,r5
   4a7c4:	3800411e 	bne	r7,zero,4a8cc <__udivdi3+0x13c>
   4a7c8:	3023883a 	mov	r17,r6
   4a7cc:	2025883a 	mov	r18,r4
   4a7d0:	2980522e 	bgeu	r5,r6,4a91c <__udivdi3+0x18c>
   4a7d4:	00bfffd4 	movui	r2,65535
   4a7d8:	282d883a 	mov	r22,r5
   4a7dc:	1180a836 	bltu	r2,r6,4aa80 <__udivdi3+0x2f0>
   4a7e0:	00803fc4 	movi	r2,255
   4a7e4:	1185803a 	cmpltu	r2,r2,r6
   4a7e8:	100490fa 	slli	r2,r2,3
   4a7ec:	3086d83a 	srl	r3,r6,r2
   4a7f0:	01000174 	movhi	r4,5
   4a7f4:	213df384 	addi	r4,r4,-2098
   4a7f8:	20c7883a 	add	r3,r4,r3
   4a7fc:	18c00003 	ldbu	r3,0(r3)
   4a800:	1885883a 	add	r2,r3,r2
   4a804:	00c00804 	movi	r3,32
   4a808:	1887c83a 	sub	r3,r3,r2
   4a80c:	18000526 	beq	r3,zero,4a824 <__udivdi3+0x94>
   4a810:	80e0983a 	sll	r16,r16,r3
   4a814:	9884d83a 	srl	r2,r19,r2
   4a818:	30e2983a 	sll	r17,r6,r3
   4a81c:	98e4983a 	sll	r18,r19,r3
   4a820:	142cb03a 	or	r22,r2,r16
   4a824:	882ad43a 	srli	r21,r17,16
   4a828:	b009883a 	mov	r4,r22
   4a82c:	8d3fffcc 	andi	r20,r17,65535
   4a830:	a80b883a 	mov	r5,r21
   4a834:	00410e40 	call	410e4 <__umodsi3>
   4a838:	b009883a 	mov	r4,r22
   4a83c:	a80b883a 	mov	r5,r21
   4a840:	1027883a 	mov	r19,r2
   4a844:	00410800 	call	41080 <__udivsi3>
   4a848:	102d883a 	mov	r22,r2
   4a84c:	9826943a 	slli	r19,r19,16
   4a850:	9004d43a 	srli	r2,r18,16
   4a854:	a5a1383a 	mul	r16,r20,r22
   4a858:	14c4b03a 	or	r2,r2,r19
   4a85c:	1400052e 	bgeu	r2,r16,4a874 <__udivdi3+0xe4>
   4a860:	1445883a 	add	r2,r2,r17
   4a864:	b0ffffc4 	addi	r3,r22,-1
   4a868:	14400136 	bltu	r2,r17,4a870 <__udivdi3+0xe0>
   4a86c:	14012336 	bltu	r2,r16,4acfc <__udivdi3+0x56c>
   4a870:	182d883a 	mov	r22,r3
   4a874:	1421c83a 	sub	r16,r2,r16
   4a878:	a80b883a 	mov	r5,r21
   4a87c:	8009883a 	mov	r4,r16
   4a880:	00410e40 	call	410e4 <__umodsi3>
   4a884:	1027883a 	mov	r19,r2
   4a888:	a80b883a 	mov	r5,r21
   4a88c:	8009883a 	mov	r4,r16
   4a890:	00410800 	call	41080 <__udivsi3>
   4a894:	9826943a 	slli	r19,r19,16
   4a898:	a0a9383a 	mul	r20,r20,r2
   4a89c:	94bfffcc 	andi	r18,r18,65535
   4a8a0:	94e4b03a 	or	r18,r18,r19
   4a8a4:	9500052e 	bgeu	r18,r20,4a8bc <__udivdi3+0x12c>
   4a8a8:	8ca5883a 	add	r18,r17,r18
   4a8ac:	10ffffc4 	addi	r3,r2,-1
   4a8b0:	9440f136 	bltu	r18,r17,4ac78 <__udivdi3+0x4e8>
   4a8b4:	9500f02e 	bgeu	r18,r20,4ac78 <__udivdi3+0x4e8>
   4a8b8:	10bfff84 	addi	r2,r2,-2
   4a8bc:	b00c943a 	slli	r6,r22,16
   4a8c0:	0007883a 	mov	r3,zero
   4a8c4:	3084b03a 	or	r2,r6,r2
   4a8c8:	00005906 	br	4aa30 <__udivdi3+0x2a0>
   4a8cc:	29c05636 	bltu	r5,r7,4aa28 <__udivdi3+0x298>
   4a8d0:	00bfffd4 	movui	r2,65535
   4a8d4:	11c0622e 	bgeu	r2,r7,4aa60 <__udivdi3+0x2d0>
   4a8d8:	00804034 	movhi	r2,256
   4a8dc:	10bfffc4 	addi	r2,r2,-1
   4a8e0:	11c0ee36 	bltu	r2,r7,4ac9c <__udivdi3+0x50c>
   4a8e4:	00800404 	movi	r2,16
   4a8e8:	3886d83a 	srl	r3,r7,r2
   4a8ec:	01000174 	movhi	r4,5
   4a8f0:	213df384 	addi	r4,r4,-2098
   4a8f4:	20c7883a 	add	r3,r4,r3
   4a8f8:	18c00003 	ldbu	r3,0(r3)
   4a8fc:	05400804 	movi	r21,32
   4a900:	1885883a 	add	r2,r3,r2
   4a904:	a8abc83a 	sub	r21,r21,r2
   4a908:	a800621e 	bne	r21,zero,4aa94 <__udivdi3+0x304>
   4a90c:	3c00e936 	bltu	r7,r16,4acb4 <__udivdi3+0x524>
   4a910:	9985403a 	cmpgeu	r2,r19,r6
   4a914:	0007883a 	mov	r3,zero
   4a918:	00004506 	br	4aa30 <__udivdi3+0x2a0>
   4a91c:	3000041e 	bne	r6,zero,4a930 <__udivdi3+0x1a0>
   4a920:	000b883a 	mov	r5,zero
   4a924:	01000044 	movi	r4,1
   4a928:	00410800 	call	41080 <__udivsi3>
   4a92c:	1023883a 	mov	r17,r2
   4a930:	00bfffd4 	movui	r2,65535
   4a934:	14404e2e 	bgeu	r2,r17,4aa70 <__udivdi3+0x2e0>
   4a938:	00804034 	movhi	r2,256
   4a93c:	10bfffc4 	addi	r2,r2,-1
   4a940:	1440d836 	bltu	r2,r17,4aca4 <__udivdi3+0x514>
   4a944:	00800404 	movi	r2,16
   4a948:	8886d83a 	srl	r3,r17,r2
   4a94c:	01000174 	movhi	r4,5
   4a950:	213df384 	addi	r4,r4,-2098
   4a954:	20c7883a 	add	r3,r4,r3
   4a958:	18c00003 	ldbu	r3,0(r3)
   4a95c:	1885883a 	add	r2,r3,r2
   4a960:	00c00804 	movi	r3,32
   4a964:	1887c83a 	sub	r3,r3,r2
   4a968:	18008f1e 	bne	r3,zero,4aba8 <__udivdi3+0x418>
   4a96c:	882ad43a 	srli	r21,r17,16
   4a970:	8461c83a 	sub	r16,r16,r17
   4a974:	8d3fffcc 	andi	r20,r17,65535
   4a978:	00c00044 	movi	r3,1
   4a97c:	8009883a 	mov	r4,r16
   4a980:	a80b883a 	mov	r5,r21
   4a984:	d8c00015 	stw	r3,0(sp)
   4a988:	00410e40 	call	410e4 <__umodsi3>
   4a98c:	8009883a 	mov	r4,r16
   4a990:	a80b883a 	mov	r5,r21
   4a994:	1027883a 	mov	r19,r2
   4a998:	00410800 	call	41080 <__udivsi3>
   4a99c:	9826943a 	slli	r19,r19,16
   4a9a0:	9008d43a 	srli	r4,r18,16
   4a9a4:	1521383a 	mul	r16,r2,r20
   4a9a8:	102d883a 	mov	r22,r2
   4a9ac:	24c8b03a 	or	r4,r4,r19
   4a9b0:	d8c00017 	ldw	r3,0(sp)
   4a9b4:	2400052e 	bgeu	r4,r16,4a9cc <__udivdi3+0x23c>
   4a9b8:	2449883a 	add	r4,r4,r17
   4a9bc:	b0bfffc4 	addi	r2,r22,-1
   4a9c0:	24400136 	bltu	r4,r17,4a9c8 <__udivdi3+0x238>
   4a9c4:	2400ca36 	bltu	r4,r16,4acf0 <__udivdi3+0x560>
   4a9c8:	102d883a 	mov	r22,r2
   4a9cc:	2421c83a 	sub	r16,r4,r16
   4a9d0:	a80b883a 	mov	r5,r21
   4a9d4:	8009883a 	mov	r4,r16
   4a9d8:	d8c00015 	stw	r3,0(sp)
   4a9dc:	00410e40 	call	410e4 <__umodsi3>
   4a9e0:	1027883a 	mov	r19,r2
   4a9e4:	a80b883a 	mov	r5,r21
   4a9e8:	8009883a 	mov	r4,r16
   4a9ec:	00410800 	call	41080 <__udivsi3>
   4a9f0:	9826943a 	slli	r19,r19,16
   4a9f4:	1529383a 	mul	r20,r2,r20
   4a9f8:	94bfffcc 	andi	r18,r18,65535
   4a9fc:	94e4b03a 	or	r18,r18,r19
   4aa00:	d8c00017 	ldw	r3,0(sp)
   4aa04:	9500052e 	bgeu	r18,r20,4aa1c <__udivdi3+0x28c>
   4aa08:	8ca5883a 	add	r18,r17,r18
   4aa0c:	113fffc4 	addi	r4,r2,-1
   4aa10:	94409736 	bltu	r18,r17,4ac70 <__udivdi3+0x4e0>
   4aa14:	9500962e 	bgeu	r18,r20,4ac70 <__udivdi3+0x4e0>
   4aa18:	10bfff84 	addi	r2,r2,-2
   4aa1c:	b00c943a 	slli	r6,r22,16
   4aa20:	3084b03a 	or	r2,r6,r2
   4aa24:	00000206 	br	4aa30 <__udivdi3+0x2a0>
   4aa28:	0007883a 	mov	r3,zero
   4aa2c:	0005883a 	mov	r2,zero
   4aa30:	dfc00a17 	ldw	ra,40(sp)
   4aa34:	df000917 	ldw	fp,36(sp)
   4aa38:	ddc00817 	ldw	r23,32(sp)
   4aa3c:	dd800717 	ldw	r22,28(sp)
   4aa40:	dd400617 	ldw	r21,24(sp)
   4aa44:	dd000517 	ldw	r20,20(sp)
   4aa48:	dcc00417 	ldw	r19,16(sp)
   4aa4c:	dc800317 	ldw	r18,12(sp)
   4aa50:	dc400217 	ldw	r17,8(sp)
   4aa54:	dc000117 	ldw	r16,4(sp)
   4aa58:	dec00b04 	addi	sp,sp,44
   4aa5c:	f800283a 	ret
   4aa60:	00803fc4 	movi	r2,255
   4aa64:	11c5803a 	cmpltu	r2,r2,r7
   4aa68:	100490fa 	slli	r2,r2,3
   4aa6c:	003f9e06 	br	4a8e8 <__alt_data_end+0xfffe37e8>
   4aa70:	00803fc4 	movi	r2,255
   4aa74:	1445803a 	cmpltu	r2,r2,r17
   4aa78:	100490fa 	slli	r2,r2,3
   4aa7c:	003fb206 	br	4a948 <__alt_data_end+0xfffe3848>
   4aa80:	00804034 	movhi	r2,256
   4aa84:	10bfffc4 	addi	r2,r2,-1
   4aa88:	11808836 	bltu	r2,r6,4acac <__udivdi3+0x51c>
   4aa8c:	00800404 	movi	r2,16
   4aa90:	003f5606 	br	4a7ec <__alt_data_end+0xfffe36ec>
   4aa94:	30aed83a 	srl	r23,r6,r2
   4aa98:	3d4e983a 	sll	r7,r7,r21
   4aa9c:	80acd83a 	srl	r22,r16,r2
   4aaa0:	9884d83a 	srl	r2,r19,r2
   4aaa4:	3deeb03a 	or	r23,r7,r23
   4aaa8:	b824d43a 	srli	r18,r23,16
   4aaac:	8560983a 	sll	r16,r16,r21
   4aab0:	b009883a 	mov	r4,r22
   4aab4:	900b883a 	mov	r5,r18
   4aab8:	3568983a 	sll	r20,r6,r21
   4aabc:	1420b03a 	or	r16,r2,r16
   4aac0:	00410e40 	call	410e4 <__umodsi3>
   4aac4:	b009883a 	mov	r4,r22
   4aac8:	900b883a 	mov	r5,r18
   4aacc:	1023883a 	mov	r17,r2
   4aad0:	00410800 	call	41080 <__udivsi3>
   4aad4:	8808943a 	slli	r4,r17,16
   4aad8:	bf3fffcc 	andi	fp,r23,65535
   4aadc:	8006d43a 	srli	r3,r16,16
   4aae0:	e0a3383a 	mul	r17,fp,r2
   4aae4:	100d883a 	mov	r6,r2
   4aae8:	1906b03a 	or	r3,r3,r4
   4aaec:	1c40042e 	bgeu	r3,r17,4ab00 <__udivdi3+0x370>
   4aaf0:	1dc7883a 	add	r3,r3,r23
   4aaf4:	10bfffc4 	addi	r2,r2,-1
   4aaf8:	1dc0752e 	bgeu	r3,r23,4acd0 <__udivdi3+0x540>
   4aafc:	100d883a 	mov	r6,r2
   4ab00:	1c63c83a 	sub	r17,r3,r17
   4ab04:	900b883a 	mov	r5,r18
   4ab08:	8809883a 	mov	r4,r17
   4ab0c:	d9800015 	stw	r6,0(sp)
   4ab10:	00410e40 	call	410e4 <__umodsi3>
   4ab14:	102d883a 	mov	r22,r2
   4ab18:	8809883a 	mov	r4,r17
   4ab1c:	900b883a 	mov	r5,r18
   4ab20:	00410800 	call	41080 <__udivsi3>
   4ab24:	b02c943a 	slli	r22,r22,16
   4ab28:	e089383a 	mul	r4,fp,r2
   4ab2c:	843fffcc 	andi	r16,r16,65535
   4ab30:	85a0b03a 	or	r16,r16,r22
   4ab34:	d9800017 	ldw	r6,0(sp)
   4ab38:	8100042e 	bgeu	r16,r4,4ab4c <__udivdi3+0x3bc>
   4ab3c:	85e1883a 	add	r16,r16,r23
   4ab40:	10ffffc4 	addi	r3,r2,-1
   4ab44:	85c05e2e 	bgeu	r16,r23,4acc0 <__udivdi3+0x530>
   4ab48:	1805883a 	mov	r2,r3
   4ab4c:	300c943a 	slli	r6,r6,16
   4ab50:	a17fffcc 	andi	r5,r20,65535
   4ab54:	a028d43a 	srli	r20,r20,16
   4ab58:	3084b03a 	or	r2,r6,r2
   4ab5c:	10ffffcc 	andi	r3,r2,65535
   4ab60:	100cd43a 	srli	r6,r2,16
   4ab64:	194f383a 	mul	r7,r3,r5
   4ab68:	1d07383a 	mul	r3,r3,r20
   4ab6c:	314b383a 	mul	r5,r6,r5
   4ab70:	3810d43a 	srli	r8,r7,16
   4ab74:	8121c83a 	sub	r16,r16,r4
   4ab78:	1947883a 	add	r3,r3,r5
   4ab7c:	40c7883a 	add	r3,r8,r3
   4ab80:	350d383a 	mul	r6,r6,r20
   4ab84:	1940022e 	bgeu	r3,r5,4ab90 <__udivdi3+0x400>
   4ab88:	01000074 	movhi	r4,1
   4ab8c:	310d883a 	add	r6,r6,r4
   4ab90:	1828d43a 	srli	r20,r3,16
   4ab94:	a18d883a 	add	r6,r20,r6
   4ab98:	81803e36 	bltu	r16,r6,4ac94 <__udivdi3+0x504>
   4ab9c:	81803826 	beq	r16,r6,4ac80 <__udivdi3+0x4f0>
   4aba0:	0007883a 	mov	r3,zero
   4aba4:	003fa206 	br	4aa30 <__alt_data_end+0xfffe3930>
   4aba8:	88e2983a 	sll	r17,r17,r3
   4abac:	80a8d83a 	srl	r20,r16,r2
   4abb0:	80e0983a 	sll	r16,r16,r3
   4abb4:	882ad43a 	srli	r21,r17,16
   4abb8:	9884d83a 	srl	r2,r19,r2
   4abbc:	a009883a 	mov	r4,r20
   4abc0:	a80b883a 	mov	r5,r21
   4abc4:	142eb03a 	or	r23,r2,r16
   4abc8:	98e4983a 	sll	r18,r19,r3
   4abcc:	00410e40 	call	410e4 <__umodsi3>
   4abd0:	a009883a 	mov	r4,r20
   4abd4:	a80b883a 	mov	r5,r21
   4abd8:	1021883a 	mov	r16,r2
   4abdc:	00410800 	call	41080 <__udivsi3>
   4abe0:	1039883a 	mov	fp,r2
   4abe4:	8d3fffcc 	andi	r20,r17,65535
   4abe8:	8020943a 	slli	r16,r16,16
   4abec:	b804d43a 	srli	r2,r23,16
   4abf0:	a72d383a 	mul	r22,r20,fp
   4abf4:	1404b03a 	or	r2,r2,r16
   4abf8:	1580062e 	bgeu	r2,r22,4ac14 <__udivdi3+0x484>
   4abfc:	1445883a 	add	r2,r2,r17
   4ac00:	e0ffffc4 	addi	r3,fp,-1
   4ac04:	14403836 	bltu	r2,r17,4ace8 <__udivdi3+0x558>
   4ac08:	1580372e 	bgeu	r2,r22,4ace8 <__udivdi3+0x558>
   4ac0c:	e73fff84 	addi	fp,fp,-2
   4ac10:	1445883a 	add	r2,r2,r17
   4ac14:	15adc83a 	sub	r22,r2,r22
   4ac18:	a80b883a 	mov	r5,r21
   4ac1c:	b009883a 	mov	r4,r22
   4ac20:	00410e40 	call	410e4 <__umodsi3>
   4ac24:	1027883a 	mov	r19,r2
   4ac28:	b009883a 	mov	r4,r22
   4ac2c:	a80b883a 	mov	r5,r21
   4ac30:	00410800 	call	41080 <__udivsi3>
   4ac34:	9826943a 	slli	r19,r19,16
   4ac38:	a0a1383a 	mul	r16,r20,r2
   4ac3c:	b93fffcc 	andi	r4,r23,65535
   4ac40:	24c8b03a 	or	r4,r4,r19
   4ac44:	2400062e 	bgeu	r4,r16,4ac60 <__udivdi3+0x4d0>
   4ac48:	2449883a 	add	r4,r4,r17
   4ac4c:	10ffffc4 	addi	r3,r2,-1
   4ac50:	24402336 	bltu	r4,r17,4ace0 <__udivdi3+0x550>
   4ac54:	2400222e 	bgeu	r4,r16,4ace0 <__udivdi3+0x550>
   4ac58:	10bfff84 	addi	r2,r2,-2
   4ac5c:	2449883a 	add	r4,r4,r17
   4ac60:	e038943a 	slli	fp,fp,16
   4ac64:	2421c83a 	sub	r16,r4,r16
   4ac68:	e086b03a 	or	r3,fp,r2
   4ac6c:	003f4306 	br	4a97c <__alt_data_end+0xfffe387c>
   4ac70:	2005883a 	mov	r2,r4
   4ac74:	003f6906 	br	4aa1c <__alt_data_end+0xfffe391c>
   4ac78:	1805883a 	mov	r2,r3
   4ac7c:	003f0f06 	br	4a8bc <__alt_data_end+0xfffe37bc>
   4ac80:	1806943a 	slli	r3,r3,16
   4ac84:	9d66983a 	sll	r19,r19,r21
   4ac88:	39ffffcc 	andi	r7,r7,65535
   4ac8c:	19c7883a 	add	r3,r3,r7
   4ac90:	98ffc32e 	bgeu	r19,r3,4aba0 <__alt_data_end+0xfffe3aa0>
   4ac94:	10bfffc4 	addi	r2,r2,-1
   4ac98:	003fc106 	br	4aba0 <__alt_data_end+0xfffe3aa0>
   4ac9c:	00800604 	movi	r2,24
   4aca0:	003f1106 	br	4a8e8 <__alt_data_end+0xfffe37e8>
   4aca4:	00800604 	movi	r2,24
   4aca8:	003f2706 	br	4a948 <__alt_data_end+0xfffe3848>
   4acac:	00800604 	movi	r2,24
   4acb0:	003ece06 	br	4a7ec <__alt_data_end+0xfffe36ec>
   4acb4:	0007883a 	mov	r3,zero
   4acb8:	00800044 	movi	r2,1
   4acbc:	003f5c06 	br	4aa30 <__alt_data_end+0xfffe3930>
   4acc0:	813fa12e 	bgeu	r16,r4,4ab48 <__alt_data_end+0xfffe3a48>
   4acc4:	10bfff84 	addi	r2,r2,-2
   4acc8:	85e1883a 	add	r16,r16,r23
   4accc:	003f9f06 	br	4ab4c <__alt_data_end+0xfffe3a4c>
   4acd0:	1c7f8a2e 	bgeu	r3,r17,4aafc <__alt_data_end+0xfffe39fc>
   4acd4:	31bfff84 	addi	r6,r6,-2
   4acd8:	1dc7883a 	add	r3,r3,r23
   4acdc:	003f8806 	br	4ab00 <__alt_data_end+0xfffe3a00>
   4ace0:	1805883a 	mov	r2,r3
   4ace4:	003fde06 	br	4ac60 <__alt_data_end+0xfffe3b60>
   4ace8:	1839883a 	mov	fp,r3
   4acec:	003fc906 	br	4ac14 <__alt_data_end+0xfffe3b14>
   4acf0:	b5bfff84 	addi	r22,r22,-2
   4acf4:	2449883a 	add	r4,r4,r17
   4acf8:	003f3406 	br	4a9cc <__alt_data_end+0xfffe38cc>
   4acfc:	b5bfff84 	addi	r22,r22,-2
   4ad00:	1445883a 	add	r2,r2,r17
   4ad04:	003edb06 	br	4a874 <__alt_data_end+0xfffe3774>

0004ad08 <__umoddi3>:
   4ad08:	defff404 	addi	sp,sp,-48
   4ad0c:	df000a15 	stw	fp,40(sp)
   4ad10:	dc400315 	stw	r17,12(sp)
   4ad14:	dc000215 	stw	r16,8(sp)
   4ad18:	dfc00b15 	stw	ra,44(sp)
   4ad1c:	ddc00915 	stw	r23,36(sp)
   4ad20:	dd800815 	stw	r22,32(sp)
   4ad24:	dd400715 	stw	r21,28(sp)
   4ad28:	dd000615 	stw	r20,24(sp)
   4ad2c:	dcc00515 	stw	r19,20(sp)
   4ad30:	dc800415 	stw	r18,16(sp)
   4ad34:	2021883a 	mov	r16,r4
   4ad38:	2823883a 	mov	r17,r5
   4ad3c:	2839883a 	mov	fp,r5
   4ad40:	38003c1e 	bne	r7,zero,4ae34 <__umoddi3+0x12c>
   4ad44:	3027883a 	mov	r19,r6
   4ad48:	2029883a 	mov	r20,r4
   4ad4c:	2980512e 	bgeu	r5,r6,4ae94 <__umoddi3+0x18c>
   4ad50:	00bfffd4 	movui	r2,65535
   4ad54:	11809a36 	bltu	r2,r6,4afc0 <__umoddi3+0x2b8>
   4ad58:	01003fc4 	movi	r4,255
   4ad5c:	2189803a 	cmpltu	r4,r4,r6
   4ad60:	200890fa 	slli	r4,r4,3
   4ad64:	3104d83a 	srl	r2,r6,r4
   4ad68:	00c00174 	movhi	r3,5
   4ad6c:	18fdf384 	addi	r3,r3,-2098
   4ad70:	1885883a 	add	r2,r3,r2
   4ad74:	10c00003 	ldbu	r3,0(r2)
   4ad78:	00800804 	movi	r2,32
   4ad7c:	1909883a 	add	r4,r3,r4
   4ad80:	1125c83a 	sub	r18,r2,r4
   4ad84:	90000526 	beq	r18,zero,4ad9c <__umoddi3+0x94>
   4ad88:	8ca2983a 	sll	r17,r17,r18
   4ad8c:	8108d83a 	srl	r4,r16,r4
   4ad90:	34a6983a 	sll	r19,r6,r18
   4ad94:	84a8983a 	sll	r20,r16,r18
   4ad98:	2478b03a 	or	fp,r4,r17
   4ad9c:	982ed43a 	srli	r23,r19,16
   4ada0:	e009883a 	mov	r4,fp
   4ada4:	9dbfffcc 	andi	r22,r19,65535
   4ada8:	b80b883a 	mov	r5,r23
   4adac:	00410e40 	call	410e4 <__umodsi3>
   4adb0:	e009883a 	mov	r4,fp
   4adb4:	b80b883a 	mov	r5,r23
   4adb8:	102b883a 	mov	r21,r2
   4adbc:	00410800 	call	41080 <__udivsi3>
   4adc0:	a806943a 	slli	r3,r21,16
   4adc4:	a008d43a 	srli	r4,r20,16
   4adc8:	b085383a 	mul	r2,r22,r2
   4adcc:	20c8b03a 	or	r4,r4,r3
   4add0:	2080032e 	bgeu	r4,r2,4ade0 <__umoddi3+0xd8>
   4add4:	24c9883a 	add	r4,r4,r19
   4add8:	24c00136 	bltu	r4,r19,4ade0 <__umoddi3+0xd8>
   4addc:	20811036 	bltu	r4,r2,4b220 <__umoddi3+0x518>
   4ade0:	20abc83a 	sub	r21,r4,r2
   4ade4:	b80b883a 	mov	r5,r23
   4ade8:	a809883a 	mov	r4,r21
   4adec:	00410e40 	call	410e4 <__umodsi3>
   4adf0:	1023883a 	mov	r17,r2
   4adf4:	b80b883a 	mov	r5,r23
   4adf8:	a809883a 	mov	r4,r21
   4adfc:	00410800 	call	41080 <__udivsi3>
   4ae00:	8822943a 	slli	r17,r17,16
   4ae04:	b085383a 	mul	r2,r22,r2
   4ae08:	a0ffffcc 	andi	r3,r20,65535
   4ae0c:	1c46b03a 	or	r3,r3,r17
   4ae10:	1880042e 	bgeu	r3,r2,4ae24 <__umoddi3+0x11c>
   4ae14:	1cc7883a 	add	r3,r3,r19
   4ae18:	1cc00236 	bltu	r3,r19,4ae24 <__umoddi3+0x11c>
   4ae1c:	1880012e 	bgeu	r3,r2,4ae24 <__umoddi3+0x11c>
   4ae20:	1cc7883a 	add	r3,r3,r19
   4ae24:	1885c83a 	sub	r2,r3,r2
   4ae28:	1484d83a 	srl	r2,r2,r18
   4ae2c:	0007883a 	mov	r3,zero
   4ae30:	00004f06 	br	4af70 <__umoddi3+0x268>
   4ae34:	29c04c36 	bltu	r5,r7,4af68 <__umoddi3+0x260>
   4ae38:	00bfffd4 	movui	r2,65535
   4ae3c:	11c0582e 	bgeu	r2,r7,4afa0 <__umoddi3+0x298>
   4ae40:	00804034 	movhi	r2,256
   4ae44:	10bfffc4 	addi	r2,r2,-1
   4ae48:	11c0e736 	bltu	r2,r7,4b1e8 <__umoddi3+0x4e0>
   4ae4c:	01000404 	movi	r4,16
   4ae50:	3904d83a 	srl	r2,r7,r4
   4ae54:	00c00174 	movhi	r3,5
   4ae58:	18fdf384 	addi	r3,r3,-2098
   4ae5c:	1885883a 	add	r2,r3,r2
   4ae60:	14c00003 	ldbu	r19,0(r2)
   4ae64:	00c00804 	movi	r3,32
   4ae68:	9927883a 	add	r19,r19,r4
   4ae6c:	1ce9c83a 	sub	r20,r3,r19
   4ae70:	a000581e 	bne	r20,zero,4afd4 <__umoddi3+0x2cc>
   4ae74:	3c400136 	bltu	r7,r17,4ae7c <__umoddi3+0x174>
   4ae78:	8180eb36 	bltu	r16,r6,4b228 <__umoddi3+0x520>
   4ae7c:	8185c83a 	sub	r2,r16,r6
   4ae80:	89e3c83a 	sub	r17,r17,r7
   4ae84:	8089803a 	cmpltu	r4,r16,r2
   4ae88:	8939c83a 	sub	fp,r17,r4
   4ae8c:	e007883a 	mov	r3,fp
   4ae90:	00003706 	br	4af70 <__umoddi3+0x268>
   4ae94:	3000041e 	bne	r6,zero,4aea8 <__umoddi3+0x1a0>
   4ae98:	000b883a 	mov	r5,zero
   4ae9c:	01000044 	movi	r4,1
   4aea0:	00410800 	call	41080 <__udivsi3>
   4aea4:	1027883a 	mov	r19,r2
   4aea8:	00bfffd4 	movui	r2,65535
   4aeac:	14c0402e 	bgeu	r2,r19,4afb0 <__umoddi3+0x2a8>
   4aeb0:	00804034 	movhi	r2,256
   4aeb4:	10bfffc4 	addi	r2,r2,-1
   4aeb8:	14c0cd36 	bltu	r2,r19,4b1f0 <__umoddi3+0x4e8>
   4aebc:	00800404 	movi	r2,16
   4aec0:	9886d83a 	srl	r3,r19,r2
   4aec4:	01000174 	movhi	r4,5
   4aec8:	213df384 	addi	r4,r4,-2098
   4aecc:	20c7883a 	add	r3,r4,r3
   4aed0:	18c00003 	ldbu	r3,0(r3)
   4aed4:	1887883a 	add	r3,r3,r2
   4aed8:	00800804 	movi	r2,32
   4aedc:	10e5c83a 	sub	r18,r2,r3
   4aee0:	9000901e 	bne	r18,zero,4b124 <__umoddi3+0x41c>
   4aee4:	982cd43a 	srli	r22,r19,16
   4aee8:	8ce3c83a 	sub	r17,r17,r19
   4aeec:	9d7fffcc 	andi	r21,r19,65535
   4aef0:	b00b883a 	mov	r5,r22
   4aef4:	8809883a 	mov	r4,r17
   4aef8:	00410e40 	call	410e4 <__umodsi3>
   4aefc:	8809883a 	mov	r4,r17
   4af00:	b00b883a 	mov	r5,r22
   4af04:	1021883a 	mov	r16,r2
   4af08:	00410800 	call	41080 <__udivsi3>
   4af0c:	8006943a 	slli	r3,r16,16
   4af10:	a008d43a 	srli	r4,r20,16
   4af14:	1545383a 	mul	r2,r2,r21
   4af18:	20c8b03a 	or	r4,r4,r3
   4af1c:	2080042e 	bgeu	r4,r2,4af30 <__umoddi3+0x228>
   4af20:	24c9883a 	add	r4,r4,r19
   4af24:	24c00236 	bltu	r4,r19,4af30 <__umoddi3+0x228>
   4af28:	2080012e 	bgeu	r4,r2,4af30 <__umoddi3+0x228>
   4af2c:	24c9883a 	add	r4,r4,r19
   4af30:	20a1c83a 	sub	r16,r4,r2
   4af34:	b00b883a 	mov	r5,r22
   4af38:	8009883a 	mov	r4,r16
   4af3c:	00410e40 	call	410e4 <__umodsi3>
   4af40:	1023883a 	mov	r17,r2
   4af44:	b00b883a 	mov	r5,r22
   4af48:	8009883a 	mov	r4,r16
   4af4c:	00410800 	call	41080 <__udivsi3>
   4af50:	8822943a 	slli	r17,r17,16
   4af54:	1545383a 	mul	r2,r2,r21
   4af58:	a53fffcc 	andi	r20,r20,65535
   4af5c:	a446b03a 	or	r3,r20,r17
   4af60:	18bfb02e 	bgeu	r3,r2,4ae24 <__alt_data_end+0xfffe3d24>
   4af64:	003fab06 	br	4ae14 <__alt_data_end+0xfffe3d14>
   4af68:	2005883a 	mov	r2,r4
   4af6c:	2807883a 	mov	r3,r5
   4af70:	dfc00b17 	ldw	ra,44(sp)
   4af74:	df000a17 	ldw	fp,40(sp)
   4af78:	ddc00917 	ldw	r23,36(sp)
   4af7c:	dd800817 	ldw	r22,32(sp)
   4af80:	dd400717 	ldw	r21,28(sp)
   4af84:	dd000617 	ldw	r20,24(sp)
   4af88:	dcc00517 	ldw	r19,20(sp)
   4af8c:	dc800417 	ldw	r18,16(sp)
   4af90:	dc400317 	ldw	r17,12(sp)
   4af94:	dc000217 	ldw	r16,8(sp)
   4af98:	dec00c04 	addi	sp,sp,48
   4af9c:	f800283a 	ret
   4afa0:	04c03fc4 	movi	r19,255
   4afa4:	99c9803a 	cmpltu	r4,r19,r7
   4afa8:	200890fa 	slli	r4,r4,3
   4afac:	003fa806 	br	4ae50 <__alt_data_end+0xfffe3d50>
   4afb0:	00803fc4 	movi	r2,255
   4afb4:	14c5803a 	cmpltu	r2,r2,r19
   4afb8:	100490fa 	slli	r2,r2,3
   4afbc:	003fc006 	br	4aec0 <__alt_data_end+0xfffe3dc0>
   4afc0:	00804034 	movhi	r2,256
   4afc4:	10bfffc4 	addi	r2,r2,-1
   4afc8:	11808b36 	bltu	r2,r6,4b1f8 <__umoddi3+0x4f0>
   4afcc:	01000404 	movi	r4,16
   4afd0:	003f6406 	br	4ad64 <__alt_data_end+0xfffe3c64>
   4afd4:	34c4d83a 	srl	r2,r6,r19
   4afd8:	3d0e983a 	sll	r7,r7,r20
   4afdc:	8cf8d83a 	srl	fp,r17,r19
   4afe0:	8d10983a 	sll	r8,r17,r20
   4afe4:	38aab03a 	or	r21,r7,r2
   4afe8:	a82cd43a 	srli	r22,r21,16
   4afec:	84e2d83a 	srl	r17,r16,r19
   4aff0:	e009883a 	mov	r4,fp
   4aff4:	b00b883a 	mov	r5,r22
   4aff8:	8a22b03a 	or	r17,r17,r8
   4affc:	3524983a 	sll	r18,r6,r20
   4b000:	00410e40 	call	410e4 <__umodsi3>
   4b004:	e009883a 	mov	r4,fp
   4b008:	b00b883a 	mov	r5,r22
   4b00c:	102f883a 	mov	r23,r2
   4b010:	00410800 	call	41080 <__udivsi3>
   4b014:	100d883a 	mov	r6,r2
   4b018:	b808943a 	slli	r4,r23,16
   4b01c:	aa3fffcc 	andi	r8,r21,65535
   4b020:	8804d43a 	srli	r2,r17,16
   4b024:	41af383a 	mul	r23,r8,r6
   4b028:	8520983a 	sll	r16,r16,r20
   4b02c:	1104b03a 	or	r2,r2,r4
   4b030:	15c0042e 	bgeu	r2,r23,4b044 <__umoddi3+0x33c>
   4b034:	1545883a 	add	r2,r2,r21
   4b038:	30ffffc4 	addi	r3,r6,-1
   4b03c:	1540742e 	bgeu	r2,r21,4b210 <__umoddi3+0x508>
   4b040:	180d883a 	mov	r6,r3
   4b044:	15efc83a 	sub	r23,r2,r23
   4b048:	b00b883a 	mov	r5,r22
   4b04c:	b809883a 	mov	r4,r23
   4b050:	d9800115 	stw	r6,4(sp)
   4b054:	da000015 	stw	r8,0(sp)
   4b058:	00410e40 	call	410e4 <__umodsi3>
   4b05c:	b00b883a 	mov	r5,r22
   4b060:	b809883a 	mov	r4,r23
   4b064:	1039883a 	mov	fp,r2
   4b068:	00410800 	call	41080 <__udivsi3>
   4b06c:	da000017 	ldw	r8,0(sp)
   4b070:	e038943a 	slli	fp,fp,16
   4b074:	100b883a 	mov	r5,r2
   4b078:	4089383a 	mul	r4,r8,r2
   4b07c:	8a3fffcc 	andi	r8,r17,65535
   4b080:	4710b03a 	or	r8,r8,fp
   4b084:	d9800117 	ldw	r6,4(sp)
   4b088:	4100042e 	bgeu	r8,r4,4b09c <__umoddi3+0x394>
   4b08c:	4551883a 	add	r8,r8,r21
   4b090:	10bfffc4 	addi	r2,r2,-1
   4b094:	45405a2e 	bgeu	r8,r21,4b200 <__umoddi3+0x4f8>
   4b098:	100b883a 	mov	r5,r2
   4b09c:	300c943a 	slli	r6,r6,16
   4b0a0:	91ffffcc 	andi	r7,r18,65535
   4b0a4:	9004d43a 	srli	r2,r18,16
   4b0a8:	314cb03a 	or	r6,r6,r5
   4b0ac:	317fffcc 	andi	r5,r6,65535
   4b0b0:	300cd43a 	srli	r6,r6,16
   4b0b4:	29d3383a 	mul	r9,r5,r7
   4b0b8:	288b383a 	mul	r5,r5,r2
   4b0bc:	31cf383a 	mul	r7,r6,r7
   4b0c0:	4806d43a 	srli	r3,r9,16
   4b0c4:	4111c83a 	sub	r8,r8,r4
   4b0c8:	29cb883a 	add	r5,r5,r7
   4b0cc:	194b883a 	add	r5,r3,r5
   4b0d0:	3085383a 	mul	r2,r6,r2
   4b0d4:	29c0022e 	bgeu	r5,r7,4b0e0 <__umoddi3+0x3d8>
   4b0d8:	00c00074 	movhi	r3,1
   4b0dc:	10c5883a 	add	r2,r2,r3
   4b0e0:	2808d43a 	srli	r4,r5,16
   4b0e4:	280a943a 	slli	r5,r5,16
   4b0e8:	4a7fffcc 	andi	r9,r9,65535
   4b0ec:	2085883a 	add	r2,r4,r2
   4b0f0:	2a4b883a 	add	r5,r5,r9
   4b0f4:	40803636 	bltu	r8,r2,4b1d0 <__umoddi3+0x4c8>
   4b0f8:	40804d26 	beq	r8,r2,4b230 <__umoddi3+0x528>
   4b0fc:	4089c83a 	sub	r4,r8,r2
   4b100:	280f883a 	mov	r7,r5
   4b104:	81cfc83a 	sub	r7,r16,r7
   4b108:	81c7803a 	cmpltu	r3,r16,r7
   4b10c:	20c7c83a 	sub	r3,r4,r3
   4b110:	1cc4983a 	sll	r2,r3,r19
   4b114:	3d0ed83a 	srl	r7,r7,r20
   4b118:	1d06d83a 	srl	r3,r3,r20
   4b11c:	11c4b03a 	or	r2,r2,r7
   4b120:	003f9306 	br	4af70 <__alt_data_end+0xfffe3e70>
   4b124:	9ca6983a 	sll	r19,r19,r18
   4b128:	88e8d83a 	srl	r20,r17,r3
   4b12c:	80c4d83a 	srl	r2,r16,r3
   4b130:	982cd43a 	srli	r22,r19,16
   4b134:	8ca2983a 	sll	r17,r17,r18
   4b138:	a009883a 	mov	r4,r20
   4b13c:	b00b883a 	mov	r5,r22
   4b140:	1478b03a 	or	fp,r2,r17
   4b144:	00410e40 	call	410e4 <__umodsi3>
   4b148:	a009883a 	mov	r4,r20
   4b14c:	b00b883a 	mov	r5,r22
   4b150:	1023883a 	mov	r17,r2
   4b154:	00410800 	call	41080 <__udivsi3>
   4b158:	9d7fffcc 	andi	r21,r19,65535
   4b15c:	880a943a 	slli	r5,r17,16
   4b160:	e008d43a 	srli	r4,fp,16
   4b164:	a885383a 	mul	r2,r21,r2
   4b168:	84a8983a 	sll	r20,r16,r18
   4b16c:	2148b03a 	or	r4,r4,r5
   4b170:	2080042e 	bgeu	r4,r2,4b184 <__umoddi3+0x47c>
   4b174:	24c9883a 	add	r4,r4,r19
   4b178:	24c00236 	bltu	r4,r19,4b184 <__umoddi3+0x47c>
   4b17c:	2080012e 	bgeu	r4,r2,4b184 <__umoddi3+0x47c>
   4b180:	24c9883a 	add	r4,r4,r19
   4b184:	20a3c83a 	sub	r17,r4,r2
   4b188:	b00b883a 	mov	r5,r22
   4b18c:	8809883a 	mov	r4,r17
   4b190:	00410e40 	call	410e4 <__umodsi3>
   4b194:	102f883a 	mov	r23,r2
   4b198:	8809883a 	mov	r4,r17
   4b19c:	b00b883a 	mov	r5,r22
   4b1a0:	00410800 	call	41080 <__udivsi3>
   4b1a4:	b82e943a 	slli	r23,r23,16
   4b1a8:	a885383a 	mul	r2,r21,r2
   4b1ac:	e13fffcc 	andi	r4,fp,65535
   4b1b0:	25c8b03a 	or	r4,r4,r23
   4b1b4:	2080042e 	bgeu	r4,r2,4b1c8 <__umoddi3+0x4c0>
   4b1b8:	24c9883a 	add	r4,r4,r19
   4b1bc:	24c00236 	bltu	r4,r19,4b1c8 <__umoddi3+0x4c0>
   4b1c0:	2080012e 	bgeu	r4,r2,4b1c8 <__umoddi3+0x4c0>
   4b1c4:	24c9883a 	add	r4,r4,r19
   4b1c8:	20a3c83a 	sub	r17,r4,r2
   4b1cc:	003f4806 	br	4aef0 <__alt_data_end+0xfffe3df0>
   4b1d0:	2c8fc83a 	sub	r7,r5,r18
   4b1d4:	1545c83a 	sub	r2,r2,r21
   4b1d8:	29cb803a 	cmpltu	r5,r5,r7
   4b1dc:	1145c83a 	sub	r2,r2,r5
   4b1e0:	4089c83a 	sub	r4,r8,r2
   4b1e4:	003fc706 	br	4b104 <__alt_data_end+0xfffe4004>
   4b1e8:	01000604 	movi	r4,24
   4b1ec:	003f1806 	br	4ae50 <__alt_data_end+0xfffe3d50>
   4b1f0:	00800604 	movi	r2,24
   4b1f4:	003f3206 	br	4aec0 <__alt_data_end+0xfffe3dc0>
   4b1f8:	01000604 	movi	r4,24
   4b1fc:	003ed906 	br	4ad64 <__alt_data_end+0xfffe3c64>
   4b200:	413fa52e 	bgeu	r8,r4,4b098 <__alt_data_end+0xfffe3f98>
   4b204:	297fff84 	addi	r5,r5,-2
   4b208:	4551883a 	add	r8,r8,r21
   4b20c:	003fa306 	br	4b09c <__alt_data_end+0xfffe3f9c>
   4b210:	15ff8b2e 	bgeu	r2,r23,4b040 <__alt_data_end+0xfffe3f40>
   4b214:	31bfff84 	addi	r6,r6,-2
   4b218:	1545883a 	add	r2,r2,r21
   4b21c:	003f8906 	br	4b044 <__alt_data_end+0xfffe3f44>
   4b220:	24c9883a 	add	r4,r4,r19
   4b224:	003eee06 	br	4ade0 <__alt_data_end+0xfffe3ce0>
   4b228:	8005883a 	mov	r2,r16
   4b22c:	003f1706 	br	4ae8c <__alt_data_end+0xfffe3d8c>
   4b230:	817fe736 	bltu	r16,r5,4b1d0 <__alt_data_end+0xfffe40d0>
   4b234:	280f883a 	mov	r7,r5
   4b238:	0009883a 	mov	r4,zero
   4b23c:	003fb106 	br	4b104 <__alt_data_end+0xfffe4004>

0004b240 <__adddf3>:
   4b240:	02c00434 	movhi	r11,16
   4b244:	5affffc4 	addi	r11,r11,-1
   4b248:	2806d7fa 	srli	r3,r5,31
   4b24c:	2ad4703a 	and	r10,r5,r11
   4b250:	3ad2703a 	and	r9,r7,r11
   4b254:	3804d53a 	srli	r2,r7,20
   4b258:	3018d77a 	srli	r12,r6,29
   4b25c:	280ad53a 	srli	r5,r5,20
   4b260:	501490fa 	slli	r10,r10,3
   4b264:	2010d77a 	srli	r8,r4,29
   4b268:	481290fa 	slli	r9,r9,3
   4b26c:	380ed7fa 	srli	r7,r7,31
   4b270:	defffb04 	addi	sp,sp,-20
   4b274:	dc800215 	stw	r18,8(sp)
   4b278:	dc400115 	stw	r17,4(sp)
   4b27c:	dc000015 	stw	r16,0(sp)
   4b280:	dfc00415 	stw	ra,16(sp)
   4b284:	dcc00315 	stw	r19,12(sp)
   4b288:	1c803fcc 	andi	r18,r3,255
   4b28c:	2c01ffcc 	andi	r16,r5,2047
   4b290:	5210b03a 	or	r8,r10,r8
   4b294:	202290fa 	slli	r17,r4,3
   4b298:	1081ffcc 	andi	r2,r2,2047
   4b29c:	4b12b03a 	or	r9,r9,r12
   4b2a0:	300c90fa 	slli	r6,r6,3
   4b2a4:	91c07526 	beq	r18,r7,4b47c <__adddf3+0x23c>
   4b2a8:	8087c83a 	sub	r3,r16,r2
   4b2ac:	00c0ab0e 	bge	zero,r3,4b55c <__adddf3+0x31c>
   4b2b0:	10002a1e 	bne	r2,zero,4b35c <__adddf3+0x11c>
   4b2b4:	4984b03a 	or	r2,r9,r6
   4b2b8:	1000961e 	bne	r2,zero,4b514 <__adddf3+0x2d4>
   4b2bc:	888001cc 	andi	r2,r17,7
   4b2c0:	10000726 	beq	r2,zero,4b2e0 <__adddf3+0xa0>
   4b2c4:	888003cc 	andi	r2,r17,15
   4b2c8:	00c00104 	movi	r3,4
   4b2cc:	10c00426 	beq	r2,r3,4b2e0 <__adddf3+0xa0>
   4b2d0:	88c7883a 	add	r3,r17,r3
   4b2d4:	1c63803a 	cmpltu	r17,r3,r17
   4b2d8:	4451883a 	add	r8,r8,r17
   4b2dc:	1823883a 	mov	r17,r3
   4b2e0:	4080202c 	andhi	r2,r8,128
   4b2e4:	10005926 	beq	r2,zero,4b44c <__adddf3+0x20c>
   4b2e8:	84000044 	addi	r16,r16,1
   4b2ec:	0081ffc4 	movi	r2,2047
   4b2f0:	8080ba26 	beq	r16,r2,4b5dc <__adddf3+0x39c>
   4b2f4:	00bfe034 	movhi	r2,65408
   4b2f8:	10bfffc4 	addi	r2,r2,-1
   4b2fc:	4090703a 	and	r8,r8,r2
   4b300:	4004977a 	slli	r2,r8,29
   4b304:	4010927a 	slli	r8,r8,9
   4b308:	8822d0fa 	srli	r17,r17,3
   4b30c:	8401ffcc 	andi	r16,r16,2047
   4b310:	4010d33a 	srli	r8,r8,12
   4b314:	9007883a 	mov	r3,r18
   4b318:	1444b03a 	or	r2,r2,r17
   4b31c:	8401ffcc 	andi	r16,r16,2047
   4b320:	8020953a 	slli	r16,r16,20
   4b324:	18c03fcc 	andi	r3,r3,255
   4b328:	01000434 	movhi	r4,16
   4b32c:	213fffc4 	addi	r4,r4,-1
   4b330:	180697fa 	slli	r3,r3,31
   4b334:	4110703a 	and	r8,r8,r4
   4b338:	4410b03a 	or	r8,r8,r16
   4b33c:	40c6b03a 	or	r3,r8,r3
   4b340:	dfc00417 	ldw	ra,16(sp)
   4b344:	dcc00317 	ldw	r19,12(sp)
   4b348:	dc800217 	ldw	r18,8(sp)
   4b34c:	dc400117 	ldw	r17,4(sp)
   4b350:	dc000017 	ldw	r16,0(sp)
   4b354:	dec00504 	addi	sp,sp,20
   4b358:	f800283a 	ret
   4b35c:	0081ffc4 	movi	r2,2047
   4b360:	80bfd626 	beq	r16,r2,4b2bc <__alt_data_end+0xfffe41bc>
   4b364:	4a402034 	orhi	r9,r9,128
   4b368:	00800e04 	movi	r2,56
   4b36c:	10c09f16 	blt	r2,r3,4b5ec <__adddf3+0x3ac>
   4b370:	008007c4 	movi	r2,31
   4b374:	10c0c216 	blt	r2,r3,4b680 <__adddf3+0x440>
   4b378:	00800804 	movi	r2,32
   4b37c:	10c5c83a 	sub	r2,r2,r3
   4b380:	488a983a 	sll	r5,r9,r2
   4b384:	30c8d83a 	srl	r4,r6,r3
   4b388:	3084983a 	sll	r2,r6,r2
   4b38c:	48c6d83a 	srl	r3,r9,r3
   4b390:	290cb03a 	or	r6,r5,r4
   4b394:	1004c03a 	cmpne	r2,r2,zero
   4b398:	308cb03a 	or	r6,r6,r2
   4b39c:	898dc83a 	sub	r6,r17,r6
   4b3a0:	89a3803a 	cmpltu	r17,r17,r6
   4b3a4:	40d1c83a 	sub	r8,r8,r3
   4b3a8:	4451c83a 	sub	r8,r8,r17
   4b3ac:	3023883a 	mov	r17,r6
   4b3b0:	4080202c 	andhi	r2,r8,128
   4b3b4:	10002326 	beq	r2,zero,4b444 <__adddf3+0x204>
   4b3b8:	04c02034 	movhi	r19,128
   4b3bc:	9cffffc4 	addi	r19,r19,-1
   4b3c0:	44e6703a 	and	r19,r8,r19
   4b3c4:	98007626 	beq	r19,zero,4b5a0 <__adddf3+0x360>
   4b3c8:	9809883a 	mov	r4,r19
   4b3cc:	0040f240 	call	40f24 <__clzsi2>
   4b3d0:	10fffe04 	addi	r3,r2,-8
   4b3d4:	010007c4 	movi	r4,31
   4b3d8:	20c07716 	blt	r4,r3,4b5b8 <__adddf3+0x378>
   4b3dc:	00800804 	movi	r2,32
   4b3e0:	10c5c83a 	sub	r2,r2,r3
   4b3e4:	8884d83a 	srl	r2,r17,r2
   4b3e8:	98d0983a 	sll	r8,r19,r3
   4b3ec:	88e2983a 	sll	r17,r17,r3
   4b3f0:	1204b03a 	or	r2,r2,r8
   4b3f4:	1c007416 	blt	r3,r16,4b5c8 <__adddf3+0x388>
   4b3f8:	1c21c83a 	sub	r16,r3,r16
   4b3fc:	82000044 	addi	r8,r16,1
   4b400:	00c007c4 	movi	r3,31
   4b404:	1a009116 	blt	r3,r8,4b64c <__adddf3+0x40c>
   4b408:	00c00804 	movi	r3,32
   4b40c:	1a07c83a 	sub	r3,r3,r8
   4b410:	8a08d83a 	srl	r4,r17,r8
   4b414:	88e2983a 	sll	r17,r17,r3
   4b418:	10c6983a 	sll	r3,r2,r3
   4b41c:	1210d83a 	srl	r8,r2,r8
   4b420:	8804c03a 	cmpne	r2,r17,zero
   4b424:	1906b03a 	or	r3,r3,r4
   4b428:	18a2b03a 	or	r17,r3,r2
   4b42c:	0021883a 	mov	r16,zero
   4b430:	003fa206 	br	4b2bc <__alt_data_end+0xfffe41bc>
   4b434:	1890b03a 	or	r8,r3,r2
   4b438:	40017d26 	beq	r8,zero,4ba30 <__adddf3+0x7f0>
   4b43c:	1011883a 	mov	r8,r2
   4b440:	1823883a 	mov	r17,r3
   4b444:	888001cc 	andi	r2,r17,7
   4b448:	103f9e1e 	bne	r2,zero,4b2c4 <__alt_data_end+0xfffe41c4>
   4b44c:	4004977a 	slli	r2,r8,29
   4b450:	8822d0fa 	srli	r17,r17,3
   4b454:	4010d0fa 	srli	r8,r8,3
   4b458:	9007883a 	mov	r3,r18
   4b45c:	1444b03a 	or	r2,r2,r17
   4b460:	0101ffc4 	movi	r4,2047
   4b464:	81002426 	beq	r16,r4,4b4f8 <__adddf3+0x2b8>
   4b468:	8120703a 	and	r16,r16,r4
   4b46c:	01000434 	movhi	r4,16
   4b470:	213fffc4 	addi	r4,r4,-1
   4b474:	4110703a 	and	r8,r8,r4
   4b478:	003fa806 	br	4b31c <__alt_data_end+0xfffe421c>
   4b47c:	8089c83a 	sub	r4,r16,r2
   4b480:	01005e0e 	bge	zero,r4,4b5fc <__adddf3+0x3bc>
   4b484:	10002b26 	beq	r2,zero,4b534 <__adddf3+0x2f4>
   4b488:	0081ffc4 	movi	r2,2047
   4b48c:	80bf8b26 	beq	r16,r2,4b2bc <__alt_data_end+0xfffe41bc>
   4b490:	4a402034 	orhi	r9,r9,128
   4b494:	00800e04 	movi	r2,56
   4b498:	1100a40e 	bge	r2,r4,4b72c <__adddf3+0x4ec>
   4b49c:	498cb03a 	or	r6,r9,r6
   4b4a0:	300ac03a 	cmpne	r5,r6,zero
   4b4a4:	0013883a 	mov	r9,zero
   4b4a8:	2c4b883a 	add	r5,r5,r17
   4b4ac:	2c63803a 	cmpltu	r17,r5,r17
   4b4b0:	4a11883a 	add	r8,r9,r8
   4b4b4:	8a11883a 	add	r8,r17,r8
   4b4b8:	2823883a 	mov	r17,r5
   4b4bc:	4080202c 	andhi	r2,r8,128
   4b4c0:	103fe026 	beq	r2,zero,4b444 <__alt_data_end+0xfffe4344>
   4b4c4:	84000044 	addi	r16,r16,1
   4b4c8:	0081ffc4 	movi	r2,2047
   4b4cc:	8080d226 	beq	r16,r2,4b818 <__adddf3+0x5d8>
   4b4d0:	00bfe034 	movhi	r2,65408
   4b4d4:	10bfffc4 	addi	r2,r2,-1
   4b4d8:	4090703a 	and	r8,r8,r2
   4b4dc:	880ad07a 	srli	r5,r17,1
   4b4e0:	400897fa 	slli	r4,r8,31
   4b4e4:	88c0004c 	andi	r3,r17,1
   4b4e8:	28e2b03a 	or	r17,r5,r3
   4b4ec:	4010d07a 	srli	r8,r8,1
   4b4f0:	2462b03a 	or	r17,r4,r17
   4b4f4:	003f7106 	br	4b2bc <__alt_data_end+0xfffe41bc>
   4b4f8:	4088b03a 	or	r4,r8,r2
   4b4fc:	20014526 	beq	r4,zero,4ba14 <__adddf3+0x7d4>
   4b500:	01000434 	movhi	r4,16
   4b504:	42000234 	orhi	r8,r8,8
   4b508:	213fffc4 	addi	r4,r4,-1
   4b50c:	4110703a 	and	r8,r8,r4
   4b510:	003f8206 	br	4b31c <__alt_data_end+0xfffe421c>
   4b514:	18ffffc4 	addi	r3,r3,-1
   4b518:	1800491e 	bne	r3,zero,4b640 <__adddf3+0x400>
   4b51c:	898bc83a 	sub	r5,r17,r6
   4b520:	8963803a 	cmpltu	r17,r17,r5
   4b524:	4251c83a 	sub	r8,r8,r9
   4b528:	4451c83a 	sub	r8,r8,r17
   4b52c:	2823883a 	mov	r17,r5
   4b530:	003f9f06 	br	4b3b0 <__alt_data_end+0xfffe42b0>
   4b534:	4984b03a 	or	r2,r9,r6
   4b538:	103f6026 	beq	r2,zero,4b2bc <__alt_data_end+0xfffe41bc>
   4b53c:	213fffc4 	addi	r4,r4,-1
   4b540:	2000931e 	bne	r4,zero,4b790 <__adddf3+0x550>
   4b544:	898d883a 	add	r6,r17,r6
   4b548:	3463803a 	cmpltu	r17,r6,r17
   4b54c:	4251883a 	add	r8,r8,r9
   4b550:	8a11883a 	add	r8,r17,r8
   4b554:	3023883a 	mov	r17,r6
   4b558:	003fd806 	br	4b4bc <__alt_data_end+0xfffe43bc>
   4b55c:	1800541e 	bne	r3,zero,4b6b0 <__adddf3+0x470>
   4b560:	80800044 	addi	r2,r16,1
   4b564:	1081ffcc 	andi	r2,r2,2047
   4b568:	00c00044 	movi	r3,1
   4b56c:	1880a00e 	bge	r3,r2,4b7f0 <__adddf3+0x5b0>
   4b570:	8989c83a 	sub	r4,r17,r6
   4b574:	8905803a 	cmpltu	r2,r17,r4
   4b578:	4267c83a 	sub	r19,r8,r9
   4b57c:	98a7c83a 	sub	r19,r19,r2
   4b580:	9880202c 	andhi	r2,r19,128
   4b584:	10006326 	beq	r2,zero,4b714 <__adddf3+0x4d4>
   4b588:	3463c83a 	sub	r17,r6,r17
   4b58c:	4a07c83a 	sub	r3,r9,r8
   4b590:	344d803a 	cmpltu	r6,r6,r17
   4b594:	19a7c83a 	sub	r19,r3,r6
   4b598:	3825883a 	mov	r18,r7
   4b59c:	983f8a1e 	bne	r19,zero,4b3c8 <__alt_data_end+0xfffe42c8>
   4b5a0:	8809883a 	mov	r4,r17
   4b5a4:	0040f240 	call	40f24 <__clzsi2>
   4b5a8:	10800804 	addi	r2,r2,32
   4b5ac:	10fffe04 	addi	r3,r2,-8
   4b5b0:	010007c4 	movi	r4,31
   4b5b4:	20ff890e 	bge	r4,r3,4b3dc <__alt_data_end+0xfffe42dc>
   4b5b8:	10bff604 	addi	r2,r2,-40
   4b5bc:	8884983a 	sll	r2,r17,r2
   4b5c0:	0023883a 	mov	r17,zero
   4b5c4:	1c3f8c0e 	bge	r3,r16,4b3f8 <__alt_data_end+0xfffe42f8>
   4b5c8:	023fe034 	movhi	r8,65408
   4b5cc:	423fffc4 	addi	r8,r8,-1
   4b5d0:	80e1c83a 	sub	r16,r16,r3
   4b5d4:	1210703a 	and	r8,r2,r8
   4b5d8:	003f3806 	br	4b2bc <__alt_data_end+0xfffe41bc>
   4b5dc:	9007883a 	mov	r3,r18
   4b5e0:	0011883a 	mov	r8,zero
   4b5e4:	0005883a 	mov	r2,zero
   4b5e8:	003f4c06 	br	4b31c <__alt_data_end+0xfffe421c>
   4b5ec:	498cb03a 	or	r6,r9,r6
   4b5f0:	300cc03a 	cmpne	r6,r6,zero
   4b5f4:	0007883a 	mov	r3,zero
   4b5f8:	003f6806 	br	4b39c <__alt_data_end+0xfffe429c>
   4b5fc:	20009c1e 	bne	r4,zero,4b870 <__adddf3+0x630>
   4b600:	80800044 	addi	r2,r16,1
   4b604:	1141ffcc 	andi	r5,r2,2047
   4b608:	01000044 	movi	r4,1
   4b60c:	2140670e 	bge	r4,r5,4b7ac <__adddf3+0x56c>
   4b610:	0101ffc4 	movi	r4,2047
   4b614:	11007f26 	beq	r2,r4,4b814 <__adddf3+0x5d4>
   4b618:	898d883a 	add	r6,r17,r6
   4b61c:	4247883a 	add	r3,r8,r9
   4b620:	3451803a 	cmpltu	r8,r6,r17
   4b624:	40d1883a 	add	r8,r8,r3
   4b628:	402297fa 	slli	r17,r8,31
   4b62c:	300cd07a 	srli	r6,r6,1
   4b630:	4010d07a 	srli	r8,r8,1
   4b634:	1021883a 	mov	r16,r2
   4b638:	89a2b03a 	or	r17,r17,r6
   4b63c:	003f1f06 	br	4b2bc <__alt_data_end+0xfffe41bc>
   4b640:	0081ffc4 	movi	r2,2047
   4b644:	80bf481e 	bne	r16,r2,4b368 <__alt_data_end+0xfffe4268>
   4b648:	003f1c06 	br	4b2bc <__alt_data_end+0xfffe41bc>
   4b64c:	843ff844 	addi	r16,r16,-31
   4b650:	01000804 	movi	r4,32
   4b654:	1406d83a 	srl	r3,r2,r16
   4b658:	41005026 	beq	r8,r4,4b79c <__adddf3+0x55c>
   4b65c:	01001004 	movi	r4,64
   4b660:	2211c83a 	sub	r8,r4,r8
   4b664:	1204983a 	sll	r2,r2,r8
   4b668:	88a2b03a 	or	r17,r17,r2
   4b66c:	8822c03a 	cmpne	r17,r17,zero
   4b670:	1c62b03a 	or	r17,r3,r17
   4b674:	0011883a 	mov	r8,zero
   4b678:	0021883a 	mov	r16,zero
   4b67c:	003f7106 	br	4b444 <__alt_data_end+0xfffe4344>
   4b680:	193ff804 	addi	r4,r3,-32
   4b684:	00800804 	movi	r2,32
   4b688:	4908d83a 	srl	r4,r9,r4
   4b68c:	18804526 	beq	r3,r2,4b7a4 <__adddf3+0x564>
   4b690:	00801004 	movi	r2,64
   4b694:	10c5c83a 	sub	r2,r2,r3
   4b698:	4886983a 	sll	r3,r9,r2
   4b69c:	198cb03a 	or	r6,r3,r6
   4b6a0:	300cc03a 	cmpne	r6,r6,zero
   4b6a4:	218cb03a 	or	r6,r4,r6
   4b6a8:	0007883a 	mov	r3,zero
   4b6ac:	003f3b06 	br	4b39c <__alt_data_end+0xfffe429c>
   4b6b0:	80002a26 	beq	r16,zero,4b75c <__adddf3+0x51c>
   4b6b4:	0101ffc4 	movi	r4,2047
   4b6b8:	11006826 	beq	r2,r4,4b85c <__adddf3+0x61c>
   4b6bc:	00c7c83a 	sub	r3,zero,r3
   4b6c0:	42002034 	orhi	r8,r8,128
   4b6c4:	01000e04 	movi	r4,56
   4b6c8:	20c07c16 	blt	r4,r3,4b8bc <__adddf3+0x67c>
   4b6cc:	010007c4 	movi	r4,31
   4b6d0:	20c0da16 	blt	r4,r3,4ba3c <__adddf3+0x7fc>
   4b6d4:	01000804 	movi	r4,32
   4b6d8:	20c9c83a 	sub	r4,r4,r3
   4b6dc:	4114983a 	sll	r10,r8,r4
   4b6e0:	88cad83a 	srl	r5,r17,r3
   4b6e4:	8908983a 	sll	r4,r17,r4
   4b6e8:	40c6d83a 	srl	r3,r8,r3
   4b6ec:	5162b03a 	or	r17,r10,r5
   4b6f0:	2008c03a 	cmpne	r4,r4,zero
   4b6f4:	8922b03a 	or	r17,r17,r4
   4b6f8:	3463c83a 	sub	r17,r6,r17
   4b6fc:	48c7c83a 	sub	r3,r9,r3
   4b700:	344d803a 	cmpltu	r6,r6,r17
   4b704:	1991c83a 	sub	r8,r3,r6
   4b708:	1021883a 	mov	r16,r2
   4b70c:	3825883a 	mov	r18,r7
   4b710:	003f2706 	br	4b3b0 <__alt_data_end+0xfffe42b0>
   4b714:	24d0b03a 	or	r8,r4,r19
   4b718:	40001b1e 	bne	r8,zero,4b788 <__adddf3+0x548>
   4b71c:	0005883a 	mov	r2,zero
   4b720:	0007883a 	mov	r3,zero
   4b724:	0021883a 	mov	r16,zero
   4b728:	003f4d06 	br	4b460 <__alt_data_end+0xfffe4360>
   4b72c:	008007c4 	movi	r2,31
   4b730:	11003c16 	blt	r2,r4,4b824 <__adddf3+0x5e4>
   4b734:	00800804 	movi	r2,32
   4b738:	1105c83a 	sub	r2,r2,r4
   4b73c:	488e983a 	sll	r7,r9,r2
   4b740:	310ad83a 	srl	r5,r6,r4
   4b744:	3084983a 	sll	r2,r6,r2
   4b748:	4912d83a 	srl	r9,r9,r4
   4b74c:	394ab03a 	or	r5,r7,r5
   4b750:	1004c03a 	cmpne	r2,r2,zero
   4b754:	288ab03a 	or	r5,r5,r2
   4b758:	003f5306 	br	4b4a8 <__alt_data_end+0xfffe43a8>
   4b75c:	4448b03a 	or	r4,r8,r17
   4b760:	20003e26 	beq	r4,zero,4b85c <__adddf3+0x61c>
   4b764:	00c6303a 	nor	r3,zero,r3
   4b768:	18003a1e 	bne	r3,zero,4b854 <__adddf3+0x614>
   4b76c:	3463c83a 	sub	r17,r6,r17
   4b770:	4a07c83a 	sub	r3,r9,r8
   4b774:	344d803a 	cmpltu	r6,r6,r17
   4b778:	1991c83a 	sub	r8,r3,r6
   4b77c:	1021883a 	mov	r16,r2
   4b780:	3825883a 	mov	r18,r7
   4b784:	003f0a06 	br	4b3b0 <__alt_data_end+0xfffe42b0>
   4b788:	2023883a 	mov	r17,r4
   4b78c:	003f0d06 	br	4b3c4 <__alt_data_end+0xfffe42c4>
   4b790:	0081ffc4 	movi	r2,2047
   4b794:	80bf3f1e 	bne	r16,r2,4b494 <__alt_data_end+0xfffe4394>
   4b798:	003ec806 	br	4b2bc <__alt_data_end+0xfffe41bc>
   4b79c:	0005883a 	mov	r2,zero
   4b7a0:	003fb106 	br	4b668 <__alt_data_end+0xfffe4568>
   4b7a4:	0007883a 	mov	r3,zero
   4b7a8:	003fbc06 	br	4b69c <__alt_data_end+0xfffe459c>
   4b7ac:	4444b03a 	or	r2,r8,r17
   4b7b0:	8000871e 	bne	r16,zero,4b9d0 <__adddf3+0x790>
   4b7b4:	1000ba26 	beq	r2,zero,4baa0 <__adddf3+0x860>
   4b7b8:	4984b03a 	or	r2,r9,r6
   4b7bc:	103ebf26 	beq	r2,zero,4b2bc <__alt_data_end+0xfffe41bc>
   4b7c0:	8985883a 	add	r2,r17,r6
   4b7c4:	4247883a 	add	r3,r8,r9
   4b7c8:	1451803a 	cmpltu	r8,r2,r17
   4b7cc:	40d1883a 	add	r8,r8,r3
   4b7d0:	40c0202c 	andhi	r3,r8,128
   4b7d4:	1023883a 	mov	r17,r2
   4b7d8:	183f1a26 	beq	r3,zero,4b444 <__alt_data_end+0xfffe4344>
   4b7dc:	00bfe034 	movhi	r2,65408
   4b7e0:	10bfffc4 	addi	r2,r2,-1
   4b7e4:	2021883a 	mov	r16,r4
   4b7e8:	4090703a 	and	r8,r8,r2
   4b7ec:	003eb306 	br	4b2bc <__alt_data_end+0xfffe41bc>
   4b7f0:	4444b03a 	or	r2,r8,r17
   4b7f4:	8000291e 	bne	r16,zero,4b89c <__adddf3+0x65c>
   4b7f8:	10004b1e 	bne	r2,zero,4b928 <__adddf3+0x6e8>
   4b7fc:	4990b03a 	or	r8,r9,r6
   4b800:	40008b26 	beq	r8,zero,4ba30 <__adddf3+0x7f0>
   4b804:	4811883a 	mov	r8,r9
   4b808:	3023883a 	mov	r17,r6
   4b80c:	3825883a 	mov	r18,r7
   4b810:	003eaa06 	br	4b2bc <__alt_data_end+0xfffe41bc>
   4b814:	1021883a 	mov	r16,r2
   4b818:	0011883a 	mov	r8,zero
   4b81c:	0005883a 	mov	r2,zero
   4b820:	003f0f06 	br	4b460 <__alt_data_end+0xfffe4360>
   4b824:	217ff804 	addi	r5,r4,-32
   4b828:	00800804 	movi	r2,32
   4b82c:	494ad83a 	srl	r5,r9,r5
   4b830:	20807d26 	beq	r4,r2,4ba28 <__adddf3+0x7e8>
   4b834:	00801004 	movi	r2,64
   4b838:	1109c83a 	sub	r4,r2,r4
   4b83c:	4912983a 	sll	r9,r9,r4
   4b840:	498cb03a 	or	r6,r9,r6
   4b844:	300cc03a 	cmpne	r6,r6,zero
   4b848:	298ab03a 	or	r5,r5,r6
   4b84c:	0013883a 	mov	r9,zero
   4b850:	003f1506 	br	4b4a8 <__alt_data_end+0xfffe43a8>
   4b854:	0101ffc4 	movi	r4,2047
   4b858:	113f9a1e 	bne	r2,r4,4b6c4 <__alt_data_end+0xfffe45c4>
   4b85c:	4811883a 	mov	r8,r9
   4b860:	3023883a 	mov	r17,r6
   4b864:	1021883a 	mov	r16,r2
   4b868:	3825883a 	mov	r18,r7
   4b86c:	003e9306 	br	4b2bc <__alt_data_end+0xfffe41bc>
   4b870:	8000161e 	bne	r16,zero,4b8cc <__adddf3+0x68c>
   4b874:	444ab03a 	or	r5,r8,r17
   4b878:	28005126 	beq	r5,zero,4b9c0 <__adddf3+0x780>
   4b87c:	0108303a 	nor	r4,zero,r4
   4b880:	20004d1e 	bne	r4,zero,4b9b8 <__adddf3+0x778>
   4b884:	89a3883a 	add	r17,r17,r6
   4b888:	4253883a 	add	r9,r8,r9
   4b88c:	898d803a 	cmpltu	r6,r17,r6
   4b890:	3251883a 	add	r8,r6,r9
   4b894:	1021883a 	mov	r16,r2
   4b898:	003f0806 	br	4b4bc <__alt_data_end+0xfffe43bc>
   4b89c:	1000301e 	bne	r2,zero,4b960 <__adddf3+0x720>
   4b8a0:	4984b03a 	or	r2,r9,r6
   4b8a4:	10007126 	beq	r2,zero,4ba6c <__adddf3+0x82c>
   4b8a8:	4811883a 	mov	r8,r9
   4b8ac:	3023883a 	mov	r17,r6
   4b8b0:	3825883a 	mov	r18,r7
   4b8b4:	0401ffc4 	movi	r16,2047
   4b8b8:	003e8006 	br	4b2bc <__alt_data_end+0xfffe41bc>
   4b8bc:	4462b03a 	or	r17,r8,r17
   4b8c0:	8822c03a 	cmpne	r17,r17,zero
   4b8c4:	0007883a 	mov	r3,zero
   4b8c8:	003f8b06 	br	4b6f8 <__alt_data_end+0xfffe45f8>
   4b8cc:	0141ffc4 	movi	r5,2047
   4b8d0:	11403b26 	beq	r2,r5,4b9c0 <__adddf3+0x780>
   4b8d4:	0109c83a 	sub	r4,zero,r4
   4b8d8:	42002034 	orhi	r8,r8,128
   4b8dc:	01400e04 	movi	r5,56
   4b8e0:	29006716 	blt	r5,r4,4ba80 <__adddf3+0x840>
   4b8e4:	014007c4 	movi	r5,31
   4b8e8:	29007016 	blt	r5,r4,4baac <__adddf3+0x86c>
   4b8ec:	01400804 	movi	r5,32
   4b8f0:	290bc83a 	sub	r5,r5,r4
   4b8f4:	4154983a 	sll	r10,r8,r5
   4b8f8:	890ed83a 	srl	r7,r17,r4
   4b8fc:	894a983a 	sll	r5,r17,r5
   4b900:	4108d83a 	srl	r4,r8,r4
   4b904:	51e2b03a 	or	r17,r10,r7
   4b908:	280ac03a 	cmpne	r5,r5,zero
   4b90c:	8962b03a 	or	r17,r17,r5
   4b910:	89a3883a 	add	r17,r17,r6
   4b914:	2253883a 	add	r9,r4,r9
   4b918:	898d803a 	cmpltu	r6,r17,r6
   4b91c:	3251883a 	add	r8,r6,r9
   4b920:	1021883a 	mov	r16,r2
   4b924:	003ee506 	br	4b4bc <__alt_data_end+0xfffe43bc>
   4b928:	4984b03a 	or	r2,r9,r6
   4b92c:	103e6326 	beq	r2,zero,4b2bc <__alt_data_end+0xfffe41bc>
   4b930:	8987c83a 	sub	r3,r17,r6
   4b934:	88c9803a 	cmpltu	r4,r17,r3
   4b938:	4245c83a 	sub	r2,r8,r9
   4b93c:	1105c83a 	sub	r2,r2,r4
   4b940:	1100202c 	andhi	r4,r2,128
   4b944:	203ebb26 	beq	r4,zero,4b434 <__alt_data_end+0xfffe4334>
   4b948:	3463c83a 	sub	r17,r6,r17
   4b94c:	4a07c83a 	sub	r3,r9,r8
   4b950:	344d803a 	cmpltu	r6,r6,r17
   4b954:	1991c83a 	sub	r8,r3,r6
   4b958:	3825883a 	mov	r18,r7
   4b95c:	003e5706 	br	4b2bc <__alt_data_end+0xfffe41bc>
   4b960:	4984b03a 	or	r2,r9,r6
   4b964:	10002e26 	beq	r2,zero,4ba20 <__adddf3+0x7e0>
   4b968:	4004d0fa 	srli	r2,r8,3
   4b96c:	8822d0fa 	srli	r17,r17,3
   4b970:	4010977a 	slli	r8,r8,29
   4b974:	10c0022c 	andhi	r3,r2,8
   4b978:	4462b03a 	or	r17,r8,r17
   4b97c:	18000826 	beq	r3,zero,4b9a0 <__adddf3+0x760>
   4b980:	4808d0fa 	srli	r4,r9,3
   4b984:	20c0022c 	andhi	r3,r4,8
   4b988:	1800051e 	bne	r3,zero,4b9a0 <__adddf3+0x760>
   4b98c:	300cd0fa 	srli	r6,r6,3
   4b990:	4806977a 	slli	r3,r9,29
   4b994:	2005883a 	mov	r2,r4
   4b998:	3825883a 	mov	r18,r7
   4b99c:	19a2b03a 	or	r17,r3,r6
   4b9a0:	8810d77a 	srli	r8,r17,29
   4b9a4:	100490fa 	slli	r2,r2,3
   4b9a8:	882290fa 	slli	r17,r17,3
   4b9ac:	0401ffc4 	movi	r16,2047
   4b9b0:	4090b03a 	or	r8,r8,r2
   4b9b4:	003e4106 	br	4b2bc <__alt_data_end+0xfffe41bc>
   4b9b8:	0141ffc4 	movi	r5,2047
   4b9bc:	117fc71e 	bne	r2,r5,4b8dc <__alt_data_end+0xfffe47dc>
   4b9c0:	4811883a 	mov	r8,r9
   4b9c4:	3023883a 	mov	r17,r6
   4b9c8:	1021883a 	mov	r16,r2
   4b9cc:	003e3b06 	br	4b2bc <__alt_data_end+0xfffe41bc>
   4b9d0:	10002f26 	beq	r2,zero,4ba90 <__adddf3+0x850>
   4b9d4:	4984b03a 	or	r2,r9,r6
   4b9d8:	10001126 	beq	r2,zero,4ba20 <__adddf3+0x7e0>
   4b9dc:	4004d0fa 	srli	r2,r8,3
   4b9e0:	8822d0fa 	srli	r17,r17,3
   4b9e4:	4010977a 	slli	r8,r8,29
   4b9e8:	10c0022c 	andhi	r3,r2,8
   4b9ec:	4462b03a 	or	r17,r8,r17
   4b9f0:	183feb26 	beq	r3,zero,4b9a0 <__alt_data_end+0xfffe48a0>
   4b9f4:	4808d0fa 	srli	r4,r9,3
   4b9f8:	20c0022c 	andhi	r3,r4,8
   4b9fc:	183fe81e 	bne	r3,zero,4b9a0 <__alt_data_end+0xfffe48a0>
   4ba00:	300cd0fa 	srli	r6,r6,3
   4ba04:	4806977a 	slli	r3,r9,29
   4ba08:	2005883a 	mov	r2,r4
   4ba0c:	19a2b03a 	or	r17,r3,r6
   4ba10:	003fe306 	br	4b9a0 <__alt_data_end+0xfffe48a0>
   4ba14:	0011883a 	mov	r8,zero
   4ba18:	0005883a 	mov	r2,zero
   4ba1c:	003e3f06 	br	4b31c <__alt_data_end+0xfffe421c>
   4ba20:	0401ffc4 	movi	r16,2047
   4ba24:	003e2506 	br	4b2bc <__alt_data_end+0xfffe41bc>
   4ba28:	0013883a 	mov	r9,zero
   4ba2c:	003f8406 	br	4b840 <__alt_data_end+0xfffe4740>
   4ba30:	0005883a 	mov	r2,zero
   4ba34:	0007883a 	mov	r3,zero
   4ba38:	003e8906 	br	4b460 <__alt_data_end+0xfffe4360>
   4ba3c:	197ff804 	addi	r5,r3,-32
   4ba40:	01000804 	movi	r4,32
   4ba44:	414ad83a 	srl	r5,r8,r5
   4ba48:	19002426 	beq	r3,r4,4badc <__adddf3+0x89c>
   4ba4c:	01001004 	movi	r4,64
   4ba50:	20c7c83a 	sub	r3,r4,r3
   4ba54:	40c6983a 	sll	r3,r8,r3
   4ba58:	1c46b03a 	or	r3,r3,r17
   4ba5c:	1806c03a 	cmpne	r3,r3,zero
   4ba60:	28e2b03a 	or	r17,r5,r3
   4ba64:	0007883a 	mov	r3,zero
   4ba68:	003f2306 	br	4b6f8 <__alt_data_end+0xfffe45f8>
   4ba6c:	0007883a 	mov	r3,zero
   4ba70:	5811883a 	mov	r8,r11
   4ba74:	00bfffc4 	movi	r2,-1
   4ba78:	0401ffc4 	movi	r16,2047
   4ba7c:	003e7806 	br	4b460 <__alt_data_end+0xfffe4360>
   4ba80:	4462b03a 	or	r17,r8,r17
   4ba84:	8822c03a 	cmpne	r17,r17,zero
   4ba88:	0009883a 	mov	r4,zero
   4ba8c:	003fa006 	br	4b910 <__alt_data_end+0xfffe4810>
   4ba90:	4811883a 	mov	r8,r9
   4ba94:	3023883a 	mov	r17,r6
   4ba98:	0401ffc4 	movi	r16,2047
   4ba9c:	003e0706 	br	4b2bc <__alt_data_end+0xfffe41bc>
   4baa0:	4811883a 	mov	r8,r9
   4baa4:	3023883a 	mov	r17,r6
   4baa8:	003e0406 	br	4b2bc <__alt_data_end+0xfffe41bc>
   4baac:	21fff804 	addi	r7,r4,-32
   4bab0:	01400804 	movi	r5,32
   4bab4:	41ced83a 	srl	r7,r8,r7
   4bab8:	21400a26 	beq	r4,r5,4bae4 <__adddf3+0x8a4>
   4babc:	01401004 	movi	r5,64
   4bac0:	2909c83a 	sub	r4,r5,r4
   4bac4:	4108983a 	sll	r4,r8,r4
   4bac8:	2448b03a 	or	r4,r4,r17
   4bacc:	2008c03a 	cmpne	r4,r4,zero
   4bad0:	3922b03a 	or	r17,r7,r4
   4bad4:	0009883a 	mov	r4,zero
   4bad8:	003f8d06 	br	4b910 <__alt_data_end+0xfffe4810>
   4badc:	0007883a 	mov	r3,zero
   4bae0:	003fdd06 	br	4ba58 <__alt_data_end+0xfffe4958>
   4bae4:	0009883a 	mov	r4,zero
   4bae8:	003ff706 	br	4bac8 <__alt_data_end+0xfffe49c8>

0004baec <__eqdf2>:
   4baec:	2804d53a 	srli	r2,r5,20
   4baf0:	3806d53a 	srli	r3,r7,20
   4baf4:	02000434 	movhi	r8,16
   4baf8:	423fffc4 	addi	r8,r8,-1
   4bafc:	1081ffcc 	andi	r2,r2,2047
   4bb00:	0281ffc4 	movi	r10,2047
   4bb04:	2a12703a 	and	r9,r5,r8
   4bb08:	18c1ffcc 	andi	r3,r3,2047
   4bb0c:	3a10703a 	and	r8,r7,r8
   4bb10:	280ad7fa 	srli	r5,r5,31
   4bb14:	380ed7fa 	srli	r7,r7,31
   4bb18:	12801026 	beq	r2,r10,4bb5c <__eqdf2+0x70>
   4bb1c:	0281ffc4 	movi	r10,2047
   4bb20:	1a800a26 	beq	r3,r10,4bb4c <__eqdf2+0x60>
   4bb24:	10c00226 	beq	r2,r3,4bb30 <__eqdf2+0x44>
   4bb28:	00800044 	movi	r2,1
   4bb2c:	f800283a 	ret
   4bb30:	4a3ffd1e 	bne	r9,r8,4bb28 <__alt_data_end+0xfffe4a28>
   4bb34:	21bffc1e 	bne	r4,r6,4bb28 <__alt_data_end+0xfffe4a28>
   4bb38:	29c00c26 	beq	r5,r7,4bb6c <__eqdf2+0x80>
   4bb3c:	103ffa1e 	bne	r2,zero,4bb28 <__alt_data_end+0xfffe4a28>
   4bb40:	2244b03a 	or	r2,r4,r9
   4bb44:	1004c03a 	cmpne	r2,r2,zero
   4bb48:	f800283a 	ret
   4bb4c:	3214b03a 	or	r10,r6,r8
   4bb50:	503ff426 	beq	r10,zero,4bb24 <__alt_data_end+0xfffe4a24>
   4bb54:	00800044 	movi	r2,1
   4bb58:	f800283a 	ret
   4bb5c:	2254b03a 	or	r10,r4,r9
   4bb60:	503fee26 	beq	r10,zero,4bb1c <__alt_data_end+0xfffe4a1c>
   4bb64:	00800044 	movi	r2,1
   4bb68:	f800283a 	ret
   4bb6c:	0005883a 	mov	r2,zero
   4bb70:	f800283a 	ret

0004bb74 <__gedf2>:
   4bb74:	2804d53a 	srli	r2,r5,20
   4bb78:	3806d53a 	srli	r3,r7,20
   4bb7c:	02000434 	movhi	r8,16
   4bb80:	423fffc4 	addi	r8,r8,-1
   4bb84:	1081ffcc 	andi	r2,r2,2047
   4bb88:	0241ffc4 	movi	r9,2047
   4bb8c:	2a14703a 	and	r10,r5,r8
   4bb90:	18c1ffcc 	andi	r3,r3,2047
   4bb94:	3a10703a 	and	r8,r7,r8
   4bb98:	280ad7fa 	srli	r5,r5,31
   4bb9c:	380ed7fa 	srli	r7,r7,31
   4bba0:	12401d26 	beq	r2,r9,4bc18 <__gedf2+0xa4>
   4bba4:	0241ffc4 	movi	r9,2047
   4bba8:	1a401226 	beq	r3,r9,4bbf4 <__gedf2+0x80>
   4bbac:	1000081e 	bne	r2,zero,4bbd0 <__gedf2+0x5c>
   4bbb0:	2296b03a 	or	r11,r4,r10
   4bbb4:	5813003a 	cmpeq	r9,r11,zero
   4bbb8:	1800091e 	bne	r3,zero,4bbe0 <__gedf2+0x6c>
   4bbbc:	3218b03a 	or	r12,r6,r8
   4bbc0:	6000071e 	bne	r12,zero,4bbe0 <__gedf2+0x6c>
   4bbc4:	0005883a 	mov	r2,zero
   4bbc8:	5800101e 	bne	r11,zero,4bc0c <__gedf2+0x98>
   4bbcc:	f800283a 	ret
   4bbd0:	18000c1e 	bne	r3,zero,4bc04 <__gedf2+0x90>
   4bbd4:	3212b03a 	or	r9,r6,r8
   4bbd8:	48000c26 	beq	r9,zero,4bc0c <__gedf2+0x98>
   4bbdc:	0013883a 	mov	r9,zero
   4bbe0:	39c03fcc 	andi	r7,r7,255
   4bbe4:	48000826 	beq	r9,zero,4bc08 <__gedf2+0x94>
   4bbe8:	38000926 	beq	r7,zero,4bc10 <__gedf2+0x9c>
   4bbec:	00800044 	movi	r2,1
   4bbf0:	f800283a 	ret
   4bbf4:	3212b03a 	or	r9,r6,r8
   4bbf8:	483fec26 	beq	r9,zero,4bbac <__alt_data_end+0xfffe4aac>
   4bbfc:	00bfff84 	movi	r2,-2
   4bc00:	f800283a 	ret
   4bc04:	39c03fcc 	andi	r7,r7,255
   4bc08:	29c00626 	beq	r5,r7,4bc24 <__gedf2+0xb0>
   4bc0c:	283ff726 	beq	r5,zero,4bbec <__alt_data_end+0xfffe4aec>
   4bc10:	00bfffc4 	movi	r2,-1
   4bc14:	f800283a 	ret
   4bc18:	2292b03a 	or	r9,r4,r10
   4bc1c:	483fe126 	beq	r9,zero,4bba4 <__alt_data_end+0xfffe4aa4>
   4bc20:	003ff606 	br	4bbfc <__alt_data_end+0xfffe4afc>
   4bc24:	18bff916 	blt	r3,r2,4bc0c <__alt_data_end+0xfffe4b0c>
   4bc28:	10c00316 	blt	r2,r3,4bc38 <__gedf2+0xc4>
   4bc2c:	42bff736 	bltu	r8,r10,4bc0c <__alt_data_end+0xfffe4b0c>
   4bc30:	52000326 	beq	r10,r8,4bc40 <__gedf2+0xcc>
   4bc34:	5200042e 	bgeu	r10,r8,4bc48 <__gedf2+0xd4>
   4bc38:	283fec1e 	bne	r5,zero,4bbec <__alt_data_end+0xfffe4aec>
   4bc3c:	003ff406 	br	4bc10 <__alt_data_end+0xfffe4b10>
   4bc40:	313ff236 	bltu	r6,r4,4bc0c <__alt_data_end+0xfffe4b0c>
   4bc44:	21bffc36 	bltu	r4,r6,4bc38 <__alt_data_end+0xfffe4b38>
   4bc48:	0005883a 	mov	r2,zero
   4bc4c:	f800283a 	ret

0004bc50 <__ledf2>:
   4bc50:	2804d53a 	srli	r2,r5,20
   4bc54:	3810d53a 	srli	r8,r7,20
   4bc58:	00c00434 	movhi	r3,16
   4bc5c:	18ffffc4 	addi	r3,r3,-1
   4bc60:	1081ffcc 	andi	r2,r2,2047
   4bc64:	0241ffc4 	movi	r9,2047
   4bc68:	28d4703a 	and	r10,r5,r3
   4bc6c:	4201ffcc 	andi	r8,r8,2047
   4bc70:	38c6703a 	and	r3,r7,r3
   4bc74:	280ad7fa 	srli	r5,r5,31
   4bc78:	380ed7fa 	srli	r7,r7,31
   4bc7c:	12401f26 	beq	r2,r9,4bcfc <__ledf2+0xac>
   4bc80:	0241ffc4 	movi	r9,2047
   4bc84:	42401426 	beq	r8,r9,4bcd8 <__ledf2+0x88>
   4bc88:	1000091e 	bne	r2,zero,4bcb0 <__ledf2+0x60>
   4bc8c:	2296b03a 	or	r11,r4,r10
   4bc90:	5813003a 	cmpeq	r9,r11,zero
   4bc94:	29403fcc 	andi	r5,r5,255
   4bc98:	40000a1e 	bne	r8,zero,4bcc4 <__ledf2+0x74>
   4bc9c:	30d8b03a 	or	r12,r6,r3
   4bca0:	6000081e 	bne	r12,zero,4bcc4 <__ledf2+0x74>
   4bca4:	0005883a 	mov	r2,zero
   4bca8:	5800111e 	bne	r11,zero,4bcf0 <__ledf2+0xa0>
   4bcac:	f800283a 	ret
   4bcb0:	29403fcc 	andi	r5,r5,255
   4bcb4:	40000c1e 	bne	r8,zero,4bce8 <__ledf2+0x98>
   4bcb8:	30d2b03a 	or	r9,r6,r3
   4bcbc:	48000c26 	beq	r9,zero,4bcf0 <__ledf2+0xa0>
   4bcc0:	0013883a 	mov	r9,zero
   4bcc4:	39c03fcc 	andi	r7,r7,255
   4bcc8:	48000826 	beq	r9,zero,4bcec <__ledf2+0x9c>
   4bccc:	38001126 	beq	r7,zero,4bd14 <__ledf2+0xc4>
   4bcd0:	00800044 	movi	r2,1
   4bcd4:	f800283a 	ret
   4bcd8:	30d2b03a 	or	r9,r6,r3
   4bcdc:	483fea26 	beq	r9,zero,4bc88 <__alt_data_end+0xfffe4b88>
   4bce0:	00800084 	movi	r2,2
   4bce4:	f800283a 	ret
   4bce8:	39c03fcc 	andi	r7,r7,255
   4bcec:	39400726 	beq	r7,r5,4bd0c <__ledf2+0xbc>
   4bcf0:	2800081e 	bne	r5,zero,4bd14 <__ledf2+0xc4>
   4bcf4:	00800044 	movi	r2,1
   4bcf8:	f800283a 	ret
   4bcfc:	2292b03a 	or	r9,r4,r10
   4bd00:	483fdf26 	beq	r9,zero,4bc80 <__alt_data_end+0xfffe4b80>
   4bd04:	00800084 	movi	r2,2
   4bd08:	f800283a 	ret
   4bd0c:	4080030e 	bge	r8,r2,4bd1c <__ledf2+0xcc>
   4bd10:	383fef26 	beq	r7,zero,4bcd0 <__alt_data_end+0xfffe4bd0>
   4bd14:	00bfffc4 	movi	r2,-1
   4bd18:	f800283a 	ret
   4bd1c:	123feb16 	blt	r2,r8,4bccc <__alt_data_end+0xfffe4bcc>
   4bd20:	1abff336 	bltu	r3,r10,4bcf0 <__alt_data_end+0xfffe4bf0>
   4bd24:	50c00326 	beq	r10,r3,4bd34 <__ledf2+0xe4>
   4bd28:	50c0042e 	bgeu	r10,r3,4bd3c <__ledf2+0xec>
   4bd2c:	283fe81e 	bne	r5,zero,4bcd0 <__alt_data_end+0xfffe4bd0>
   4bd30:	003ff806 	br	4bd14 <__alt_data_end+0xfffe4c14>
   4bd34:	313fee36 	bltu	r6,r4,4bcf0 <__alt_data_end+0xfffe4bf0>
   4bd38:	21bffc36 	bltu	r4,r6,4bd2c <__alt_data_end+0xfffe4c2c>
   4bd3c:	0005883a 	mov	r2,zero
   4bd40:	f800283a 	ret

0004bd44 <__muldf3>:
   4bd44:	defff304 	addi	sp,sp,-52
   4bd48:	2804d53a 	srli	r2,r5,20
   4bd4c:	dd800915 	stw	r22,36(sp)
   4bd50:	282cd7fa 	srli	r22,r5,31
   4bd54:	dc000315 	stw	r16,12(sp)
   4bd58:	04000434 	movhi	r16,16
   4bd5c:	dd400815 	stw	r21,32(sp)
   4bd60:	dc800515 	stw	r18,20(sp)
   4bd64:	843fffc4 	addi	r16,r16,-1
   4bd68:	dfc00c15 	stw	ra,48(sp)
   4bd6c:	df000b15 	stw	fp,44(sp)
   4bd70:	ddc00a15 	stw	r23,40(sp)
   4bd74:	dd000715 	stw	r20,28(sp)
   4bd78:	dcc00615 	stw	r19,24(sp)
   4bd7c:	dc400415 	stw	r17,16(sp)
   4bd80:	1481ffcc 	andi	r18,r2,2047
   4bd84:	2c20703a 	and	r16,r5,r16
   4bd88:	b02b883a 	mov	r21,r22
   4bd8c:	b2403fcc 	andi	r9,r22,255
   4bd90:	90006026 	beq	r18,zero,4bf14 <__muldf3+0x1d0>
   4bd94:	0081ffc4 	movi	r2,2047
   4bd98:	2029883a 	mov	r20,r4
   4bd9c:	90803626 	beq	r18,r2,4be78 <__muldf3+0x134>
   4bda0:	80800434 	orhi	r2,r16,16
   4bda4:	100490fa 	slli	r2,r2,3
   4bda8:	2020d77a 	srli	r16,r4,29
   4bdac:	202890fa 	slli	r20,r4,3
   4bdb0:	94bf0044 	addi	r18,r18,-1023
   4bdb4:	80a0b03a 	or	r16,r16,r2
   4bdb8:	0027883a 	mov	r19,zero
   4bdbc:	0039883a 	mov	fp,zero
   4bdc0:	3804d53a 	srli	r2,r7,20
   4bdc4:	382ed7fa 	srli	r23,r7,31
   4bdc8:	04400434 	movhi	r17,16
   4bdcc:	8c7fffc4 	addi	r17,r17,-1
   4bdd0:	1081ffcc 	andi	r2,r2,2047
   4bdd4:	3011883a 	mov	r8,r6
   4bdd8:	3c62703a 	and	r17,r7,r17
   4bddc:	ba803fcc 	andi	r10,r23,255
   4bde0:	10006d26 	beq	r2,zero,4bf98 <__muldf3+0x254>
   4bde4:	00c1ffc4 	movi	r3,2047
   4bde8:	10c06526 	beq	r2,r3,4bf80 <__muldf3+0x23c>
   4bdec:	88c00434 	orhi	r3,r17,16
   4bdf0:	180690fa 	slli	r3,r3,3
   4bdf4:	3022d77a 	srli	r17,r6,29
   4bdf8:	301090fa 	slli	r8,r6,3
   4bdfc:	10bf0044 	addi	r2,r2,-1023
   4be00:	88e2b03a 	or	r17,r17,r3
   4be04:	000b883a 	mov	r5,zero
   4be08:	9085883a 	add	r2,r18,r2
   4be0c:	2cc8b03a 	or	r4,r5,r19
   4be10:	00c003c4 	movi	r3,15
   4be14:	bdacf03a 	xor	r22,r23,r22
   4be18:	12c00044 	addi	r11,r2,1
   4be1c:	19009936 	bltu	r3,r4,4c084 <__muldf3+0x340>
   4be20:	200890ba 	slli	r4,r4,2
   4be24:	00c00174 	movhi	r3,5
   4be28:	18ef8e04 	addi	r3,r3,-16840
   4be2c:	20c9883a 	add	r4,r4,r3
   4be30:	20c00017 	ldw	r3,0(r4)
   4be34:	1800683a 	jmp	r3
   4be38:	0004c084 	movi	zero,4866
   4be3c:	0004be98 	cmpnei	zero,zero,4858
   4be40:	0004be98 	cmpnei	zero,zero,4858
   4be44:	0004be94 	movui	zero,4858
   4be48:	0004c060 	cmpeqi	zero,zero,4865
   4be4c:	0004c060 	cmpeqi	zero,zero,4865
   4be50:	0004c048 	cmpgei	zero,zero,4865
   4be54:	0004be94 	movui	zero,4858
   4be58:	0004c060 	cmpeqi	zero,zero,4865
   4be5c:	0004c048 	cmpgei	zero,zero,4865
   4be60:	0004c060 	cmpeqi	zero,zero,4865
   4be64:	0004be94 	movui	zero,4858
   4be68:	0004c070 	cmpltui	zero,zero,4865
   4be6c:	0004c070 	cmpltui	zero,zero,4865
   4be70:	0004c070 	cmpltui	zero,zero,4865
   4be74:	0004c28c 	andi	zero,zero,4874
   4be78:	2404b03a 	or	r2,r4,r16
   4be7c:	10006f1e 	bne	r2,zero,4c03c <__muldf3+0x2f8>
   4be80:	04c00204 	movi	r19,8
   4be84:	0021883a 	mov	r16,zero
   4be88:	0029883a 	mov	r20,zero
   4be8c:	07000084 	movi	fp,2
   4be90:	003fcb06 	br	4bdc0 <__alt_data_end+0xfffe4cc0>
   4be94:	502d883a 	mov	r22,r10
   4be98:	00800084 	movi	r2,2
   4be9c:	28805726 	beq	r5,r2,4bffc <__muldf3+0x2b8>
   4bea0:	008000c4 	movi	r2,3
   4bea4:	28816626 	beq	r5,r2,4c440 <__muldf3+0x6fc>
   4bea8:	00800044 	movi	r2,1
   4beac:	2881411e 	bne	r5,r2,4c3b4 <__muldf3+0x670>
   4beb0:	b02b883a 	mov	r21,r22
   4beb4:	0005883a 	mov	r2,zero
   4beb8:	000b883a 	mov	r5,zero
   4bebc:	0029883a 	mov	r20,zero
   4bec0:	1004953a 	slli	r2,r2,20
   4bec4:	a8c03fcc 	andi	r3,r21,255
   4bec8:	04400434 	movhi	r17,16
   4becc:	8c7fffc4 	addi	r17,r17,-1
   4bed0:	180697fa 	slli	r3,r3,31
   4bed4:	2c4a703a 	and	r5,r5,r17
   4bed8:	288ab03a 	or	r5,r5,r2
   4bedc:	28c6b03a 	or	r3,r5,r3
   4bee0:	a005883a 	mov	r2,r20
   4bee4:	dfc00c17 	ldw	ra,48(sp)
   4bee8:	df000b17 	ldw	fp,44(sp)
   4beec:	ddc00a17 	ldw	r23,40(sp)
   4bef0:	dd800917 	ldw	r22,36(sp)
   4bef4:	dd400817 	ldw	r21,32(sp)
   4bef8:	dd000717 	ldw	r20,28(sp)
   4befc:	dcc00617 	ldw	r19,24(sp)
   4bf00:	dc800517 	ldw	r18,20(sp)
   4bf04:	dc400417 	ldw	r17,16(sp)
   4bf08:	dc000317 	ldw	r16,12(sp)
   4bf0c:	dec00d04 	addi	sp,sp,52
   4bf10:	f800283a 	ret
   4bf14:	2404b03a 	or	r2,r4,r16
   4bf18:	2027883a 	mov	r19,r4
   4bf1c:	10004226 	beq	r2,zero,4c028 <__muldf3+0x2e4>
   4bf20:	8000fc26 	beq	r16,zero,4c314 <__muldf3+0x5d0>
   4bf24:	8009883a 	mov	r4,r16
   4bf28:	d9800215 	stw	r6,8(sp)
   4bf2c:	d9c00015 	stw	r7,0(sp)
   4bf30:	da400115 	stw	r9,4(sp)
   4bf34:	0040f240 	call	40f24 <__clzsi2>
   4bf38:	d9800217 	ldw	r6,8(sp)
   4bf3c:	d9c00017 	ldw	r7,0(sp)
   4bf40:	da400117 	ldw	r9,4(sp)
   4bf44:	113ffd44 	addi	r4,r2,-11
   4bf48:	00c00704 	movi	r3,28
   4bf4c:	1900ed16 	blt	r3,r4,4c304 <__muldf3+0x5c0>
   4bf50:	00c00744 	movi	r3,29
   4bf54:	147ffe04 	addi	r17,r2,-8
   4bf58:	1907c83a 	sub	r3,r3,r4
   4bf5c:	8460983a 	sll	r16,r16,r17
   4bf60:	98c6d83a 	srl	r3,r19,r3
   4bf64:	9c68983a 	sll	r20,r19,r17
   4bf68:	1c20b03a 	or	r16,r3,r16
   4bf6c:	1080fcc4 	addi	r2,r2,1011
   4bf70:	00a5c83a 	sub	r18,zero,r2
   4bf74:	0027883a 	mov	r19,zero
   4bf78:	0039883a 	mov	fp,zero
   4bf7c:	003f9006 	br	4bdc0 <__alt_data_end+0xfffe4cc0>
   4bf80:	3446b03a 	or	r3,r6,r17
   4bf84:	1800261e 	bne	r3,zero,4c020 <__muldf3+0x2dc>
   4bf88:	0023883a 	mov	r17,zero
   4bf8c:	0011883a 	mov	r8,zero
   4bf90:	01400084 	movi	r5,2
   4bf94:	003f9c06 	br	4be08 <__alt_data_end+0xfffe4d08>
   4bf98:	3446b03a 	or	r3,r6,r17
   4bf9c:	18001c26 	beq	r3,zero,4c010 <__muldf3+0x2cc>
   4bfa0:	8800ce26 	beq	r17,zero,4c2dc <__muldf3+0x598>
   4bfa4:	8809883a 	mov	r4,r17
   4bfa8:	d9800215 	stw	r6,8(sp)
   4bfac:	da400115 	stw	r9,4(sp)
   4bfb0:	da800015 	stw	r10,0(sp)
   4bfb4:	0040f240 	call	40f24 <__clzsi2>
   4bfb8:	d9800217 	ldw	r6,8(sp)
   4bfbc:	da400117 	ldw	r9,4(sp)
   4bfc0:	da800017 	ldw	r10,0(sp)
   4bfc4:	113ffd44 	addi	r4,r2,-11
   4bfc8:	00c00704 	movi	r3,28
   4bfcc:	1900bf16 	blt	r3,r4,4c2cc <__muldf3+0x588>
   4bfd0:	00c00744 	movi	r3,29
   4bfd4:	123ffe04 	addi	r8,r2,-8
   4bfd8:	1907c83a 	sub	r3,r3,r4
   4bfdc:	8a22983a 	sll	r17,r17,r8
   4bfe0:	30c6d83a 	srl	r3,r6,r3
   4bfe4:	3210983a 	sll	r8,r6,r8
   4bfe8:	1c62b03a 	or	r17,r3,r17
   4bfec:	1080fcc4 	addi	r2,r2,1011
   4bff0:	0085c83a 	sub	r2,zero,r2
   4bff4:	000b883a 	mov	r5,zero
   4bff8:	003f8306 	br	4be08 <__alt_data_end+0xfffe4d08>
   4bffc:	b02b883a 	mov	r21,r22
   4c000:	0081ffc4 	movi	r2,2047
   4c004:	000b883a 	mov	r5,zero
   4c008:	0029883a 	mov	r20,zero
   4c00c:	003fac06 	br	4bec0 <__alt_data_end+0xfffe4dc0>
   4c010:	0023883a 	mov	r17,zero
   4c014:	0011883a 	mov	r8,zero
   4c018:	01400044 	movi	r5,1
   4c01c:	003f7a06 	br	4be08 <__alt_data_end+0xfffe4d08>
   4c020:	014000c4 	movi	r5,3
   4c024:	003f7806 	br	4be08 <__alt_data_end+0xfffe4d08>
   4c028:	04c00104 	movi	r19,4
   4c02c:	0021883a 	mov	r16,zero
   4c030:	0029883a 	mov	r20,zero
   4c034:	07000044 	movi	fp,1
   4c038:	003f6106 	br	4bdc0 <__alt_data_end+0xfffe4cc0>
   4c03c:	04c00304 	movi	r19,12
   4c040:	070000c4 	movi	fp,3
   4c044:	003f5e06 	br	4bdc0 <__alt_data_end+0xfffe4cc0>
   4c048:	01400434 	movhi	r5,16
   4c04c:	002b883a 	mov	r21,zero
   4c050:	297fffc4 	addi	r5,r5,-1
   4c054:	053fffc4 	movi	r20,-1
   4c058:	0081ffc4 	movi	r2,2047
   4c05c:	003f9806 	br	4bec0 <__alt_data_end+0xfffe4dc0>
   4c060:	8023883a 	mov	r17,r16
   4c064:	a011883a 	mov	r8,r20
   4c068:	e00b883a 	mov	r5,fp
   4c06c:	003f8a06 	br	4be98 <__alt_data_end+0xfffe4d98>
   4c070:	8023883a 	mov	r17,r16
   4c074:	a011883a 	mov	r8,r20
   4c078:	482d883a 	mov	r22,r9
   4c07c:	e00b883a 	mov	r5,fp
   4c080:	003f8506 	br	4be98 <__alt_data_end+0xfffe4d98>
   4c084:	a00ad43a 	srli	r5,r20,16
   4c088:	401ad43a 	srli	r13,r8,16
   4c08c:	a53fffcc 	andi	r20,r20,65535
   4c090:	423fffcc 	andi	r8,r8,65535
   4c094:	4519383a 	mul	r12,r8,r20
   4c098:	4147383a 	mul	r3,r8,r5
   4c09c:	6d09383a 	mul	r4,r13,r20
   4c0a0:	600cd43a 	srli	r6,r12,16
   4c0a4:	2b5d383a 	mul	r14,r5,r13
   4c0a8:	20c9883a 	add	r4,r4,r3
   4c0ac:	310d883a 	add	r6,r6,r4
   4c0b0:	30c0022e 	bgeu	r6,r3,4c0bc <__muldf3+0x378>
   4c0b4:	00c00074 	movhi	r3,1
   4c0b8:	70dd883a 	add	r14,r14,r3
   4c0bc:	8826d43a 	srli	r19,r17,16
   4c0c0:	8bffffcc 	andi	r15,r17,65535
   4c0c4:	7d23383a 	mul	r17,r15,r20
   4c0c8:	7949383a 	mul	r4,r15,r5
   4c0cc:	9d29383a 	mul	r20,r19,r20
   4c0d0:	8814d43a 	srli	r10,r17,16
   4c0d4:	3012943a 	slli	r9,r6,16
   4c0d8:	a129883a 	add	r20,r20,r4
   4c0dc:	633fffcc 	andi	r12,r12,65535
   4c0e0:	5515883a 	add	r10,r10,r20
   4c0e4:	3006d43a 	srli	r3,r6,16
   4c0e8:	4b13883a 	add	r9,r9,r12
   4c0ec:	2ccb383a 	mul	r5,r5,r19
   4c0f0:	5100022e 	bgeu	r10,r4,4c0fc <__muldf3+0x3b8>
   4c0f4:	01000074 	movhi	r4,1
   4c0f8:	290b883a 	add	r5,r5,r4
   4c0fc:	802ad43a 	srli	r21,r16,16
   4c100:	843fffcc 	andi	r16,r16,65535
   4c104:	440d383a 	mul	r6,r8,r16
   4c108:	4565383a 	mul	r18,r8,r21
   4c10c:	8349383a 	mul	r4,r16,r13
   4c110:	500e943a 	slli	r7,r10,16
   4c114:	3010d43a 	srli	r8,r6,16
   4c118:	5028d43a 	srli	r20,r10,16
   4c11c:	2489883a 	add	r4,r4,r18
   4c120:	8abfffcc 	andi	r10,r17,65535
   4c124:	3a95883a 	add	r10,r7,r10
   4c128:	4119883a 	add	r12,r8,r4
   4c12c:	a169883a 	add	r20,r20,r5
   4c130:	1a87883a 	add	r3,r3,r10
   4c134:	6d5b383a 	mul	r13,r13,r21
   4c138:	6480022e 	bgeu	r12,r18,4c144 <__muldf3+0x400>
   4c13c:	01000074 	movhi	r4,1
   4c140:	691b883a 	add	r13,r13,r4
   4c144:	7c25383a 	mul	r18,r15,r16
   4c148:	7d4b383a 	mul	r5,r15,r21
   4c14c:	84cf383a 	mul	r7,r16,r19
   4c150:	901ed43a 	srli	r15,r18,16
   4c154:	6008d43a 	srli	r4,r12,16
   4c158:	6010943a 	slli	r8,r12,16
   4c15c:	394f883a 	add	r7,r7,r5
   4c160:	333fffcc 	andi	r12,r6,65535
   4c164:	79df883a 	add	r15,r15,r7
   4c168:	235b883a 	add	r13,r4,r13
   4c16c:	9d63383a 	mul	r17,r19,r21
   4c170:	4309883a 	add	r4,r8,r12
   4c174:	7940022e 	bgeu	r15,r5,4c180 <__muldf3+0x43c>
   4c178:	01400074 	movhi	r5,1
   4c17c:	8963883a 	add	r17,r17,r5
   4c180:	780a943a 	slli	r5,r15,16
   4c184:	91bfffcc 	andi	r6,r18,65535
   4c188:	70c7883a 	add	r3,r14,r3
   4c18c:	298d883a 	add	r6,r5,r6
   4c190:	1a8f803a 	cmpltu	r7,r3,r10
   4c194:	350b883a 	add	r5,r6,r20
   4c198:	20c7883a 	add	r3,r4,r3
   4c19c:	3955883a 	add	r10,r7,r5
   4c1a0:	1909803a 	cmpltu	r4,r3,r4
   4c1a4:	6a91883a 	add	r8,r13,r10
   4c1a8:	780cd43a 	srli	r6,r15,16
   4c1ac:	2219883a 	add	r12,r4,r8
   4c1b0:	2d0b803a 	cmpltu	r5,r5,r20
   4c1b4:	51cf803a 	cmpltu	r7,r10,r7
   4c1b8:	29ceb03a 	or	r7,r5,r7
   4c1bc:	4351803a 	cmpltu	r8,r8,r13
   4c1c0:	610b803a 	cmpltu	r5,r12,r4
   4c1c4:	4148b03a 	or	r4,r8,r5
   4c1c8:	398f883a 	add	r7,r7,r6
   4c1cc:	3909883a 	add	r4,r7,r4
   4c1d0:	1810927a 	slli	r8,r3,9
   4c1d4:	2449883a 	add	r4,r4,r17
   4c1d8:	2008927a 	slli	r4,r4,9
   4c1dc:	6022d5fa 	srli	r17,r12,23
   4c1e0:	1806d5fa 	srli	r3,r3,23
   4c1e4:	4252b03a 	or	r9,r8,r9
   4c1e8:	600a927a 	slli	r5,r12,9
   4c1ec:	4810c03a 	cmpne	r8,r9,zero
   4c1f0:	2462b03a 	or	r17,r4,r17
   4c1f4:	40c6b03a 	or	r3,r8,r3
   4c1f8:	8900402c 	andhi	r4,r17,256
   4c1fc:	1950b03a 	or	r8,r3,r5
   4c200:	20000726 	beq	r4,zero,4c220 <__muldf3+0x4dc>
   4c204:	4006d07a 	srli	r3,r8,1
   4c208:	880497fa 	slli	r2,r17,31
   4c20c:	4200004c 	andi	r8,r8,1
   4c210:	8822d07a 	srli	r17,r17,1
   4c214:	1a10b03a 	or	r8,r3,r8
   4c218:	1210b03a 	or	r8,r2,r8
   4c21c:	5805883a 	mov	r2,r11
   4c220:	1140ffc4 	addi	r5,r2,1023
   4c224:	0140440e 	bge	zero,r5,4c338 <__muldf3+0x5f4>
   4c228:	40c001cc 	andi	r3,r8,7
   4c22c:	18000726 	beq	r3,zero,4c24c <__muldf3+0x508>
   4c230:	40c003cc 	andi	r3,r8,15
   4c234:	01000104 	movi	r4,4
   4c238:	19000426 	beq	r3,r4,4c24c <__muldf3+0x508>
   4c23c:	4107883a 	add	r3,r8,r4
   4c240:	1a11803a 	cmpltu	r8,r3,r8
   4c244:	8a23883a 	add	r17,r17,r8
   4c248:	1811883a 	mov	r8,r3
   4c24c:	88c0402c 	andhi	r3,r17,256
   4c250:	18000426 	beq	r3,zero,4c264 <__muldf3+0x520>
   4c254:	11410004 	addi	r5,r2,1024
   4c258:	00bfc034 	movhi	r2,65280
   4c25c:	10bfffc4 	addi	r2,r2,-1
   4c260:	88a2703a 	and	r17,r17,r2
   4c264:	0081ff84 	movi	r2,2046
   4c268:	117f6416 	blt	r2,r5,4bffc <__alt_data_end+0xfffe4efc>
   4c26c:	8828977a 	slli	r20,r17,29
   4c270:	4010d0fa 	srli	r8,r8,3
   4c274:	8822927a 	slli	r17,r17,9
   4c278:	2881ffcc 	andi	r2,r5,2047
   4c27c:	a228b03a 	or	r20,r20,r8
   4c280:	880ad33a 	srli	r5,r17,12
   4c284:	b02b883a 	mov	r21,r22
   4c288:	003f0d06 	br	4bec0 <__alt_data_end+0xfffe4dc0>
   4c28c:	8080022c 	andhi	r2,r16,8
   4c290:	10000926 	beq	r2,zero,4c2b8 <__muldf3+0x574>
   4c294:	8880022c 	andhi	r2,r17,8
   4c298:	1000071e 	bne	r2,zero,4c2b8 <__muldf3+0x574>
   4c29c:	00800434 	movhi	r2,16
   4c2a0:	89400234 	orhi	r5,r17,8
   4c2a4:	10bfffc4 	addi	r2,r2,-1
   4c2a8:	b82b883a 	mov	r21,r23
   4c2ac:	288a703a 	and	r5,r5,r2
   4c2b0:	4029883a 	mov	r20,r8
   4c2b4:	003f6806 	br	4c058 <__alt_data_end+0xfffe4f58>
   4c2b8:	00800434 	movhi	r2,16
   4c2bc:	81400234 	orhi	r5,r16,8
   4c2c0:	10bfffc4 	addi	r2,r2,-1
   4c2c4:	288a703a 	and	r5,r5,r2
   4c2c8:	003f6306 	br	4c058 <__alt_data_end+0xfffe4f58>
   4c2cc:	147ff604 	addi	r17,r2,-40
   4c2d0:	3462983a 	sll	r17,r6,r17
   4c2d4:	0011883a 	mov	r8,zero
   4c2d8:	003f4406 	br	4bfec <__alt_data_end+0xfffe4eec>
   4c2dc:	3009883a 	mov	r4,r6
   4c2e0:	d9800215 	stw	r6,8(sp)
   4c2e4:	da400115 	stw	r9,4(sp)
   4c2e8:	da800015 	stw	r10,0(sp)
   4c2ec:	0040f240 	call	40f24 <__clzsi2>
   4c2f0:	10800804 	addi	r2,r2,32
   4c2f4:	da800017 	ldw	r10,0(sp)
   4c2f8:	da400117 	ldw	r9,4(sp)
   4c2fc:	d9800217 	ldw	r6,8(sp)
   4c300:	003f3006 	br	4bfc4 <__alt_data_end+0xfffe4ec4>
   4c304:	143ff604 	addi	r16,r2,-40
   4c308:	9c20983a 	sll	r16,r19,r16
   4c30c:	0029883a 	mov	r20,zero
   4c310:	003f1606 	br	4bf6c <__alt_data_end+0xfffe4e6c>
   4c314:	d9800215 	stw	r6,8(sp)
   4c318:	d9c00015 	stw	r7,0(sp)
   4c31c:	da400115 	stw	r9,4(sp)
   4c320:	0040f240 	call	40f24 <__clzsi2>
   4c324:	10800804 	addi	r2,r2,32
   4c328:	da400117 	ldw	r9,4(sp)
   4c32c:	d9c00017 	ldw	r7,0(sp)
   4c330:	d9800217 	ldw	r6,8(sp)
   4c334:	003f0306 	br	4bf44 <__alt_data_end+0xfffe4e44>
   4c338:	00c00044 	movi	r3,1
   4c33c:	1947c83a 	sub	r3,r3,r5
   4c340:	00800e04 	movi	r2,56
   4c344:	10feda16 	blt	r2,r3,4beb0 <__alt_data_end+0xfffe4db0>
   4c348:	008007c4 	movi	r2,31
   4c34c:	10c01b16 	blt	r2,r3,4c3bc <__muldf3+0x678>
   4c350:	00800804 	movi	r2,32
   4c354:	10c5c83a 	sub	r2,r2,r3
   4c358:	888a983a 	sll	r5,r17,r2
   4c35c:	40c8d83a 	srl	r4,r8,r3
   4c360:	4084983a 	sll	r2,r8,r2
   4c364:	88e2d83a 	srl	r17,r17,r3
   4c368:	2906b03a 	or	r3,r5,r4
   4c36c:	1004c03a 	cmpne	r2,r2,zero
   4c370:	1886b03a 	or	r3,r3,r2
   4c374:	188001cc 	andi	r2,r3,7
   4c378:	10000726 	beq	r2,zero,4c398 <__muldf3+0x654>
   4c37c:	188003cc 	andi	r2,r3,15
   4c380:	01000104 	movi	r4,4
   4c384:	11000426 	beq	r2,r4,4c398 <__muldf3+0x654>
   4c388:	1805883a 	mov	r2,r3
   4c38c:	10c00104 	addi	r3,r2,4
   4c390:	1885803a 	cmpltu	r2,r3,r2
   4c394:	88a3883a 	add	r17,r17,r2
   4c398:	8880202c 	andhi	r2,r17,128
   4c39c:	10001c26 	beq	r2,zero,4c410 <__muldf3+0x6cc>
   4c3a0:	b02b883a 	mov	r21,r22
   4c3a4:	00800044 	movi	r2,1
   4c3a8:	000b883a 	mov	r5,zero
   4c3ac:	0029883a 	mov	r20,zero
   4c3b0:	003ec306 	br	4bec0 <__alt_data_end+0xfffe4dc0>
   4c3b4:	5805883a 	mov	r2,r11
   4c3b8:	003f9906 	br	4c220 <__alt_data_end+0xfffe5120>
   4c3bc:	00bff844 	movi	r2,-31
   4c3c0:	1145c83a 	sub	r2,r2,r5
   4c3c4:	8888d83a 	srl	r4,r17,r2
   4c3c8:	00800804 	movi	r2,32
   4c3cc:	18801a26 	beq	r3,r2,4c438 <__muldf3+0x6f4>
   4c3d0:	00801004 	movi	r2,64
   4c3d4:	10c5c83a 	sub	r2,r2,r3
   4c3d8:	8884983a 	sll	r2,r17,r2
   4c3dc:	1204b03a 	or	r2,r2,r8
   4c3e0:	1004c03a 	cmpne	r2,r2,zero
   4c3e4:	2084b03a 	or	r2,r4,r2
   4c3e8:	144001cc 	andi	r17,r2,7
   4c3ec:	88000d1e 	bne	r17,zero,4c424 <__muldf3+0x6e0>
   4c3f0:	000b883a 	mov	r5,zero
   4c3f4:	1028d0fa 	srli	r20,r2,3
   4c3f8:	b02b883a 	mov	r21,r22
   4c3fc:	0005883a 	mov	r2,zero
   4c400:	a468b03a 	or	r20,r20,r17
   4c404:	003eae06 	br	4bec0 <__alt_data_end+0xfffe4dc0>
   4c408:	1007883a 	mov	r3,r2
   4c40c:	0023883a 	mov	r17,zero
   4c410:	880a927a 	slli	r5,r17,9
   4c414:	1805883a 	mov	r2,r3
   4c418:	8822977a 	slli	r17,r17,29
   4c41c:	280ad33a 	srli	r5,r5,12
   4c420:	003ff406 	br	4c3f4 <__alt_data_end+0xfffe52f4>
   4c424:	10c003cc 	andi	r3,r2,15
   4c428:	01000104 	movi	r4,4
   4c42c:	193ff626 	beq	r3,r4,4c408 <__alt_data_end+0xfffe5308>
   4c430:	0023883a 	mov	r17,zero
   4c434:	003fd506 	br	4c38c <__alt_data_end+0xfffe528c>
   4c438:	0005883a 	mov	r2,zero
   4c43c:	003fe706 	br	4c3dc <__alt_data_end+0xfffe52dc>
   4c440:	00800434 	movhi	r2,16
   4c444:	89400234 	orhi	r5,r17,8
   4c448:	10bfffc4 	addi	r2,r2,-1
   4c44c:	b02b883a 	mov	r21,r22
   4c450:	288a703a 	and	r5,r5,r2
   4c454:	4029883a 	mov	r20,r8
   4c458:	003eff06 	br	4c058 <__alt_data_end+0xfffe4f58>

0004c45c <__subdf3>:
   4c45c:	02000434 	movhi	r8,16
   4c460:	423fffc4 	addi	r8,r8,-1
   4c464:	defffb04 	addi	sp,sp,-20
   4c468:	2a14703a 	and	r10,r5,r8
   4c46c:	3812d53a 	srli	r9,r7,20
   4c470:	3a10703a 	and	r8,r7,r8
   4c474:	2006d77a 	srli	r3,r4,29
   4c478:	3004d77a 	srli	r2,r6,29
   4c47c:	dc000015 	stw	r16,0(sp)
   4c480:	501490fa 	slli	r10,r10,3
   4c484:	2820d53a 	srli	r16,r5,20
   4c488:	401090fa 	slli	r8,r8,3
   4c48c:	dc800215 	stw	r18,8(sp)
   4c490:	dc400115 	stw	r17,4(sp)
   4c494:	dfc00415 	stw	ra,16(sp)
   4c498:	202290fa 	slli	r17,r4,3
   4c49c:	dcc00315 	stw	r19,12(sp)
   4c4a0:	4a41ffcc 	andi	r9,r9,2047
   4c4a4:	0101ffc4 	movi	r4,2047
   4c4a8:	2824d7fa 	srli	r18,r5,31
   4c4ac:	8401ffcc 	andi	r16,r16,2047
   4c4b0:	50c6b03a 	or	r3,r10,r3
   4c4b4:	380ed7fa 	srli	r7,r7,31
   4c4b8:	408ab03a 	or	r5,r8,r2
   4c4bc:	300c90fa 	slli	r6,r6,3
   4c4c0:	49009626 	beq	r9,r4,4c71c <__subdf3+0x2c0>
   4c4c4:	39c0005c 	xori	r7,r7,1
   4c4c8:	8245c83a 	sub	r2,r16,r9
   4c4cc:	3c807426 	beq	r7,r18,4c6a0 <__subdf3+0x244>
   4c4d0:	0080af0e 	bge	zero,r2,4c790 <__subdf3+0x334>
   4c4d4:	48002a1e 	bne	r9,zero,4c580 <__subdf3+0x124>
   4c4d8:	2988b03a 	or	r4,r5,r6
   4c4dc:	20009a1e 	bne	r4,zero,4c748 <__subdf3+0x2ec>
   4c4e0:	888001cc 	andi	r2,r17,7
   4c4e4:	10000726 	beq	r2,zero,4c504 <__subdf3+0xa8>
   4c4e8:	888003cc 	andi	r2,r17,15
   4c4ec:	01000104 	movi	r4,4
   4c4f0:	11000426 	beq	r2,r4,4c504 <__subdf3+0xa8>
   4c4f4:	890b883a 	add	r5,r17,r4
   4c4f8:	2c63803a 	cmpltu	r17,r5,r17
   4c4fc:	1c47883a 	add	r3,r3,r17
   4c500:	2823883a 	mov	r17,r5
   4c504:	1880202c 	andhi	r2,r3,128
   4c508:	10005926 	beq	r2,zero,4c670 <__subdf3+0x214>
   4c50c:	84000044 	addi	r16,r16,1
   4c510:	0081ffc4 	movi	r2,2047
   4c514:	8080be26 	beq	r16,r2,4c810 <__subdf3+0x3b4>
   4c518:	017fe034 	movhi	r5,65408
   4c51c:	297fffc4 	addi	r5,r5,-1
   4c520:	1946703a 	and	r3,r3,r5
   4c524:	1804977a 	slli	r2,r3,29
   4c528:	1806927a 	slli	r3,r3,9
   4c52c:	8822d0fa 	srli	r17,r17,3
   4c530:	8401ffcc 	andi	r16,r16,2047
   4c534:	180ad33a 	srli	r5,r3,12
   4c538:	9100004c 	andi	r4,r18,1
   4c53c:	1444b03a 	or	r2,r2,r17
   4c540:	80c1ffcc 	andi	r3,r16,2047
   4c544:	1820953a 	slli	r16,r3,20
   4c548:	20c03fcc 	andi	r3,r4,255
   4c54c:	180897fa 	slli	r4,r3,31
   4c550:	00c00434 	movhi	r3,16
   4c554:	18ffffc4 	addi	r3,r3,-1
   4c558:	28c6703a 	and	r3,r5,r3
   4c55c:	1c06b03a 	or	r3,r3,r16
   4c560:	1906b03a 	or	r3,r3,r4
   4c564:	dfc00417 	ldw	ra,16(sp)
   4c568:	dcc00317 	ldw	r19,12(sp)
   4c56c:	dc800217 	ldw	r18,8(sp)
   4c570:	dc400117 	ldw	r17,4(sp)
   4c574:	dc000017 	ldw	r16,0(sp)
   4c578:	dec00504 	addi	sp,sp,20
   4c57c:	f800283a 	ret
   4c580:	0101ffc4 	movi	r4,2047
   4c584:	813fd626 	beq	r16,r4,4c4e0 <__alt_data_end+0xfffe53e0>
   4c588:	29402034 	orhi	r5,r5,128
   4c58c:	01000e04 	movi	r4,56
   4c590:	2080a316 	blt	r4,r2,4c820 <__subdf3+0x3c4>
   4c594:	010007c4 	movi	r4,31
   4c598:	2080c616 	blt	r4,r2,4c8b4 <__subdf3+0x458>
   4c59c:	01000804 	movi	r4,32
   4c5a0:	2089c83a 	sub	r4,r4,r2
   4c5a4:	2910983a 	sll	r8,r5,r4
   4c5a8:	308ed83a 	srl	r7,r6,r2
   4c5ac:	3108983a 	sll	r4,r6,r4
   4c5b0:	2884d83a 	srl	r2,r5,r2
   4c5b4:	41ccb03a 	or	r6,r8,r7
   4c5b8:	2008c03a 	cmpne	r4,r4,zero
   4c5bc:	310cb03a 	or	r6,r6,r4
   4c5c0:	898dc83a 	sub	r6,r17,r6
   4c5c4:	89a3803a 	cmpltu	r17,r17,r6
   4c5c8:	1887c83a 	sub	r3,r3,r2
   4c5cc:	1c47c83a 	sub	r3,r3,r17
   4c5d0:	3023883a 	mov	r17,r6
   4c5d4:	1880202c 	andhi	r2,r3,128
   4c5d8:	10002326 	beq	r2,zero,4c668 <__subdf3+0x20c>
   4c5dc:	04c02034 	movhi	r19,128
   4c5e0:	9cffffc4 	addi	r19,r19,-1
   4c5e4:	1ce6703a 	and	r19,r3,r19
   4c5e8:	98007a26 	beq	r19,zero,4c7d4 <__subdf3+0x378>
   4c5ec:	9809883a 	mov	r4,r19
   4c5f0:	0040f240 	call	40f24 <__clzsi2>
   4c5f4:	113ffe04 	addi	r4,r2,-8
   4c5f8:	00c007c4 	movi	r3,31
   4c5fc:	19007b16 	blt	r3,r4,4c7ec <__subdf3+0x390>
   4c600:	00800804 	movi	r2,32
   4c604:	1105c83a 	sub	r2,r2,r4
   4c608:	8884d83a 	srl	r2,r17,r2
   4c60c:	9906983a 	sll	r3,r19,r4
   4c610:	8922983a 	sll	r17,r17,r4
   4c614:	10c4b03a 	or	r2,r2,r3
   4c618:	24007816 	blt	r4,r16,4c7fc <__subdf3+0x3a0>
   4c61c:	2421c83a 	sub	r16,r4,r16
   4c620:	80c00044 	addi	r3,r16,1
   4c624:	010007c4 	movi	r4,31
   4c628:	20c09516 	blt	r4,r3,4c880 <__subdf3+0x424>
   4c62c:	01400804 	movi	r5,32
   4c630:	28cbc83a 	sub	r5,r5,r3
   4c634:	88c8d83a 	srl	r4,r17,r3
   4c638:	8962983a 	sll	r17,r17,r5
   4c63c:	114a983a 	sll	r5,r2,r5
   4c640:	10c6d83a 	srl	r3,r2,r3
   4c644:	8804c03a 	cmpne	r2,r17,zero
   4c648:	290ab03a 	or	r5,r5,r4
   4c64c:	28a2b03a 	or	r17,r5,r2
   4c650:	0021883a 	mov	r16,zero
   4c654:	003fa206 	br	4c4e0 <__alt_data_end+0xfffe53e0>
   4c658:	2090b03a 	or	r8,r4,r2
   4c65c:	40018e26 	beq	r8,zero,4cc98 <__subdf3+0x83c>
   4c660:	1007883a 	mov	r3,r2
   4c664:	2023883a 	mov	r17,r4
   4c668:	888001cc 	andi	r2,r17,7
   4c66c:	103f9e1e 	bne	r2,zero,4c4e8 <__alt_data_end+0xfffe53e8>
   4c670:	1804977a 	slli	r2,r3,29
   4c674:	8822d0fa 	srli	r17,r17,3
   4c678:	1810d0fa 	srli	r8,r3,3
   4c67c:	9100004c 	andi	r4,r18,1
   4c680:	1444b03a 	or	r2,r2,r17
   4c684:	00c1ffc4 	movi	r3,2047
   4c688:	80c02826 	beq	r16,r3,4c72c <__subdf3+0x2d0>
   4c68c:	01400434 	movhi	r5,16
   4c690:	297fffc4 	addi	r5,r5,-1
   4c694:	80e0703a 	and	r16,r16,r3
   4c698:	414a703a 	and	r5,r8,r5
   4c69c:	003fa806 	br	4c540 <__alt_data_end+0xfffe5440>
   4c6a0:	0080630e 	bge	zero,r2,4c830 <__subdf3+0x3d4>
   4c6a4:	48003026 	beq	r9,zero,4c768 <__subdf3+0x30c>
   4c6a8:	0101ffc4 	movi	r4,2047
   4c6ac:	813f8c26 	beq	r16,r4,4c4e0 <__alt_data_end+0xfffe53e0>
   4c6b0:	29402034 	orhi	r5,r5,128
   4c6b4:	01000e04 	movi	r4,56
   4c6b8:	2080a90e 	bge	r4,r2,4c960 <__subdf3+0x504>
   4c6bc:	298cb03a 	or	r6,r5,r6
   4c6c0:	3012c03a 	cmpne	r9,r6,zero
   4c6c4:	0005883a 	mov	r2,zero
   4c6c8:	4c53883a 	add	r9,r9,r17
   4c6cc:	4c63803a 	cmpltu	r17,r9,r17
   4c6d0:	10c7883a 	add	r3,r2,r3
   4c6d4:	88c7883a 	add	r3,r17,r3
   4c6d8:	4823883a 	mov	r17,r9
   4c6dc:	1880202c 	andhi	r2,r3,128
   4c6e0:	1000d026 	beq	r2,zero,4ca24 <__subdf3+0x5c8>
   4c6e4:	84000044 	addi	r16,r16,1
   4c6e8:	0081ffc4 	movi	r2,2047
   4c6ec:	8080fe26 	beq	r16,r2,4cae8 <__subdf3+0x68c>
   4c6f0:	00bfe034 	movhi	r2,65408
   4c6f4:	10bfffc4 	addi	r2,r2,-1
   4c6f8:	1886703a 	and	r3,r3,r2
   4c6fc:	880ad07a 	srli	r5,r17,1
   4c700:	180497fa 	slli	r2,r3,31
   4c704:	8900004c 	andi	r4,r17,1
   4c708:	2922b03a 	or	r17,r5,r4
   4c70c:	1806d07a 	srli	r3,r3,1
   4c710:	1462b03a 	or	r17,r2,r17
   4c714:	3825883a 	mov	r18,r7
   4c718:	003f7106 	br	4c4e0 <__alt_data_end+0xfffe53e0>
   4c71c:	2984b03a 	or	r2,r5,r6
   4c720:	103f6826 	beq	r2,zero,4c4c4 <__alt_data_end+0xfffe53c4>
   4c724:	39c03fcc 	andi	r7,r7,255
   4c728:	003f6706 	br	4c4c8 <__alt_data_end+0xfffe53c8>
   4c72c:	4086b03a 	or	r3,r8,r2
   4c730:	18015226 	beq	r3,zero,4cc7c <__subdf3+0x820>
   4c734:	00c00434 	movhi	r3,16
   4c738:	41400234 	orhi	r5,r8,8
   4c73c:	18ffffc4 	addi	r3,r3,-1
   4c740:	28ca703a 	and	r5,r5,r3
   4c744:	003f7e06 	br	4c540 <__alt_data_end+0xfffe5440>
   4c748:	10bfffc4 	addi	r2,r2,-1
   4c74c:	1000491e 	bne	r2,zero,4c874 <__subdf3+0x418>
   4c750:	898fc83a 	sub	r7,r17,r6
   4c754:	89e3803a 	cmpltu	r17,r17,r7
   4c758:	1947c83a 	sub	r3,r3,r5
   4c75c:	1c47c83a 	sub	r3,r3,r17
   4c760:	3823883a 	mov	r17,r7
   4c764:	003f9b06 	br	4c5d4 <__alt_data_end+0xfffe54d4>
   4c768:	2988b03a 	or	r4,r5,r6
   4c76c:	203f5c26 	beq	r4,zero,4c4e0 <__alt_data_end+0xfffe53e0>
   4c770:	10bfffc4 	addi	r2,r2,-1
   4c774:	1000931e 	bne	r2,zero,4c9c4 <__subdf3+0x568>
   4c778:	898d883a 	add	r6,r17,r6
   4c77c:	3463803a 	cmpltu	r17,r6,r17
   4c780:	1947883a 	add	r3,r3,r5
   4c784:	88c7883a 	add	r3,r17,r3
   4c788:	3023883a 	mov	r17,r6
   4c78c:	003fd306 	br	4c6dc <__alt_data_end+0xfffe55dc>
   4c790:	1000541e 	bne	r2,zero,4c8e4 <__subdf3+0x488>
   4c794:	80800044 	addi	r2,r16,1
   4c798:	1081ffcc 	andi	r2,r2,2047
   4c79c:	01000044 	movi	r4,1
   4c7a0:	2080a20e 	bge	r4,r2,4ca2c <__subdf3+0x5d0>
   4c7a4:	8989c83a 	sub	r4,r17,r6
   4c7a8:	8905803a 	cmpltu	r2,r17,r4
   4c7ac:	1967c83a 	sub	r19,r3,r5
   4c7b0:	98a7c83a 	sub	r19,r19,r2
   4c7b4:	9880202c 	andhi	r2,r19,128
   4c7b8:	10006326 	beq	r2,zero,4c948 <__subdf3+0x4ec>
   4c7bc:	3463c83a 	sub	r17,r6,r17
   4c7c0:	28c7c83a 	sub	r3,r5,r3
   4c7c4:	344d803a 	cmpltu	r6,r6,r17
   4c7c8:	19a7c83a 	sub	r19,r3,r6
   4c7cc:	3825883a 	mov	r18,r7
   4c7d0:	983f861e 	bne	r19,zero,4c5ec <__alt_data_end+0xfffe54ec>
   4c7d4:	8809883a 	mov	r4,r17
   4c7d8:	0040f240 	call	40f24 <__clzsi2>
   4c7dc:	10800804 	addi	r2,r2,32
   4c7e0:	113ffe04 	addi	r4,r2,-8
   4c7e4:	00c007c4 	movi	r3,31
   4c7e8:	193f850e 	bge	r3,r4,4c600 <__alt_data_end+0xfffe5500>
   4c7ec:	10bff604 	addi	r2,r2,-40
   4c7f0:	8884983a 	sll	r2,r17,r2
   4c7f4:	0023883a 	mov	r17,zero
   4c7f8:	243f880e 	bge	r4,r16,4c61c <__alt_data_end+0xfffe551c>
   4c7fc:	00ffe034 	movhi	r3,65408
   4c800:	18ffffc4 	addi	r3,r3,-1
   4c804:	8121c83a 	sub	r16,r16,r4
   4c808:	10c6703a 	and	r3,r2,r3
   4c80c:	003f3406 	br	4c4e0 <__alt_data_end+0xfffe53e0>
   4c810:	9100004c 	andi	r4,r18,1
   4c814:	000b883a 	mov	r5,zero
   4c818:	0005883a 	mov	r2,zero
   4c81c:	003f4806 	br	4c540 <__alt_data_end+0xfffe5440>
   4c820:	298cb03a 	or	r6,r5,r6
   4c824:	300cc03a 	cmpne	r6,r6,zero
   4c828:	0005883a 	mov	r2,zero
   4c82c:	003f6406 	br	4c5c0 <__alt_data_end+0xfffe54c0>
   4c830:	10009a1e 	bne	r2,zero,4ca9c <__subdf3+0x640>
   4c834:	82400044 	addi	r9,r16,1
   4c838:	4881ffcc 	andi	r2,r9,2047
   4c83c:	02800044 	movi	r10,1
   4c840:	5080670e 	bge	r10,r2,4c9e0 <__subdf3+0x584>
   4c844:	0081ffc4 	movi	r2,2047
   4c848:	4880af26 	beq	r9,r2,4cb08 <__subdf3+0x6ac>
   4c84c:	898d883a 	add	r6,r17,r6
   4c850:	1945883a 	add	r2,r3,r5
   4c854:	3447803a 	cmpltu	r3,r6,r17
   4c858:	1887883a 	add	r3,r3,r2
   4c85c:	182297fa 	slli	r17,r3,31
   4c860:	300cd07a 	srli	r6,r6,1
   4c864:	1806d07a 	srli	r3,r3,1
   4c868:	4821883a 	mov	r16,r9
   4c86c:	89a2b03a 	or	r17,r17,r6
   4c870:	003f1b06 	br	4c4e0 <__alt_data_end+0xfffe53e0>
   4c874:	0101ffc4 	movi	r4,2047
   4c878:	813f441e 	bne	r16,r4,4c58c <__alt_data_end+0xfffe548c>
   4c87c:	003f1806 	br	4c4e0 <__alt_data_end+0xfffe53e0>
   4c880:	843ff844 	addi	r16,r16,-31
   4c884:	01400804 	movi	r5,32
   4c888:	1408d83a 	srl	r4,r2,r16
   4c88c:	19405026 	beq	r3,r5,4c9d0 <__subdf3+0x574>
   4c890:	01401004 	movi	r5,64
   4c894:	28c7c83a 	sub	r3,r5,r3
   4c898:	10c4983a 	sll	r2,r2,r3
   4c89c:	88a2b03a 	or	r17,r17,r2
   4c8a0:	8822c03a 	cmpne	r17,r17,zero
   4c8a4:	2462b03a 	or	r17,r4,r17
   4c8a8:	0007883a 	mov	r3,zero
   4c8ac:	0021883a 	mov	r16,zero
   4c8b0:	003f6d06 	br	4c668 <__alt_data_end+0xfffe5568>
   4c8b4:	11fff804 	addi	r7,r2,-32
   4c8b8:	01000804 	movi	r4,32
   4c8bc:	29ced83a 	srl	r7,r5,r7
   4c8c0:	11004526 	beq	r2,r4,4c9d8 <__subdf3+0x57c>
   4c8c4:	01001004 	movi	r4,64
   4c8c8:	2089c83a 	sub	r4,r4,r2
   4c8cc:	2904983a 	sll	r2,r5,r4
   4c8d0:	118cb03a 	or	r6,r2,r6
   4c8d4:	300cc03a 	cmpne	r6,r6,zero
   4c8d8:	398cb03a 	or	r6,r7,r6
   4c8dc:	0005883a 	mov	r2,zero
   4c8e0:	003f3706 	br	4c5c0 <__alt_data_end+0xfffe54c0>
   4c8e4:	80002a26 	beq	r16,zero,4c990 <__subdf3+0x534>
   4c8e8:	0101ffc4 	movi	r4,2047
   4c8ec:	49006626 	beq	r9,r4,4ca88 <__subdf3+0x62c>
   4c8f0:	0085c83a 	sub	r2,zero,r2
   4c8f4:	18c02034 	orhi	r3,r3,128
   4c8f8:	01000e04 	movi	r4,56
   4c8fc:	20807e16 	blt	r4,r2,4caf8 <__subdf3+0x69c>
   4c900:	010007c4 	movi	r4,31
   4c904:	2080e716 	blt	r4,r2,4cca4 <__subdf3+0x848>
   4c908:	01000804 	movi	r4,32
   4c90c:	2089c83a 	sub	r4,r4,r2
   4c910:	1914983a 	sll	r10,r3,r4
   4c914:	8890d83a 	srl	r8,r17,r2
   4c918:	8908983a 	sll	r4,r17,r4
   4c91c:	1884d83a 	srl	r2,r3,r2
   4c920:	5222b03a 	or	r17,r10,r8
   4c924:	2006c03a 	cmpne	r3,r4,zero
   4c928:	88e2b03a 	or	r17,r17,r3
   4c92c:	3463c83a 	sub	r17,r6,r17
   4c930:	2885c83a 	sub	r2,r5,r2
   4c934:	344d803a 	cmpltu	r6,r6,r17
   4c938:	1187c83a 	sub	r3,r2,r6
   4c93c:	4821883a 	mov	r16,r9
   4c940:	3825883a 	mov	r18,r7
   4c944:	003f2306 	br	4c5d4 <__alt_data_end+0xfffe54d4>
   4c948:	24d0b03a 	or	r8,r4,r19
   4c94c:	40001b1e 	bne	r8,zero,4c9bc <__subdf3+0x560>
   4c950:	0005883a 	mov	r2,zero
   4c954:	0009883a 	mov	r4,zero
   4c958:	0021883a 	mov	r16,zero
   4c95c:	003f4906 	br	4c684 <__alt_data_end+0xfffe5584>
   4c960:	010007c4 	movi	r4,31
   4c964:	20803a16 	blt	r4,r2,4ca50 <__subdf3+0x5f4>
   4c968:	01000804 	movi	r4,32
   4c96c:	2089c83a 	sub	r4,r4,r2
   4c970:	2912983a 	sll	r9,r5,r4
   4c974:	3090d83a 	srl	r8,r6,r2
   4c978:	3108983a 	sll	r4,r6,r4
   4c97c:	2884d83a 	srl	r2,r5,r2
   4c980:	4a12b03a 	or	r9,r9,r8
   4c984:	2008c03a 	cmpne	r4,r4,zero
   4c988:	4912b03a 	or	r9,r9,r4
   4c98c:	003f4e06 	br	4c6c8 <__alt_data_end+0xfffe55c8>
   4c990:	1c48b03a 	or	r4,r3,r17
   4c994:	20003c26 	beq	r4,zero,4ca88 <__subdf3+0x62c>
   4c998:	0084303a 	nor	r2,zero,r2
   4c99c:	1000381e 	bne	r2,zero,4ca80 <__subdf3+0x624>
   4c9a0:	3463c83a 	sub	r17,r6,r17
   4c9a4:	28c5c83a 	sub	r2,r5,r3
   4c9a8:	344d803a 	cmpltu	r6,r6,r17
   4c9ac:	1187c83a 	sub	r3,r2,r6
   4c9b0:	4821883a 	mov	r16,r9
   4c9b4:	3825883a 	mov	r18,r7
   4c9b8:	003f0606 	br	4c5d4 <__alt_data_end+0xfffe54d4>
   4c9bc:	2023883a 	mov	r17,r4
   4c9c0:	003f0906 	br	4c5e8 <__alt_data_end+0xfffe54e8>
   4c9c4:	0101ffc4 	movi	r4,2047
   4c9c8:	813f3a1e 	bne	r16,r4,4c6b4 <__alt_data_end+0xfffe55b4>
   4c9cc:	003ec406 	br	4c4e0 <__alt_data_end+0xfffe53e0>
   4c9d0:	0005883a 	mov	r2,zero
   4c9d4:	003fb106 	br	4c89c <__alt_data_end+0xfffe579c>
   4c9d8:	0005883a 	mov	r2,zero
   4c9dc:	003fbc06 	br	4c8d0 <__alt_data_end+0xfffe57d0>
   4c9e0:	1c44b03a 	or	r2,r3,r17
   4c9e4:	80008e1e 	bne	r16,zero,4cc20 <__subdf3+0x7c4>
   4c9e8:	1000c826 	beq	r2,zero,4cd0c <__subdf3+0x8b0>
   4c9ec:	2984b03a 	or	r2,r5,r6
   4c9f0:	103ebb26 	beq	r2,zero,4c4e0 <__alt_data_end+0xfffe53e0>
   4c9f4:	8989883a 	add	r4,r17,r6
   4c9f8:	1945883a 	add	r2,r3,r5
   4c9fc:	2447803a 	cmpltu	r3,r4,r17
   4ca00:	1887883a 	add	r3,r3,r2
   4ca04:	1880202c 	andhi	r2,r3,128
   4ca08:	2023883a 	mov	r17,r4
   4ca0c:	103f1626 	beq	r2,zero,4c668 <__alt_data_end+0xfffe5568>
   4ca10:	00bfe034 	movhi	r2,65408
   4ca14:	10bfffc4 	addi	r2,r2,-1
   4ca18:	5021883a 	mov	r16,r10
   4ca1c:	1886703a 	and	r3,r3,r2
   4ca20:	003eaf06 	br	4c4e0 <__alt_data_end+0xfffe53e0>
   4ca24:	3825883a 	mov	r18,r7
   4ca28:	003f0f06 	br	4c668 <__alt_data_end+0xfffe5568>
   4ca2c:	1c44b03a 	or	r2,r3,r17
   4ca30:	8000251e 	bne	r16,zero,4cac8 <__subdf3+0x66c>
   4ca34:	1000661e 	bne	r2,zero,4cbd0 <__subdf3+0x774>
   4ca38:	2990b03a 	or	r8,r5,r6
   4ca3c:	40009626 	beq	r8,zero,4cc98 <__subdf3+0x83c>
   4ca40:	2807883a 	mov	r3,r5
   4ca44:	3023883a 	mov	r17,r6
   4ca48:	3825883a 	mov	r18,r7
   4ca4c:	003ea406 	br	4c4e0 <__alt_data_end+0xfffe53e0>
   4ca50:	127ff804 	addi	r9,r2,-32
   4ca54:	01000804 	movi	r4,32
   4ca58:	2a52d83a 	srl	r9,r5,r9
   4ca5c:	11008c26 	beq	r2,r4,4cc90 <__subdf3+0x834>
   4ca60:	01001004 	movi	r4,64
   4ca64:	2085c83a 	sub	r2,r4,r2
   4ca68:	2884983a 	sll	r2,r5,r2
   4ca6c:	118cb03a 	or	r6,r2,r6
   4ca70:	300cc03a 	cmpne	r6,r6,zero
   4ca74:	4992b03a 	or	r9,r9,r6
   4ca78:	0005883a 	mov	r2,zero
   4ca7c:	003f1206 	br	4c6c8 <__alt_data_end+0xfffe55c8>
   4ca80:	0101ffc4 	movi	r4,2047
   4ca84:	493f9c1e 	bne	r9,r4,4c8f8 <__alt_data_end+0xfffe57f8>
   4ca88:	2807883a 	mov	r3,r5
   4ca8c:	3023883a 	mov	r17,r6
   4ca90:	4821883a 	mov	r16,r9
   4ca94:	3825883a 	mov	r18,r7
   4ca98:	003e9106 	br	4c4e0 <__alt_data_end+0xfffe53e0>
   4ca9c:	80001f1e 	bne	r16,zero,4cb1c <__subdf3+0x6c0>
   4caa0:	1c48b03a 	or	r4,r3,r17
   4caa4:	20005a26 	beq	r4,zero,4cc10 <__subdf3+0x7b4>
   4caa8:	0084303a 	nor	r2,zero,r2
   4caac:	1000561e 	bne	r2,zero,4cc08 <__subdf3+0x7ac>
   4cab0:	89a3883a 	add	r17,r17,r6
   4cab4:	1945883a 	add	r2,r3,r5
   4cab8:	898d803a 	cmpltu	r6,r17,r6
   4cabc:	3087883a 	add	r3,r6,r2
   4cac0:	4821883a 	mov	r16,r9
   4cac4:	003f0506 	br	4c6dc <__alt_data_end+0xfffe55dc>
   4cac8:	10002b1e 	bne	r2,zero,4cb78 <__subdf3+0x71c>
   4cacc:	2984b03a 	or	r2,r5,r6
   4cad0:	10008026 	beq	r2,zero,4ccd4 <__subdf3+0x878>
   4cad4:	2807883a 	mov	r3,r5
   4cad8:	3023883a 	mov	r17,r6
   4cadc:	3825883a 	mov	r18,r7
   4cae0:	0401ffc4 	movi	r16,2047
   4cae4:	003e7e06 	br	4c4e0 <__alt_data_end+0xfffe53e0>
   4cae8:	3809883a 	mov	r4,r7
   4caec:	0011883a 	mov	r8,zero
   4caf0:	0005883a 	mov	r2,zero
   4caf4:	003ee306 	br	4c684 <__alt_data_end+0xfffe5584>
   4caf8:	1c62b03a 	or	r17,r3,r17
   4cafc:	8822c03a 	cmpne	r17,r17,zero
   4cb00:	0005883a 	mov	r2,zero
   4cb04:	003f8906 	br	4c92c <__alt_data_end+0xfffe582c>
   4cb08:	3809883a 	mov	r4,r7
   4cb0c:	4821883a 	mov	r16,r9
   4cb10:	0011883a 	mov	r8,zero
   4cb14:	0005883a 	mov	r2,zero
   4cb18:	003eda06 	br	4c684 <__alt_data_end+0xfffe5584>
   4cb1c:	0101ffc4 	movi	r4,2047
   4cb20:	49003b26 	beq	r9,r4,4cc10 <__subdf3+0x7b4>
   4cb24:	0085c83a 	sub	r2,zero,r2
   4cb28:	18c02034 	orhi	r3,r3,128
   4cb2c:	01000e04 	movi	r4,56
   4cb30:	20806e16 	blt	r4,r2,4ccec <__subdf3+0x890>
   4cb34:	010007c4 	movi	r4,31
   4cb38:	20807716 	blt	r4,r2,4cd18 <__subdf3+0x8bc>
   4cb3c:	01000804 	movi	r4,32
   4cb40:	2089c83a 	sub	r4,r4,r2
   4cb44:	1914983a 	sll	r10,r3,r4
   4cb48:	8890d83a 	srl	r8,r17,r2
   4cb4c:	8908983a 	sll	r4,r17,r4
   4cb50:	1884d83a 	srl	r2,r3,r2
   4cb54:	5222b03a 	or	r17,r10,r8
   4cb58:	2006c03a 	cmpne	r3,r4,zero
   4cb5c:	88e2b03a 	or	r17,r17,r3
   4cb60:	89a3883a 	add	r17,r17,r6
   4cb64:	1145883a 	add	r2,r2,r5
   4cb68:	898d803a 	cmpltu	r6,r17,r6
   4cb6c:	3087883a 	add	r3,r6,r2
   4cb70:	4821883a 	mov	r16,r9
   4cb74:	003ed906 	br	4c6dc <__alt_data_end+0xfffe55dc>
   4cb78:	2984b03a 	or	r2,r5,r6
   4cb7c:	10004226 	beq	r2,zero,4cc88 <__subdf3+0x82c>
   4cb80:	1808d0fa 	srli	r4,r3,3
   4cb84:	8822d0fa 	srli	r17,r17,3
   4cb88:	1806977a 	slli	r3,r3,29
   4cb8c:	2080022c 	andhi	r2,r4,8
   4cb90:	1c62b03a 	or	r17,r3,r17
   4cb94:	10000826 	beq	r2,zero,4cbb8 <__subdf3+0x75c>
   4cb98:	2812d0fa 	srli	r9,r5,3
   4cb9c:	4880022c 	andhi	r2,r9,8
   4cba0:	1000051e 	bne	r2,zero,4cbb8 <__subdf3+0x75c>
   4cba4:	300cd0fa 	srli	r6,r6,3
   4cba8:	2804977a 	slli	r2,r5,29
   4cbac:	4809883a 	mov	r4,r9
   4cbb0:	3825883a 	mov	r18,r7
   4cbb4:	11a2b03a 	or	r17,r2,r6
   4cbb8:	8806d77a 	srli	r3,r17,29
   4cbbc:	200890fa 	slli	r4,r4,3
   4cbc0:	882290fa 	slli	r17,r17,3
   4cbc4:	0401ffc4 	movi	r16,2047
   4cbc8:	1906b03a 	or	r3,r3,r4
   4cbcc:	003e4406 	br	4c4e0 <__alt_data_end+0xfffe53e0>
   4cbd0:	2984b03a 	or	r2,r5,r6
   4cbd4:	103e4226 	beq	r2,zero,4c4e0 <__alt_data_end+0xfffe53e0>
   4cbd8:	8989c83a 	sub	r4,r17,r6
   4cbdc:	8911803a 	cmpltu	r8,r17,r4
   4cbe0:	1945c83a 	sub	r2,r3,r5
   4cbe4:	1205c83a 	sub	r2,r2,r8
   4cbe8:	1200202c 	andhi	r8,r2,128
   4cbec:	403e9a26 	beq	r8,zero,4c658 <__alt_data_end+0xfffe5558>
   4cbf0:	3463c83a 	sub	r17,r6,r17
   4cbf4:	28c5c83a 	sub	r2,r5,r3
   4cbf8:	344d803a 	cmpltu	r6,r6,r17
   4cbfc:	1187c83a 	sub	r3,r2,r6
   4cc00:	3825883a 	mov	r18,r7
   4cc04:	003e3606 	br	4c4e0 <__alt_data_end+0xfffe53e0>
   4cc08:	0101ffc4 	movi	r4,2047
   4cc0c:	493fc71e 	bne	r9,r4,4cb2c <__alt_data_end+0xfffe5a2c>
   4cc10:	2807883a 	mov	r3,r5
   4cc14:	3023883a 	mov	r17,r6
   4cc18:	4821883a 	mov	r16,r9
   4cc1c:	003e3006 	br	4c4e0 <__alt_data_end+0xfffe53e0>
   4cc20:	10003626 	beq	r2,zero,4ccfc <__subdf3+0x8a0>
   4cc24:	2984b03a 	or	r2,r5,r6
   4cc28:	10001726 	beq	r2,zero,4cc88 <__subdf3+0x82c>
   4cc2c:	1808d0fa 	srli	r4,r3,3
   4cc30:	8822d0fa 	srli	r17,r17,3
   4cc34:	1806977a 	slli	r3,r3,29
   4cc38:	2080022c 	andhi	r2,r4,8
   4cc3c:	1c62b03a 	or	r17,r3,r17
   4cc40:	10000726 	beq	r2,zero,4cc60 <__subdf3+0x804>
   4cc44:	2812d0fa 	srli	r9,r5,3
   4cc48:	4880022c 	andhi	r2,r9,8
   4cc4c:	1000041e 	bne	r2,zero,4cc60 <__subdf3+0x804>
   4cc50:	300cd0fa 	srli	r6,r6,3
   4cc54:	2804977a 	slli	r2,r5,29
   4cc58:	4809883a 	mov	r4,r9
   4cc5c:	11a2b03a 	or	r17,r2,r6
   4cc60:	8806d77a 	srli	r3,r17,29
   4cc64:	200890fa 	slli	r4,r4,3
   4cc68:	882290fa 	slli	r17,r17,3
   4cc6c:	3825883a 	mov	r18,r7
   4cc70:	1906b03a 	or	r3,r3,r4
   4cc74:	0401ffc4 	movi	r16,2047
   4cc78:	003e1906 	br	4c4e0 <__alt_data_end+0xfffe53e0>
   4cc7c:	000b883a 	mov	r5,zero
   4cc80:	0005883a 	mov	r2,zero
   4cc84:	003e2e06 	br	4c540 <__alt_data_end+0xfffe5440>
   4cc88:	0401ffc4 	movi	r16,2047
   4cc8c:	003e1406 	br	4c4e0 <__alt_data_end+0xfffe53e0>
   4cc90:	0005883a 	mov	r2,zero
   4cc94:	003f7506 	br	4ca6c <__alt_data_end+0xfffe596c>
   4cc98:	0005883a 	mov	r2,zero
   4cc9c:	0009883a 	mov	r4,zero
   4cca0:	003e7806 	br	4c684 <__alt_data_end+0xfffe5584>
   4cca4:	123ff804 	addi	r8,r2,-32
   4cca8:	01000804 	movi	r4,32
   4ccac:	1a10d83a 	srl	r8,r3,r8
   4ccb0:	11002526 	beq	r2,r4,4cd48 <__subdf3+0x8ec>
   4ccb4:	01001004 	movi	r4,64
   4ccb8:	2085c83a 	sub	r2,r4,r2
   4ccbc:	1884983a 	sll	r2,r3,r2
   4ccc0:	1444b03a 	or	r2,r2,r17
   4ccc4:	1004c03a 	cmpne	r2,r2,zero
   4ccc8:	40a2b03a 	or	r17,r8,r2
   4cccc:	0005883a 	mov	r2,zero
   4ccd0:	003f1606 	br	4c92c <__alt_data_end+0xfffe582c>
   4ccd4:	02000434 	movhi	r8,16
   4ccd8:	0009883a 	mov	r4,zero
   4ccdc:	423fffc4 	addi	r8,r8,-1
   4cce0:	00bfffc4 	movi	r2,-1
   4cce4:	0401ffc4 	movi	r16,2047
   4cce8:	003e6606 	br	4c684 <__alt_data_end+0xfffe5584>
   4ccec:	1c62b03a 	or	r17,r3,r17
   4ccf0:	8822c03a 	cmpne	r17,r17,zero
   4ccf4:	0005883a 	mov	r2,zero
   4ccf8:	003f9906 	br	4cb60 <__alt_data_end+0xfffe5a60>
   4ccfc:	2807883a 	mov	r3,r5
   4cd00:	3023883a 	mov	r17,r6
   4cd04:	0401ffc4 	movi	r16,2047
   4cd08:	003df506 	br	4c4e0 <__alt_data_end+0xfffe53e0>
   4cd0c:	2807883a 	mov	r3,r5
   4cd10:	3023883a 	mov	r17,r6
   4cd14:	003df206 	br	4c4e0 <__alt_data_end+0xfffe53e0>
   4cd18:	123ff804 	addi	r8,r2,-32
   4cd1c:	01000804 	movi	r4,32
   4cd20:	1a10d83a 	srl	r8,r3,r8
   4cd24:	11000a26 	beq	r2,r4,4cd50 <__subdf3+0x8f4>
   4cd28:	01001004 	movi	r4,64
   4cd2c:	2085c83a 	sub	r2,r4,r2
   4cd30:	1884983a 	sll	r2,r3,r2
   4cd34:	1444b03a 	or	r2,r2,r17
   4cd38:	1004c03a 	cmpne	r2,r2,zero
   4cd3c:	40a2b03a 	or	r17,r8,r2
   4cd40:	0005883a 	mov	r2,zero
   4cd44:	003f8606 	br	4cb60 <__alt_data_end+0xfffe5a60>
   4cd48:	0005883a 	mov	r2,zero
   4cd4c:	003fdc06 	br	4ccc0 <__alt_data_end+0xfffe5bc0>
   4cd50:	0005883a 	mov	r2,zero
   4cd54:	003ff706 	br	4cd34 <__alt_data_end+0xfffe5c34>

0004cd58 <__fixdfsi>:
   4cd58:	280cd53a 	srli	r6,r5,20
   4cd5c:	00c00434 	movhi	r3,16
   4cd60:	18ffffc4 	addi	r3,r3,-1
   4cd64:	3181ffcc 	andi	r6,r6,2047
   4cd68:	01c0ff84 	movi	r7,1022
   4cd6c:	28c6703a 	and	r3,r5,r3
   4cd70:	280ad7fa 	srli	r5,r5,31
   4cd74:	3980120e 	bge	r7,r6,4cdc0 <__fixdfsi+0x68>
   4cd78:	00810744 	movi	r2,1053
   4cd7c:	11800c16 	blt	r2,r6,4cdb0 <__fixdfsi+0x58>
   4cd80:	00810cc4 	movi	r2,1075
   4cd84:	1185c83a 	sub	r2,r2,r6
   4cd88:	01c007c4 	movi	r7,31
   4cd8c:	18c00434 	orhi	r3,r3,16
   4cd90:	38800d16 	blt	r7,r2,4cdc8 <__fixdfsi+0x70>
   4cd94:	31befb44 	addi	r6,r6,-1043
   4cd98:	2084d83a 	srl	r2,r4,r2
   4cd9c:	1986983a 	sll	r3,r3,r6
   4cda0:	1884b03a 	or	r2,r3,r2
   4cda4:	28000726 	beq	r5,zero,4cdc4 <__fixdfsi+0x6c>
   4cda8:	0085c83a 	sub	r2,zero,r2
   4cdac:	f800283a 	ret
   4cdb0:	00a00034 	movhi	r2,32768
   4cdb4:	10bfffc4 	addi	r2,r2,-1
   4cdb8:	2885883a 	add	r2,r5,r2
   4cdbc:	f800283a 	ret
   4cdc0:	0005883a 	mov	r2,zero
   4cdc4:	f800283a 	ret
   4cdc8:	008104c4 	movi	r2,1043
   4cdcc:	1185c83a 	sub	r2,r2,r6
   4cdd0:	1884d83a 	srl	r2,r3,r2
   4cdd4:	003ff306 	br	4cda4 <__alt_data_end+0xfffe5ca4>

0004cdd8 <__floatsidf>:
   4cdd8:	defffd04 	addi	sp,sp,-12
   4cddc:	dfc00215 	stw	ra,8(sp)
   4cde0:	dc400115 	stw	r17,4(sp)
   4cde4:	dc000015 	stw	r16,0(sp)
   4cde8:	20002b26 	beq	r4,zero,4ce98 <__floatsidf+0xc0>
   4cdec:	2023883a 	mov	r17,r4
   4cdf0:	2020d7fa 	srli	r16,r4,31
   4cdf4:	20002d16 	blt	r4,zero,4ceac <__floatsidf+0xd4>
   4cdf8:	8809883a 	mov	r4,r17
   4cdfc:	0040f240 	call	40f24 <__clzsi2>
   4ce00:	01410784 	movi	r5,1054
   4ce04:	288bc83a 	sub	r5,r5,r2
   4ce08:	01010cc4 	movi	r4,1075
   4ce0c:	2149c83a 	sub	r4,r4,r5
   4ce10:	00c007c4 	movi	r3,31
   4ce14:	1900160e 	bge	r3,r4,4ce70 <__floatsidf+0x98>
   4ce18:	00c104c4 	movi	r3,1043
   4ce1c:	1947c83a 	sub	r3,r3,r5
   4ce20:	88c6983a 	sll	r3,r17,r3
   4ce24:	00800434 	movhi	r2,16
   4ce28:	10bfffc4 	addi	r2,r2,-1
   4ce2c:	1886703a 	and	r3,r3,r2
   4ce30:	2941ffcc 	andi	r5,r5,2047
   4ce34:	800d883a 	mov	r6,r16
   4ce38:	0005883a 	mov	r2,zero
   4ce3c:	280a953a 	slli	r5,r5,20
   4ce40:	31803fcc 	andi	r6,r6,255
   4ce44:	01000434 	movhi	r4,16
   4ce48:	300c97fa 	slli	r6,r6,31
   4ce4c:	213fffc4 	addi	r4,r4,-1
   4ce50:	1906703a 	and	r3,r3,r4
   4ce54:	1946b03a 	or	r3,r3,r5
   4ce58:	1986b03a 	or	r3,r3,r6
   4ce5c:	dfc00217 	ldw	ra,8(sp)
   4ce60:	dc400117 	ldw	r17,4(sp)
   4ce64:	dc000017 	ldw	r16,0(sp)
   4ce68:	dec00304 	addi	sp,sp,12
   4ce6c:	f800283a 	ret
   4ce70:	00c002c4 	movi	r3,11
   4ce74:	1887c83a 	sub	r3,r3,r2
   4ce78:	88c6d83a 	srl	r3,r17,r3
   4ce7c:	8904983a 	sll	r2,r17,r4
   4ce80:	01000434 	movhi	r4,16
   4ce84:	213fffc4 	addi	r4,r4,-1
   4ce88:	2941ffcc 	andi	r5,r5,2047
   4ce8c:	1906703a 	and	r3,r3,r4
   4ce90:	800d883a 	mov	r6,r16
   4ce94:	003fe906 	br	4ce3c <__alt_data_end+0xfffe5d3c>
   4ce98:	000d883a 	mov	r6,zero
   4ce9c:	000b883a 	mov	r5,zero
   4cea0:	0007883a 	mov	r3,zero
   4cea4:	0005883a 	mov	r2,zero
   4cea8:	003fe406 	br	4ce3c <__alt_data_end+0xfffe5d3c>
   4ceac:	0123c83a 	sub	r17,zero,r4
   4ceb0:	003fd106 	br	4cdf8 <__alt_data_end+0xfffe5cf8>

0004ceb4 <__floatunsidf>:
   4ceb4:	defffe04 	addi	sp,sp,-8
   4ceb8:	dc000015 	stw	r16,0(sp)
   4cebc:	dfc00115 	stw	ra,4(sp)
   4cec0:	2021883a 	mov	r16,r4
   4cec4:	20002226 	beq	r4,zero,4cf50 <__floatunsidf+0x9c>
   4cec8:	0040f240 	call	40f24 <__clzsi2>
   4cecc:	01010784 	movi	r4,1054
   4ced0:	2089c83a 	sub	r4,r4,r2
   4ced4:	01810cc4 	movi	r6,1075
   4ced8:	310dc83a 	sub	r6,r6,r4
   4cedc:	00c007c4 	movi	r3,31
   4cee0:	1980120e 	bge	r3,r6,4cf2c <__floatunsidf+0x78>
   4cee4:	00c104c4 	movi	r3,1043
   4cee8:	1907c83a 	sub	r3,r3,r4
   4ceec:	80ca983a 	sll	r5,r16,r3
   4cef0:	00800434 	movhi	r2,16
   4cef4:	10bfffc4 	addi	r2,r2,-1
   4cef8:	2101ffcc 	andi	r4,r4,2047
   4cefc:	0021883a 	mov	r16,zero
   4cf00:	288a703a 	and	r5,r5,r2
   4cf04:	2008953a 	slli	r4,r4,20
   4cf08:	00c00434 	movhi	r3,16
   4cf0c:	18ffffc4 	addi	r3,r3,-1
   4cf10:	28c6703a 	and	r3,r5,r3
   4cf14:	8005883a 	mov	r2,r16
   4cf18:	1906b03a 	or	r3,r3,r4
   4cf1c:	dfc00117 	ldw	ra,4(sp)
   4cf20:	dc000017 	ldw	r16,0(sp)
   4cf24:	dec00204 	addi	sp,sp,8
   4cf28:	f800283a 	ret
   4cf2c:	00c002c4 	movi	r3,11
   4cf30:	188bc83a 	sub	r5,r3,r2
   4cf34:	814ad83a 	srl	r5,r16,r5
   4cf38:	00c00434 	movhi	r3,16
   4cf3c:	18ffffc4 	addi	r3,r3,-1
   4cf40:	81a0983a 	sll	r16,r16,r6
   4cf44:	2101ffcc 	andi	r4,r4,2047
   4cf48:	28ca703a 	and	r5,r5,r3
   4cf4c:	003fed06 	br	4cf04 <__alt_data_end+0xfffe5e04>
   4cf50:	0009883a 	mov	r4,zero
   4cf54:	000b883a 	mov	r5,zero
   4cf58:	003fea06 	br	4cf04 <__alt_data_end+0xfffe5e04>

0004cf5c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4cf5c:	defffe04 	addi	sp,sp,-8
   4cf60:	dfc00115 	stw	ra,4(sp)
   4cf64:	df000015 	stw	fp,0(sp)
   4cf68:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4cf6c:	d0a00b17 	ldw	r2,-32724(gp)
   4cf70:	10000326 	beq	r2,zero,4cf80 <alt_get_errno+0x24>
   4cf74:	d0a00b17 	ldw	r2,-32724(gp)
   4cf78:	103ee83a 	callr	r2
   4cf7c:	00000106 	br	4cf84 <alt_get_errno+0x28>
   4cf80:	d0a6d104 	addi	r2,gp,-25788
}
   4cf84:	e037883a 	mov	sp,fp
   4cf88:	dfc00117 	ldw	ra,4(sp)
   4cf8c:	df000017 	ldw	fp,0(sp)
   4cf90:	dec00204 	addi	sp,sp,8
   4cf94:	f800283a 	ret

0004cf98 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   4cf98:	defffb04 	addi	sp,sp,-20
   4cf9c:	dfc00415 	stw	ra,16(sp)
   4cfa0:	df000315 	stw	fp,12(sp)
   4cfa4:	df000304 	addi	fp,sp,12
   4cfa8:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   4cfac:	e0bfff17 	ldw	r2,-4(fp)
   4cfb0:	10000616 	blt	r2,zero,4cfcc <close+0x34>
   4cfb4:	e0bfff17 	ldw	r2,-4(fp)
   4cfb8:	10c00324 	muli	r3,r2,12
   4cfbc:	00800174 	movhi	r2,5
   4cfc0:	1080e504 	addi	r2,r2,916
   4cfc4:	1885883a 	add	r2,r3,r2
   4cfc8:	00000106 	br	4cfd0 <close+0x38>
   4cfcc:	0005883a 	mov	r2,zero
   4cfd0:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   4cfd4:	e0bffd17 	ldw	r2,-12(fp)
   4cfd8:	10001926 	beq	r2,zero,4d040 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   4cfdc:	e0bffd17 	ldw	r2,-12(fp)
   4cfe0:	10800017 	ldw	r2,0(r2)
   4cfe4:	10800417 	ldw	r2,16(r2)
   4cfe8:	10000626 	beq	r2,zero,4d004 <close+0x6c>
   4cfec:	e0bffd17 	ldw	r2,-12(fp)
   4cff0:	10800017 	ldw	r2,0(r2)
   4cff4:	10800417 	ldw	r2,16(r2)
   4cff8:	e13ffd17 	ldw	r4,-12(fp)
   4cffc:	103ee83a 	callr	r2
   4d000:	00000106 	br	4d008 <close+0x70>
   4d004:	0005883a 	mov	r2,zero
   4d008:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   4d00c:	e13fff17 	ldw	r4,-4(fp)
   4d010:	004d6580 	call	4d658 <alt_release_fd>
    if (rval < 0)
   4d014:	e0bffe17 	ldw	r2,-8(fp)
   4d018:	1000070e 	bge	r2,zero,4d038 <close+0xa0>
    {
      ALT_ERRNO = -rval;
   4d01c:	004cf5c0 	call	4cf5c <alt_get_errno>
   4d020:	1007883a 	mov	r3,r2
   4d024:	e0bffe17 	ldw	r2,-8(fp)
   4d028:	0085c83a 	sub	r2,zero,r2
   4d02c:	18800015 	stw	r2,0(r3)
      return -1;
   4d030:	00bfffc4 	movi	r2,-1
   4d034:	00000706 	br	4d054 <close+0xbc>
    }
    return 0;
   4d038:	0005883a 	mov	r2,zero
   4d03c:	00000506 	br	4d054 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4d040:	004cf5c0 	call	4cf5c <alt_get_errno>
   4d044:	1007883a 	mov	r3,r2
   4d048:	00801444 	movi	r2,81
   4d04c:	18800015 	stw	r2,0(r3)
    return -1;
   4d050:	00bfffc4 	movi	r2,-1
  }
}
   4d054:	e037883a 	mov	sp,fp
   4d058:	dfc00117 	ldw	ra,4(sp)
   4d05c:	df000017 	ldw	fp,0(sp)
   4d060:	dec00204 	addi	sp,sp,8
   4d064:	f800283a 	ret

0004d068 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   4d068:	defffc04 	addi	sp,sp,-16
   4d06c:	df000315 	stw	fp,12(sp)
   4d070:	df000304 	addi	fp,sp,12
   4d074:	e13ffd15 	stw	r4,-12(fp)
   4d078:	e17ffe15 	stw	r5,-8(fp)
   4d07c:	e1bfff15 	stw	r6,-4(fp)
  return len;
   4d080:	e0bfff17 	ldw	r2,-4(fp)
}
   4d084:	e037883a 	mov	sp,fp
   4d088:	df000017 	ldw	fp,0(sp)
   4d08c:	dec00104 	addi	sp,sp,4
   4d090:	f800283a 	ret

0004d094 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4d094:	defffe04 	addi	sp,sp,-8
   4d098:	dfc00115 	stw	ra,4(sp)
   4d09c:	df000015 	stw	fp,0(sp)
   4d0a0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d0a4:	d0a00b17 	ldw	r2,-32724(gp)
   4d0a8:	10000326 	beq	r2,zero,4d0b8 <alt_get_errno+0x24>
   4d0ac:	d0a00b17 	ldw	r2,-32724(gp)
   4d0b0:	103ee83a 	callr	r2
   4d0b4:	00000106 	br	4d0bc <alt_get_errno+0x28>
   4d0b8:	d0a6d104 	addi	r2,gp,-25788
}
   4d0bc:	e037883a 	mov	sp,fp
   4d0c0:	dfc00117 	ldw	ra,4(sp)
   4d0c4:	df000017 	ldw	fp,0(sp)
   4d0c8:	dec00204 	addi	sp,sp,8
   4d0cc:	f800283a 	ret

0004d0d0 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   4d0d0:	defffb04 	addi	sp,sp,-20
   4d0d4:	dfc00415 	stw	ra,16(sp)
   4d0d8:	df000315 	stw	fp,12(sp)
   4d0dc:	df000304 	addi	fp,sp,12
   4d0e0:	e13ffe15 	stw	r4,-8(fp)
   4d0e4:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4d0e8:	e0bffe17 	ldw	r2,-8(fp)
   4d0ec:	10000616 	blt	r2,zero,4d108 <fstat+0x38>
   4d0f0:	e0bffe17 	ldw	r2,-8(fp)
   4d0f4:	10c00324 	muli	r3,r2,12
   4d0f8:	00800174 	movhi	r2,5
   4d0fc:	1080e504 	addi	r2,r2,916
   4d100:	1885883a 	add	r2,r3,r2
   4d104:	00000106 	br	4d10c <fstat+0x3c>
   4d108:	0005883a 	mov	r2,zero
   4d10c:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   4d110:	e0bffd17 	ldw	r2,-12(fp)
   4d114:	10001026 	beq	r2,zero,4d158 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   4d118:	e0bffd17 	ldw	r2,-12(fp)
   4d11c:	10800017 	ldw	r2,0(r2)
   4d120:	10800817 	ldw	r2,32(r2)
   4d124:	10000726 	beq	r2,zero,4d144 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
   4d128:	e0bffd17 	ldw	r2,-12(fp)
   4d12c:	10800017 	ldw	r2,0(r2)
   4d130:	10800817 	ldw	r2,32(r2)
   4d134:	e17fff17 	ldw	r5,-4(fp)
   4d138:	e13ffd17 	ldw	r4,-12(fp)
   4d13c:	103ee83a 	callr	r2
   4d140:	00000a06 	br	4d16c <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   4d144:	e0bfff17 	ldw	r2,-4(fp)
   4d148:	00c80004 	movi	r3,8192
   4d14c:	10c00115 	stw	r3,4(r2)
      return 0;
   4d150:	0005883a 	mov	r2,zero
   4d154:	00000506 	br	4d16c <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4d158:	004d0940 	call	4d094 <alt_get_errno>
   4d15c:	1007883a 	mov	r3,r2
   4d160:	00801444 	movi	r2,81
   4d164:	18800015 	stw	r2,0(r3)
    return -1;
   4d168:	00bfffc4 	movi	r2,-1
  }
}
   4d16c:	e037883a 	mov	sp,fp
   4d170:	dfc00117 	ldw	ra,4(sp)
   4d174:	df000017 	ldw	fp,0(sp)
   4d178:	dec00204 	addi	sp,sp,8
   4d17c:	f800283a 	ret

0004d180 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4d180:	defffe04 	addi	sp,sp,-8
   4d184:	dfc00115 	stw	ra,4(sp)
   4d188:	df000015 	stw	fp,0(sp)
   4d18c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d190:	d0a00b17 	ldw	r2,-32724(gp)
   4d194:	10000326 	beq	r2,zero,4d1a4 <alt_get_errno+0x24>
   4d198:	d0a00b17 	ldw	r2,-32724(gp)
   4d19c:	103ee83a 	callr	r2
   4d1a0:	00000106 	br	4d1a8 <alt_get_errno+0x28>
   4d1a4:	d0a6d104 	addi	r2,gp,-25788
}
   4d1a8:	e037883a 	mov	sp,fp
   4d1ac:	dfc00117 	ldw	ra,4(sp)
   4d1b0:	df000017 	ldw	fp,0(sp)
   4d1b4:	dec00204 	addi	sp,sp,8
   4d1b8:	f800283a 	ret

0004d1bc <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   4d1bc:	deffed04 	addi	sp,sp,-76
   4d1c0:	dfc01215 	stw	ra,72(sp)
   4d1c4:	df001115 	stw	fp,68(sp)
   4d1c8:	df001104 	addi	fp,sp,68
   4d1cc:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4d1d0:	e0bfff17 	ldw	r2,-4(fp)
   4d1d4:	10000616 	blt	r2,zero,4d1f0 <isatty+0x34>
   4d1d8:	e0bfff17 	ldw	r2,-4(fp)
   4d1dc:	10c00324 	muli	r3,r2,12
   4d1e0:	00800174 	movhi	r2,5
   4d1e4:	1080e504 	addi	r2,r2,916
   4d1e8:	1885883a 	add	r2,r3,r2
   4d1ec:	00000106 	br	4d1f4 <isatty+0x38>
   4d1f0:	0005883a 	mov	r2,zero
   4d1f4:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   4d1f8:	e0bfef17 	ldw	r2,-68(fp)
   4d1fc:	10000e26 	beq	r2,zero,4d238 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   4d200:	e0bfef17 	ldw	r2,-68(fp)
   4d204:	10800017 	ldw	r2,0(r2)
   4d208:	10800817 	ldw	r2,32(r2)
   4d20c:	1000021e 	bne	r2,zero,4d218 <isatty+0x5c>
    {
      return 1;
   4d210:	00800044 	movi	r2,1
   4d214:	00000d06 	br	4d24c <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   4d218:	e0bff004 	addi	r2,fp,-64
   4d21c:	100b883a 	mov	r5,r2
   4d220:	e13fff17 	ldw	r4,-4(fp)
   4d224:	004d0d00 	call	4d0d0 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   4d228:	e0bff117 	ldw	r2,-60(fp)
   4d22c:	10880020 	cmpeqi	r2,r2,8192
   4d230:	10803fcc 	andi	r2,r2,255
   4d234:	00000506 	br	4d24c <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4d238:	004d1800 	call	4d180 <alt_get_errno>
   4d23c:	1007883a 	mov	r3,r2
   4d240:	00801444 	movi	r2,81
   4d244:	18800015 	stw	r2,0(r3)
    return 0;
   4d248:	0005883a 	mov	r2,zero
  }
}
   4d24c:	e037883a 	mov	sp,fp
   4d250:	dfc00117 	ldw	ra,4(sp)
   4d254:	df000017 	ldw	fp,0(sp)
   4d258:	dec00204 	addi	sp,sp,8
   4d25c:	f800283a 	ret

0004d260 <alt_load_section>:
   4d260:	defffc04 	addi	sp,sp,-16
   4d264:	df000315 	stw	fp,12(sp)
   4d268:	df000304 	addi	fp,sp,12
   4d26c:	e13ffd15 	stw	r4,-12(fp)
   4d270:	e17ffe15 	stw	r5,-8(fp)
   4d274:	e1bfff15 	stw	r6,-4(fp)
   4d278:	e0fffe17 	ldw	r3,-8(fp)
   4d27c:	e0bffd17 	ldw	r2,-12(fp)
   4d280:	18800c26 	beq	r3,r2,4d2b4 <alt_load_section+0x54>
   4d284:	00000806 	br	4d2a8 <alt_load_section+0x48>
   4d288:	e0bffe17 	ldw	r2,-8(fp)
   4d28c:	10c00104 	addi	r3,r2,4
   4d290:	e0fffe15 	stw	r3,-8(fp)
   4d294:	e0fffd17 	ldw	r3,-12(fp)
   4d298:	19000104 	addi	r4,r3,4
   4d29c:	e13ffd15 	stw	r4,-12(fp)
   4d2a0:	18c00017 	ldw	r3,0(r3)
   4d2a4:	10c00015 	stw	r3,0(r2)
   4d2a8:	e0fffe17 	ldw	r3,-8(fp)
   4d2ac:	e0bfff17 	ldw	r2,-4(fp)
   4d2b0:	18bff51e 	bne	r3,r2,4d288 <__alt_data_end+0xfffe6188>
   4d2b4:	0001883a 	nop
   4d2b8:	e037883a 	mov	sp,fp
   4d2bc:	df000017 	ldw	fp,0(sp)
   4d2c0:	dec00104 	addi	sp,sp,4
   4d2c4:	f800283a 	ret

0004d2c8 <alt_load>:
   4d2c8:	defffe04 	addi	sp,sp,-8
   4d2cc:	dfc00115 	stw	ra,4(sp)
   4d2d0:	df000015 	stw	fp,0(sp)
   4d2d4:	d839883a 	mov	fp,sp
   4d2d8:	01800174 	movhi	r6,5
   4d2dc:	31856d04 	addi	r6,r6,5556
   4d2e0:	01400174 	movhi	r5,5
   4d2e4:	297eb204 	addi	r5,r5,-1336
   4d2e8:	01000174 	movhi	r4,5
   4d2ec:	21056d04 	addi	r4,r4,5556
   4d2f0:	004d2600 	call	4d260 <alt_load_section>
   4d2f4:	01800134 	movhi	r6,4
   4d2f8:	31809104 	addi	r6,r6,580
   4d2fc:	01400134 	movhi	r5,4
   4d300:	29400804 	addi	r5,r5,32
   4d304:	01000134 	movhi	r4,4
   4d308:	21000804 	addi	r4,r4,32
   4d30c:	004d2600 	call	4d260 <alt_load_section>
   4d310:	01800174 	movhi	r6,5
   4d314:	31beb204 	addi	r6,r6,-1336
   4d318:	01400174 	movhi	r5,5
   4d31c:	297de204 	addi	r5,r5,-2168
   4d320:	01000174 	movhi	r4,5
   4d324:	213de204 	addi	r4,r4,-2168
   4d328:	004d2600 	call	4d260 <alt_load_section>
   4d32c:	004e6740 	call	4e674 <alt_dcache_flush_all>
   4d330:	004e85c0 	call	4e85c <alt_icache_flush_all>
   4d334:	0001883a 	nop
   4d338:	e037883a 	mov	sp,fp
   4d33c:	dfc00117 	ldw	ra,4(sp)
   4d340:	df000017 	ldw	fp,0(sp)
   4d344:	dec00204 	addi	sp,sp,8
   4d348:	f800283a 	ret

0004d34c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4d34c:	defffe04 	addi	sp,sp,-8
   4d350:	dfc00115 	stw	ra,4(sp)
   4d354:	df000015 	stw	fp,0(sp)
   4d358:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d35c:	d0a00b17 	ldw	r2,-32724(gp)
   4d360:	10000326 	beq	r2,zero,4d370 <alt_get_errno+0x24>
   4d364:	d0a00b17 	ldw	r2,-32724(gp)
   4d368:	103ee83a 	callr	r2
   4d36c:	00000106 	br	4d374 <alt_get_errno+0x28>
   4d370:	d0a6d104 	addi	r2,gp,-25788
}
   4d374:	e037883a 	mov	sp,fp
   4d378:	dfc00117 	ldw	ra,4(sp)
   4d37c:	df000017 	ldw	fp,0(sp)
   4d380:	dec00204 	addi	sp,sp,8
   4d384:	f800283a 	ret

0004d388 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   4d388:	defff904 	addi	sp,sp,-28
   4d38c:	dfc00615 	stw	ra,24(sp)
   4d390:	df000515 	stw	fp,20(sp)
   4d394:	df000504 	addi	fp,sp,20
   4d398:	e13ffd15 	stw	r4,-12(fp)
   4d39c:	e17ffe15 	stw	r5,-8(fp)
   4d3a0:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   4d3a4:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4d3a8:	e0bffd17 	ldw	r2,-12(fp)
   4d3ac:	10000616 	blt	r2,zero,4d3c8 <lseek+0x40>
   4d3b0:	e0bffd17 	ldw	r2,-12(fp)
   4d3b4:	10c00324 	muli	r3,r2,12
   4d3b8:	00800174 	movhi	r2,5
   4d3bc:	1080e504 	addi	r2,r2,916
   4d3c0:	1885883a 	add	r2,r3,r2
   4d3c4:	00000106 	br	4d3cc <lseek+0x44>
   4d3c8:	0005883a 	mov	r2,zero
   4d3cc:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   4d3d0:	e0bffc17 	ldw	r2,-16(fp)
   4d3d4:	10001026 	beq	r2,zero,4d418 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   4d3d8:	e0bffc17 	ldw	r2,-16(fp)
   4d3dc:	10800017 	ldw	r2,0(r2)
   4d3e0:	10800717 	ldw	r2,28(r2)
   4d3e4:	10000926 	beq	r2,zero,4d40c <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   4d3e8:	e0bffc17 	ldw	r2,-16(fp)
   4d3ec:	10800017 	ldw	r2,0(r2)
   4d3f0:	10800717 	ldw	r2,28(r2)
   4d3f4:	e1bfff17 	ldw	r6,-4(fp)
   4d3f8:	e17ffe17 	ldw	r5,-8(fp)
   4d3fc:	e13ffc17 	ldw	r4,-16(fp)
   4d400:	103ee83a 	callr	r2
   4d404:	e0bffb15 	stw	r2,-20(fp)
   4d408:	00000506 	br	4d420 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   4d40c:	00bfde84 	movi	r2,-134
   4d410:	e0bffb15 	stw	r2,-20(fp)
   4d414:	00000206 	br	4d420 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
   4d418:	00bfebc4 	movi	r2,-81
   4d41c:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   4d420:	e0bffb17 	ldw	r2,-20(fp)
   4d424:	1000070e 	bge	r2,zero,4d444 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
   4d428:	004d34c0 	call	4d34c <alt_get_errno>
   4d42c:	1007883a 	mov	r3,r2
   4d430:	e0bffb17 	ldw	r2,-20(fp)
   4d434:	0085c83a 	sub	r2,zero,r2
   4d438:	18800015 	stw	r2,0(r3)
    rc = -1;
   4d43c:	00bfffc4 	movi	r2,-1
   4d440:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   4d444:	e0bffb17 	ldw	r2,-20(fp)
}
   4d448:	e037883a 	mov	sp,fp
   4d44c:	dfc00117 	ldw	ra,4(sp)
   4d450:	df000017 	ldw	fp,0(sp)
   4d454:	dec00204 	addi	sp,sp,8
   4d458:	f800283a 	ret

0004d45c <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   4d45c:	defffd04 	addi	sp,sp,-12
   4d460:	dfc00215 	stw	ra,8(sp)
   4d464:	df000115 	stw	fp,4(sp)
   4d468:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   4d46c:	0009883a 	mov	r4,zero
   4d470:	004d9040 	call	4d904 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   4d474:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   4d478:	004d93c0 	call	4d93c <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   4d47c:	01800174 	movhi	r6,5
   4d480:	31beaa04 	addi	r6,r6,-1368
   4d484:	01400174 	movhi	r5,5
   4d488:	297eaa04 	addi	r5,r5,-1368
   4d48c:	01000174 	movhi	r4,5
   4d490:	213eaa04 	addi	r4,r4,-1368
   4d494:	004ebf40 	call	4ebf4 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   4d498:	004e79c0 	call	4e79c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   4d49c:	01000174 	movhi	r4,5
   4d4a0:	2139ff04 	addi	r4,r4,-6148
   4d4a4:	004f3f40 	call	4f3f4 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   4d4a8:	d0a6d217 	ldw	r2,-25784(gp)
   4d4ac:	d0e6d317 	ldw	r3,-25780(gp)
   4d4b0:	d126d417 	ldw	r4,-25776(gp)
   4d4b4:	200d883a 	mov	r6,r4
   4d4b8:	180b883a 	mov	r5,r3
   4d4bc:	1009883a 	mov	r4,r2
   4d4c0:	00402900 	call	40290 <main>
   4d4c4:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   4d4c8:	01000044 	movi	r4,1
   4d4cc:	004cf980 	call	4cf98 <close>
  exit (result);
   4d4d0:	e13fff17 	ldw	r4,-4(fp)
   4d4d4:	004f4080 	call	4f408 <exit>

0004d4d8 <__malloc_lock>:
   4d4d8:	defffe04 	addi	sp,sp,-8
   4d4dc:	df000115 	stw	fp,4(sp)
   4d4e0:	df000104 	addi	fp,sp,4
   4d4e4:	e13fff15 	stw	r4,-4(fp)
   4d4e8:	0001883a 	nop
   4d4ec:	e037883a 	mov	sp,fp
   4d4f0:	df000017 	ldw	fp,0(sp)
   4d4f4:	dec00104 	addi	sp,sp,4
   4d4f8:	f800283a 	ret

0004d4fc <__malloc_unlock>:
   4d4fc:	defffe04 	addi	sp,sp,-8
   4d500:	df000115 	stw	fp,4(sp)
   4d504:	df000104 	addi	fp,sp,4
   4d508:	e13fff15 	stw	r4,-4(fp)
   4d50c:	0001883a 	nop
   4d510:	e037883a 	mov	sp,fp
   4d514:	df000017 	ldw	fp,0(sp)
   4d518:	dec00104 	addi	sp,sp,4
   4d51c:	f800283a 	ret

0004d520 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4d520:	defffe04 	addi	sp,sp,-8
   4d524:	dfc00115 	stw	ra,4(sp)
   4d528:	df000015 	stw	fp,0(sp)
   4d52c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d530:	d0a00b17 	ldw	r2,-32724(gp)
   4d534:	10000326 	beq	r2,zero,4d544 <alt_get_errno+0x24>
   4d538:	d0a00b17 	ldw	r2,-32724(gp)
   4d53c:	103ee83a 	callr	r2
   4d540:	00000106 	br	4d548 <alt_get_errno+0x28>
   4d544:	d0a6d104 	addi	r2,gp,-25788
}
   4d548:	e037883a 	mov	sp,fp
   4d54c:	dfc00117 	ldw	ra,4(sp)
   4d550:	df000017 	ldw	fp,0(sp)
   4d554:	dec00204 	addi	sp,sp,8
   4d558:	f800283a 	ret

0004d55c <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   4d55c:	defff904 	addi	sp,sp,-28
   4d560:	dfc00615 	stw	ra,24(sp)
   4d564:	df000515 	stw	fp,20(sp)
   4d568:	df000504 	addi	fp,sp,20
   4d56c:	e13ffd15 	stw	r4,-12(fp)
   4d570:	e17ffe15 	stw	r5,-8(fp)
   4d574:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4d578:	e0bffd17 	ldw	r2,-12(fp)
   4d57c:	10000616 	blt	r2,zero,4d598 <read+0x3c>
   4d580:	e0bffd17 	ldw	r2,-12(fp)
   4d584:	10c00324 	muli	r3,r2,12
   4d588:	00800174 	movhi	r2,5
   4d58c:	1080e504 	addi	r2,r2,916
   4d590:	1885883a 	add	r2,r3,r2
   4d594:	00000106 	br	4d59c <read+0x40>
   4d598:	0005883a 	mov	r2,zero
   4d59c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   4d5a0:	e0bffb17 	ldw	r2,-20(fp)
   4d5a4:	10002226 	beq	r2,zero,4d630 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   4d5a8:	e0bffb17 	ldw	r2,-20(fp)
   4d5ac:	10800217 	ldw	r2,8(r2)
   4d5b0:	108000cc 	andi	r2,r2,3
   4d5b4:	10800060 	cmpeqi	r2,r2,1
   4d5b8:	1000181e 	bne	r2,zero,4d61c <read+0xc0>
        (fd->dev->read))
   4d5bc:	e0bffb17 	ldw	r2,-20(fp)
   4d5c0:	10800017 	ldw	r2,0(r2)
   4d5c4:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   4d5c8:	10001426 	beq	r2,zero,4d61c <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   4d5cc:	e0bffb17 	ldw	r2,-20(fp)
   4d5d0:	10800017 	ldw	r2,0(r2)
   4d5d4:	10800517 	ldw	r2,20(r2)
   4d5d8:	e0ffff17 	ldw	r3,-4(fp)
   4d5dc:	180d883a 	mov	r6,r3
   4d5e0:	e17ffe17 	ldw	r5,-8(fp)
   4d5e4:	e13ffb17 	ldw	r4,-20(fp)
   4d5e8:	103ee83a 	callr	r2
   4d5ec:	e0bffc15 	stw	r2,-16(fp)
   4d5f0:	e0bffc17 	ldw	r2,-16(fp)
   4d5f4:	1000070e 	bge	r2,zero,4d614 <read+0xb8>
        {
          ALT_ERRNO = -rval;
   4d5f8:	004d5200 	call	4d520 <alt_get_errno>
   4d5fc:	1007883a 	mov	r3,r2
   4d600:	e0bffc17 	ldw	r2,-16(fp)
   4d604:	0085c83a 	sub	r2,zero,r2
   4d608:	18800015 	stw	r2,0(r3)
          return -1;
   4d60c:	00bfffc4 	movi	r2,-1
   4d610:	00000c06 	br	4d644 <read+0xe8>
        }
        return rval;
   4d614:	e0bffc17 	ldw	r2,-16(fp)
   4d618:	00000a06 	br	4d644 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
   4d61c:	004d5200 	call	4d520 <alt_get_errno>
   4d620:	1007883a 	mov	r3,r2
   4d624:	00800344 	movi	r2,13
   4d628:	18800015 	stw	r2,0(r3)
   4d62c:	00000406 	br	4d640 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   4d630:	004d5200 	call	4d520 <alt_get_errno>
   4d634:	1007883a 	mov	r3,r2
   4d638:	00801444 	movi	r2,81
   4d63c:	18800015 	stw	r2,0(r3)
  }
  return -1;
   4d640:	00bfffc4 	movi	r2,-1
}
   4d644:	e037883a 	mov	sp,fp
   4d648:	dfc00117 	ldw	ra,4(sp)
   4d64c:	df000017 	ldw	fp,0(sp)
   4d650:	dec00204 	addi	sp,sp,8
   4d654:	f800283a 	ret

0004d658 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   4d658:	defffe04 	addi	sp,sp,-8
   4d65c:	df000115 	stw	fp,4(sp)
   4d660:	df000104 	addi	fp,sp,4
   4d664:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   4d668:	e0bfff17 	ldw	r2,-4(fp)
   4d66c:	108000d0 	cmplti	r2,r2,3
   4d670:	10000d1e 	bne	r2,zero,4d6a8 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
   4d674:	00800174 	movhi	r2,5
   4d678:	1080e504 	addi	r2,r2,916
   4d67c:	e0ffff17 	ldw	r3,-4(fp)
   4d680:	18c00324 	muli	r3,r3,12
   4d684:	10c5883a 	add	r2,r2,r3
   4d688:	10800204 	addi	r2,r2,8
   4d68c:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   4d690:	00800174 	movhi	r2,5
   4d694:	1080e504 	addi	r2,r2,916
   4d698:	e0ffff17 	ldw	r3,-4(fp)
   4d69c:	18c00324 	muli	r3,r3,12
   4d6a0:	10c5883a 	add	r2,r2,r3
   4d6a4:	10000015 	stw	zero,0(r2)
  }
}
   4d6a8:	0001883a 	nop
   4d6ac:	e037883a 	mov	sp,fp
   4d6b0:	df000017 	ldw	fp,0(sp)
   4d6b4:	dec00104 	addi	sp,sp,4
   4d6b8:	f800283a 	ret

0004d6bc <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   4d6bc:	defff904 	addi	sp,sp,-28
   4d6c0:	df000615 	stw	fp,24(sp)
   4d6c4:	df000604 	addi	fp,sp,24
   4d6c8:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4d6cc:	0005303a 	rdctl	r2,status
   4d6d0:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4d6d4:	e0fffe17 	ldw	r3,-8(fp)
   4d6d8:	00bfff84 	movi	r2,-2
   4d6dc:	1884703a 	and	r2,r3,r2
   4d6e0:	1001703a 	wrctl	status,r2
  
  return context;
   4d6e4:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   4d6e8:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   4d6ec:	d0a00c17 	ldw	r2,-32720(gp)
   4d6f0:	10c000c4 	addi	r3,r2,3
   4d6f4:	00bfff04 	movi	r2,-4
   4d6f8:	1884703a 	and	r2,r3,r2
   4d6fc:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   4d700:	d0e00c17 	ldw	r3,-32720(gp)
   4d704:	e0bfff17 	ldw	r2,-4(fp)
   4d708:	1887883a 	add	r3,r3,r2
   4d70c:	008001b4 	movhi	r2,6
   4d710:	109c4004 	addi	r2,r2,28928
   4d714:	10c0062e 	bgeu	r2,r3,4d730 <sbrk+0x74>
   4d718:	e0bffb17 	ldw	r2,-20(fp)
   4d71c:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4d720:	e0bffa17 	ldw	r2,-24(fp)
   4d724:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   4d728:	00bfffc4 	movi	r2,-1
   4d72c:	00000b06 	br	4d75c <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   4d730:	d0a00c17 	ldw	r2,-32720(gp)
   4d734:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
   4d738:	d0e00c17 	ldw	r3,-32720(gp)
   4d73c:	e0bfff17 	ldw	r2,-4(fp)
   4d740:	1885883a 	add	r2,r3,r2
   4d744:	d0a00c15 	stw	r2,-32720(gp)
   4d748:	e0bffb17 	ldw	r2,-20(fp)
   4d74c:	e0bffc15 	stw	r2,-16(fp)
   4d750:	e0bffc17 	ldw	r2,-16(fp)
   4d754:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   4d758:	e0bffd17 	ldw	r2,-12(fp)
} 
   4d75c:	e037883a 	mov	sp,fp
   4d760:	df000017 	ldw	fp,0(sp)
   4d764:	dec00104 	addi	sp,sp,4
   4d768:	f800283a 	ret

0004d76c <usleep>:
   4d76c:	defffd04 	addi	sp,sp,-12
   4d770:	dfc00215 	stw	ra,8(sp)
   4d774:	df000115 	stw	fp,4(sp)
   4d778:	df000104 	addi	fp,sp,4
   4d77c:	e13fff15 	stw	r4,-4(fp)
   4d780:	e13fff17 	ldw	r4,-4(fp)
   4d784:	004e51c0 	call	4e51c <alt_busy_sleep>
   4d788:	e037883a 	mov	sp,fp
   4d78c:	dfc00117 	ldw	ra,4(sp)
   4d790:	df000017 	ldw	fp,0(sp)
   4d794:	dec00204 	addi	sp,sp,8
   4d798:	f800283a 	ret

0004d79c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4d79c:	defffe04 	addi	sp,sp,-8
   4d7a0:	dfc00115 	stw	ra,4(sp)
   4d7a4:	df000015 	stw	fp,0(sp)
   4d7a8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d7ac:	d0a00b17 	ldw	r2,-32724(gp)
   4d7b0:	10000326 	beq	r2,zero,4d7c0 <alt_get_errno+0x24>
   4d7b4:	d0a00b17 	ldw	r2,-32724(gp)
   4d7b8:	103ee83a 	callr	r2
   4d7bc:	00000106 	br	4d7c4 <alt_get_errno+0x28>
   4d7c0:	d0a6d104 	addi	r2,gp,-25788
}
   4d7c4:	e037883a 	mov	sp,fp
   4d7c8:	dfc00117 	ldw	ra,4(sp)
   4d7cc:	df000017 	ldw	fp,0(sp)
   4d7d0:	dec00204 	addi	sp,sp,8
   4d7d4:	f800283a 	ret

0004d7d8 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   4d7d8:	defff904 	addi	sp,sp,-28
   4d7dc:	dfc00615 	stw	ra,24(sp)
   4d7e0:	df000515 	stw	fp,20(sp)
   4d7e4:	df000504 	addi	fp,sp,20
   4d7e8:	e13ffd15 	stw	r4,-12(fp)
   4d7ec:	e17ffe15 	stw	r5,-8(fp)
   4d7f0:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4d7f4:	e0bffd17 	ldw	r2,-12(fp)
   4d7f8:	10000616 	blt	r2,zero,4d814 <write+0x3c>
   4d7fc:	e0bffd17 	ldw	r2,-12(fp)
   4d800:	10c00324 	muli	r3,r2,12
   4d804:	00800174 	movhi	r2,5
   4d808:	1080e504 	addi	r2,r2,916
   4d80c:	1885883a 	add	r2,r3,r2
   4d810:	00000106 	br	4d818 <write+0x40>
   4d814:	0005883a 	mov	r2,zero
   4d818:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   4d81c:	e0bffb17 	ldw	r2,-20(fp)
   4d820:	10002126 	beq	r2,zero,4d8a8 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   4d824:	e0bffb17 	ldw	r2,-20(fp)
   4d828:	10800217 	ldw	r2,8(r2)
   4d82c:	108000cc 	andi	r2,r2,3
   4d830:	10001826 	beq	r2,zero,4d894 <write+0xbc>
   4d834:	e0bffb17 	ldw	r2,-20(fp)
   4d838:	10800017 	ldw	r2,0(r2)
   4d83c:	10800617 	ldw	r2,24(r2)
   4d840:	10001426 	beq	r2,zero,4d894 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   4d844:	e0bffb17 	ldw	r2,-20(fp)
   4d848:	10800017 	ldw	r2,0(r2)
   4d84c:	10800617 	ldw	r2,24(r2)
   4d850:	e0ffff17 	ldw	r3,-4(fp)
   4d854:	180d883a 	mov	r6,r3
   4d858:	e17ffe17 	ldw	r5,-8(fp)
   4d85c:	e13ffb17 	ldw	r4,-20(fp)
   4d860:	103ee83a 	callr	r2
   4d864:	e0bffc15 	stw	r2,-16(fp)
   4d868:	e0bffc17 	ldw	r2,-16(fp)
   4d86c:	1000070e 	bge	r2,zero,4d88c <write+0xb4>
      {
        ALT_ERRNO = -rval;
   4d870:	004d79c0 	call	4d79c <alt_get_errno>
   4d874:	1007883a 	mov	r3,r2
   4d878:	e0bffc17 	ldw	r2,-16(fp)
   4d87c:	0085c83a 	sub	r2,zero,r2
   4d880:	18800015 	stw	r2,0(r3)
        return -1;
   4d884:	00bfffc4 	movi	r2,-1
   4d888:	00000c06 	br	4d8bc <write+0xe4>
      }
      return rval;
   4d88c:	e0bffc17 	ldw	r2,-16(fp)
   4d890:	00000a06 	br	4d8bc <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
   4d894:	004d79c0 	call	4d79c <alt_get_errno>
   4d898:	1007883a 	mov	r3,r2
   4d89c:	00800344 	movi	r2,13
   4d8a0:	18800015 	stw	r2,0(r3)
   4d8a4:	00000406 	br	4d8b8 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   4d8a8:	004d79c0 	call	4d79c <alt_get_errno>
   4d8ac:	1007883a 	mov	r3,r2
   4d8b0:	00801444 	movi	r2,81
   4d8b4:	18800015 	stw	r2,0(r3)
  }
  return -1;
   4d8b8:	00bfffc4 	movi	r2,-1
}
   4d8bc:	e037883a 	mov	sp,fp
   4d8c0:	dfc00117 	ldw	ra,4(sp)
   4d8c4:	df000017 	ldw	fp,0(sp)
   4d8c8:	dec00204 	addi	sp,sp,8
   4d8cc:	f800283a 	ret

0004d8d0 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   4d8d0:	defffd04 	addi	sp,sp,-12
   4d8d4:	dfc00215 	stw	ra,8(sp)
   4d8d8:	df000115 	stw	fp,4(sp)
   4d8dc:	df000104 	addi	fp,sp,4
   4d8e0:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   4d8e4:	d1600804 	addi	r5,gp,-32736
   4d8e8:	e13fff17 	ldw	r4,-4(fp)
   4d8ec:	004e6f80 	call	4e6f8 <alt_dev_llist_insert>
}
   4d8f0:	e037883a 	mov	sp,fp
   4d8f4:	dfc00117 	ldw	ra,4(sp)
   4d8f8:	df000017 	ldw	fp,0(sp)
   4d8fc:	dec00204 	addi	sp,sp,8
   4d900:	f800283a 	ret

0004d904 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   4d904:	defffd04 	addi	sp,sp,-12
   4d908:	dfc00215 	stw	ra,8(sp)
   4d90c:	df000115 	stw	fp,4(sp)
   4d910:	df000104 	addi	fp,sp,4
   4d914:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
   4d918:	004f0680 	call	4f068 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   4d91c:	00800044 	movi	r2,1
   4d920:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   4d924:	0001883a 	nop
   4d928:	e037883a 	mov	sp,fp
   4d92c:	dfc00117 	ldw	ra,4(sp)
   4d930:	df000017 	ldw	fp,0(sp)
   4d934:	dec00204 	addi	sp,sp,8
   4d938:	f800283a 	ret

0004d93c <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   4d93c:	defffe04 	addi	sp,sp,-8
   4d940:	dfc00115 	stw	ra,4(sp)
   4d944:	df000015 	stw	fp,0(sp)
   4d948:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
   4d94c:	000d883a 	mov	r6,zero
   4d950:	000b883a 	mov	r5,zero
   4d954:	01000174 	movhi	r4,5
   4d958:	21014f04 	addi	r4,r4,1340
   4d95c:	004daec0 	call	4daec <altera_avalon_jtag_uart_init>
   4d960:	01000174 	movhi	r4,5
   4d964:	21014504 	addi	r4,r4,1300
   4d968:	004d8d00 	call	4d8d0 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS, sysid_qsys);
   4d96c:	0001883a 	nop
}
   4d970:	0001883a 	nop
   4d974:	e037883a 	mov	sp,fp
   4d978:	dfc00117 	ldw	ra,4(sp)
   4d97c:	df000017 	ldw	fp,0(sp)
   4d980:	dec00204 	addi	sp,sp,8
   4d984:	f800283a 	ret

0004d988 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   4d988:	defffa04 	addi	sp,sp,-24
   4d98c:	dfc00515 	stw	ra,20(sp)
   4d990:	df000415 	stw	fp,16(sp)
   4d994:	df000404 	addi	fp,sp,16
   4d998:	e13ffd15 	stw	r4,-12(fp)
   4d99c:	e17ffe15 	stw	r5,-8(fp)
   4d9a0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4d9a4:	e0bffd17 	ldw	r2,-12(fp)
   4d9a8:	10800017 	ldw	r2,0(r2)
   4d9ac:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   4d9b0:	e0bffc17 	ldw	r2,-16(fp)
   4d9b4:	10c00a04 	addi	r3,r2,40
   4d9b8:	e0bffd17 	ldw	r2,-12(fp)
   4d9bc:	10800217 	ldw	r2,8(r2)
   4d9c0:	100f883a 	mov	r7,r2
   4d9c4:	e1bfff17 	ldw	r6,-4(fp)
   4d9c8:	e17ffe17 	ldw	r5,-8(fp)
   4d9cc:	1809883a 	mov	r4,r3
   4d9d0:	004dfb00 	call	4dfb0 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   4d9d4:	e037883a 	mov	sp,fp
   4d9d8:	dfc00117 	ldw	ra,4(sp)
   4d9dc:	df000017 	ldw	fp,0(sp)
   4d9e0:	dec00204 	addi	sp,sp,8
   4d9e4:	f800283a 	ret

0004d9e8 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   4d9e8:	defffa04 	addi	sp,sp,-24
   4d9ec:	dfc00515 	stw	ra,20(sp)
   4d9f0:	df000415 	stw	fp,16(sp)
   4d9f4:	df000404 	addi	fp,sp,16
   4d9f8:	e13ffd15 	stw	r4,-12(fp)
   4d9fc:	e17ffe15 	stw	r5,-8(fp)
   4da00:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4da04:	e0bffd17 	ldw	r2,-12(fp)
   4da08:	10800017 	ldw	r2,0(r2)
   4da0c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   4da10:	e0bffc17 	ldw	r2,-16(fp)
   4da14:	10c00a04 	addi	r3,r2,40
   4da18:	e0bffd17 	ldw	r2,-12(fp)
   4da1c:	10800217 	ldw	r2,8(r2)
   4da20:	100f883a 	mov	r7,r2
   4da24:	e1bfff17 	ldw	r6,-4(fp)
   4da28:	e17ffe17 	ldw	r5,-8(fp)
   4da2c:	1809883a 	mov	r4,r3
   4da30:	004e1cc0 	call	4e1cc <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   4da34:	e037883a 	mov	sp,fp
   4da38:	dfc00117 	ldw	ra,4(sp)
   4da3c:	df000017 	ldw	fp,0(sp)
   4da40:	dec00204 	addi	sp,sp,8
   4da44:	f800283a 	ret

0004da48 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   4da48:	defffc04 	addi	sp,sp,-16
   4da4c:	dfc00315 	stw	ra,12(sp)
   4da50:	df000215 	stw	fp,8(sp)
   4da54:	df000204 	addi	fp,sp,8
   4da58:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4da5c:	e0bfff17 	ldw	r2,-4(fp)
   4da60:	10800017 	ldw	r2,0(r2)
   4da64:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   4da68:	e0bffe17 	ldw	r2,-8(fp)
   4da6c:	10c00a04 	addi	r3,r2,40
   4da70:	e0bfff17 	ldw	r2,-4(fp)
   4da74:	10800217 	ldw	r2,8(r2)
   4da78:	100b883a 	mov	r5,r2
   4da7c:	1809883a 	mov	r4,r3
   4da80:	004de580 	call	4de58 <altera_avalon_jtag_uart_close>
}
   4da84:	e037883a 	mov	sp,fp
   4da88:	dfc00117 	ldw	ra,4(sp)
   4da8c:	df000017 	ldw	fp,0(sp)
   4da90:	dec00204 	addi	sp,sp,8
   4da94:	f800283a 	ret

0004da98 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   4da98:	defffa04 	addi	sp,sp,-24
   4da9c:	dfc00515 	stw	ra,20(sp)
   4daa0:	df000415 	stw	fp,16(sp)
   4daa4:	df000404 	addi	fp,sp,16
   4daa8:	e13ffd15 	stw	r4,-12(fp)
   4daac:	e17ffe15 	stw	r5,-8(fp)
   4dab0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   4dab4:	e0bffd17 	ldw	r2,-12(fp)
   4dab8:	10800017 	ldw	r2,0(r2)
   4dabc:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   4dac0:	e0bffc17 	ldw	r2,-16(fp)
   4dac4:	10800a04 	addi	r2,r2,40
   4dac8:	e1bfff17 	ldw	r6,-4(fp)
   4dacc:	e17ffe17 	ldw	r5,-8(fp)
   4dad0:	1009883a 	mov	r4,r2
   4dad4:	004dec00 	call	4dec0 <altera_avalon_jtag_uart_ioctl>
}
   4dad8:	e037883a 	mov	sp,fp
   4dadc:	dfc00117 	ldw	ra,4(sp)
   4dae0:	df000017 	ldw	fp,0(sp)
   4dae4:	dec00204 	addi	sp,sp,8
   4dae8:	f800283a 	ret

0004daec <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   4daec:	defffa04 	addi	sp,sp,-24
   4daf0:	dfc00515 	stw	ra,20(sp)
   4daf4:	df000415 	stw	fp,16(sp)
   4daf8:	df000404 	addi	fp,sp,16
   4dafc:	e13ffd15 	stw	r4,-12(fp)
   4db00:	e17ffe15 	stw	r5,-8(fp)
   4db04:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4db08:	e0bffd17 	ldw	r2,-12(fp)
   4db0c:	00c00044 	movi	r3,1
   4db10:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   4db14:	e0bffd17 	ldw	r2,-12(fp)
   4db18:	10800017 	ldw	r2,0(r2)
   4db1c:	10800104 	addi	r2,r2,4
   4db20:	1007883a 	mov	r3,r2
   4db24:	e0bffd17 	ldw	r2,-12(fp)
   4db28:	10800817 	ldw	r2,32(r2)
   4db2c:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   4db30:	e0bffe17 	ldw	r2,-8(fp)
   4db34:	e0ffff17 	ldw	r3,-4(fp)
   4db38:	d8000015 	stw	zero,0(sp)
   4db3c:	e1fffd17 	ldw	r7,-12(fp)
   4db40:	01800174 	movhi	r6,5
   4db44:	31b6eb04 	addi	r6,r6,-9300
   4db48:	180b883a 	mov	r5,r3
   4db4c:	1009883a 	mov	r4,r2
   4db50:	004e8900 	call	4e890 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   4db54:	e0bffd17 	ldw	r2,-12(fp)
   4db58:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   4db5c:	e0bffd17 	ldw	r2,-12(fp)
   4db60:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   4db64:	d0e6d617 	ldw	r3,-25768(gp)
   4db68:	e1fffd17 	ldw	r7,-12(fp)
   4db6c:	01800174 	movhi	r6,5
   4db70:	31b76e04 	addi	r6,r6,-8776
   4db74:	180b883a 	mov	r5,r3
   4db78:	1009883a 	mov	r4,r2
   4db7c:	004e3f00 	call	4e3f0 <alt_alarm_start>
   4db80:	1000040e 	bge	r2,zero,4db94 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   4db84:	e0fffd17 	ldw	r3,-12(fp)
   4db88:	00a00034 	movhi	r2,32768
   4db8c:	10bfffc4 	addi	r2,r2,-1
   4db90:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   4db94:	0001883a 	nop
   4db98:	e037883a 	mov	sp,fp
   4db9c:	dfc00117 	ldw	ra,4(sp)
   4dba0:	df000017 	ldw	fp,0(sp)
   4dba4:	dec00204 	addi	sp,sp,8
   4dba8:	f800283a 	ret

0004dbac <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   4dbac:	defff804 	addi	sp,sp,-32
   4dbb0:	df000715 	stw	fp,28(sp)
   4dbb4:	df000704 	addi	fp,sp,28
   4dbb8:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   4dbbc:	e0bfff17 	ldw	r2,-4(fp)
   4dbc0:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
   4dbc4:	e0bffb17 	ldw	r2,-20(fp)
   4dbc8:	10800017 	ldw	r2,0(r2)
   4dbcc:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4dbd0:	e0bffc17 	ldw	r2,-16(fp)
   4dbd4:	10800104 	addi	r2,r2,4
   4dbd8:	10800037 	ldwio	r2,0(r2)
   4dbdc:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   4dbe0:	e0bffd17 	ldw	r2,-12(fp)
   4dbe4:	1080c00c 	andi	r2,r2,768
   4dbe8:	10006d26 	beq	r2,zero,4dda0 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   4dbec:	e0bffd17 	ldw	r2,-12(fp)
   4dbf0:	1080400c 	andi	r2,r2,256
   4dbf4:	10003526 	beq	r2,zero,4dccc <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   4dbf8:	00800074 	movhi	r2,1
   4dbfc:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4dc00:	e0bffb17 	ldw	r2,-20(fp)
   4dc04:	10800a17 	ldw	r2,40(r2)
   4dc08:	10800044 	addi	r2,r2,1
   4dc0c:	1081ffcc 	andi	r2,r2,2047
   4dc10:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
   4dc14:	e0bffb17 	ldw	r2,-20(fp)
   4dc18:	10c00b17 	ldw	r3,44(r2)
   4dc1c:	e0bffe17 	ldw	r2,-8(fp)
   4dc20:	18801526 	beq	r3,r2,4dc78 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   4dc24:	e0bffc17 	ldw	r2,-16(fp)
   4dc28:	10800037 	ldwio	r2,0(r2)
   4dc2c:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   4dc30:	e0bff917 	ldw	r2,-28(fp)
   4dc34:	10a0000c 	andi	r2,r2,32768
   4dc38:	10001126 	beq	r2,zero,4dc80 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   4dc3c:	e0bffb17 	ldw	r2,-20(fp)
   4dc40:	10800a17 	ldw	r2,40(r2)
   4dc44:	e0fff917 	ldw	r3,-28(fp)
   4dc48:	1809883a 	mov	r4,r3
   4dc4c:	e0fffb17 	ldw	r3,-20(fp)
   4dc50:	1885883a 	add	r2,r3,r2
   4dc54:	10800e04 	addi	r2,r2,56
   4dc58:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4dc5c:	e0bffb17 	ldw	r2,-20(fp)
   4dc60:	10800a17 	ldw	r2,40(r2)
   4dc64:	10800044 	addi	r2,r2,1
   4dc68:	10c1ffcc 	andi	r3,r2,2047
   4dc6c:	e0bffb17 	ldw	r2,-20(fp)
   4dc70:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   4dc74:	003fe206 	br	4dc00 <__alt_data_end+0xfffe6b00>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
   4dc78:	0001883a 	nop
   4dc7c:	00000106 	br	4dc84 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
   4dc80:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   4dc84:	e0bff917 	ldw	r2,-28(fp)
   4dc88:	10bfffec 	andhi	r2,r2,65535
   4dc8c:	10000f26 	beq	r2,zero,4dccc <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4dc90:	e0bffb17 	ldw	r2,-20(fp)
   4dc94:	10c00817 	ldw	r3,32(r2)
   4dc98:	00bfff84 	movi	r2,-2
   4dc9c:	1886703a 	and	r3,r3,r2
   4dca0:	e0bffb17 	ldw	r2,-20(fp)
   4dca4:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   4dca8:	e0bffc17 	ldw	r2,-16(fp)
   4dcac:	10800104 	addi	r2,r2,4
   4dcb0:	1007883a 	mov	r3,r2
   4dcb4:	e0bffb17 	ldw	r2,-20(fp)
   4dcb8:	10800817 	ldw	r2,32(r2)
   4dcbc:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4dcc0:	e0bffc17 	ldw	r2,-16(fp)
   4dcc4:	10800104 	addi	r2,r2,4
   4dcc8:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   4dccc:	e0bffd17 	ldw	r2,-12(fp)
   4dcd0:	1080800c 	andi	r2,r2,512
   4dcd4:	103fbe26 	beq	r2,zero,4dbd0 <__alt_data_end+0xfffe6ad0>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   4dcd8:	e0bffd17 	ldw	r2,-12(fp)
   4dcdc:	1004d43a 	srli	r2,r2,16
   4dce0:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   4dce4:	00001406 	br	4dd38 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   4dce8:	e0bffc17 	ldw	r2,-16(fp)
   4dcec:	e0fffb17 	ldw	r3,-20(fp)
   4dcf0:	18c00d17 	ldw	r3,52(r3)
   4dcf4:	e13ffb17 	ldw	r4,-20(fp)
   4dcf8:	20c7883a 	add	r3,r4,r3
   4dcfc:	18c20e04 	addi	r3,r3,2104
   4dd00:	18c00003 	ldbu	r3,0(r3)
   4dd04:	18c03fcc 	andi	r3,r3,255
   4dd08:	18c0201c 	xori	r3,r3,128
   4dd0c:	18ffe004 	addi	r3,r3,-128
   4dd10:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4dd14:	e0bffb17 	ldw	r2,-20(fp)
   4dd18:	10800d17 	ldw	r2,52(r2)
   4dd1c:	10800044 	addi	r2,r2,1
   4dd20:	10c1ffcc 	andi	r3,r2,2047
   4dd24:	e0bffb17 	ldw	r2,-20(fp)
   4dd28:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   4dd2c:	e0bffa17 	ldw	r2,-24(fp)
   4dd30:	10bfffc4 	addi	r2,r2,-1
   4dd34:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   4dd38:	e0bffa17 	ldw	r2,-24(fp)
   4dd3c:	10000526 	beq	r2,zero,4dd54 <altera_avalon_jtag_uart_irq+0x1a8>
   4dd40:	e0bffb17 	ldw	r2,-20(fp)
   4dd44:	10c00d17 	ldw	r3,52(r2)
   4dd48:	e0bffb17 	ldw	r2,-20(fp)
   4dd4c:	10800c17 	ldw	r2,48(r2)
   4dd50:	18bfe51e 	bne	r3,r2,4dce8 <__alt_data_end+0xfffe6be8>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   4dd54:	e0bffa17 	ldw	r2,-24(fp)
   4dd58:	103f9d26 	beq	r2,zero,4dbd0 <__alt_data_end+0xfffe6ad0>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   4dd5c:	e0bffb17 	ldw	r2,-20(fp)
   4dd60:	10c00817 	ldw	r3,32(r2)
   4dd64:	00bfff44 	movi	r2,-3
   4dd68:	1886703a 	and	r3,r3,r2
   4dd6c:	e0bffb17 	ldw	r2,-20(fp)
   4dd70:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4dd74:	e0bffb17 	ldw	r2,-20(fp)
   4dd78:	10800017 	ldw	r2,0(r2)
   4dd7c:	10800104 	addi	r2,r2,4
   4dd80:	1007883a 	mov	r3,r2
   4dd84:	e0bffb17 	ldw	r2,-20(fp)
   4dd88:	10800817 	ldw	r2,32(r2)
   4dd8c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4dd90:	e0bffc17 	ldw	r2,-16(fp)
   4dd94:	10800104 	addi	r2,r2,4
   4dd98:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   4dd9c:	003f8c06 	br	4dbd0 <__alt_data_end+0xfffe6ad0>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
   4dda0:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
   4dda4:	0001883a 	nop
   4dda8:	e037883a 	mov	sp,fp
   4ddac:	df000017 	ldw	fp,0(sp)
   4ddb0:	dec00104 	addi	sp,sp,4
   4ddb4:	f800283a 	ret

0004ddb8 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   4ddb8:	defff804 	addi	sp,sp,-32
   4ddbc:	df000715 	stw	fp,28(sp)
   4ddc0:	df000704 	addi	fp,sp,28
   4ddc4:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   4ddc8:	e0bffb17 	ldw	r2,-20(fp)
   4ddcc:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   4ddd0:	e0bff917 	ldw	r2,-28(fp)
   4ddd4:	10800017 	ldw	r2,0(r2)
   4ddd8:	10800104 	addi	r2,r2,4
   4dddc:	10800037 	ldwio	r2,0(r2)
   4dde0:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   4dde4:	e0bffa17 	ldw	r2,-24(fp)
   4dde8:	1081000c 	andi	r2,r2,1024
   4ddec:	10000b26 	beq	r2,zero,4de1c <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   4ddf0:	e0bff917 	ldw	r2,-28(fp)
   4ddf4:	10800017 	ldw	r2,0(r2)
   4ddf8:	10800104 	addi	r2,r2,4
   4ddfc:	1007883a 	mov	r3,r2
   4de00:	e0bff917 	ldw	r2,-28(fp)
   4de04:	10800817 	ldw	r2,32(r2)
   4de08:	10810014 	ori	r2,r2,1024
   4de0c:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   4de10:	e0bff917 	ldw	r2,-28(fp)
   4de14:	10000915 	stw	zero,36(r2)
   4de18:	00000a06 	br	4de44 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   4de1c:	e0bff917 	ldw	r2,-28(fp)
   4de20:	10c00917 	ldw	r3,36(r2)
   4de24:	00a00034 	movhi	r2,32768
   4de28:	10bfff04 	addi	r2,r2,-4
   4de2c:	10c00536 	bltu	r2,r3,4de44 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   4de30:	e0bff917 	ldw	r2,-28(fp)
   4de34:	10800917 	ldw	r2,36(r2)
   4de38:	10c00044 	addi	r3,r2,1
   4de3c:	e0bff917 	ldw	r2,-28(fp)
   4de40:	10c00915 	stw	r3,36(r2)
   4de44:	d0a6d617 	ldw	r2,-25768(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   4de48:	e037883a 	mov	sp,fp
   4de4c:	df000017 	ldw	fp,0(sp)
   4de50:	dec00104 	addi	sp,sp,4
   4de54:	f800283a 	ret

0004de58 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   4de58:	defffd04 	addi	sp,sp,-12
   4de5c:	df000215 	stw	fp,8(sp)
   4de60:	df000204 	addi	fp,sp,8
   4de64:	e13ffe15 	stw	r4,-8(fp)
   4de68:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   4de6c:	00000506 	br	4de84 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   4de70:	e0bfff17 	ldw	r2,-4(fp)
   4de74:	1090000c 	andi	r2,r2,16384
   4de78:	10000226 	beq	r2,zero,4de84 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   4de7c:	00bffd44 	movi	r2,-11
   4de80:	00000b06 	br	4deb0 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   4de84:	e0bffe17 	ldw	r2,-8(fp)
   4de88:	10c00d17 	ldw	r3,52(r2)
   4de8c:	e0bffe17 	ldw	r2,-8(fp)
   4de90:	10800c17 	ldw	r2,48(r2)
   4de94:	18800526 	beq	r3,r2,4deac <altera_avalon_jtag_uart_close+0x54>
   4de98:	e0bffe17 	ldw	r2,-8(fp)
   4de9c:	10c00917 	ldw	r3,36(r2)
   4dea0:	e0bffe17 	ldw	r2,-8(fp)
   4dea4:	10800117 	ldw	r2,4(r2)
   4dea8:	18bff136 	bltu	r3,r2,4de70 <__alt_data_end+0xfffe6d70>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   4deac:	0005883a 	mov	r2,zero
}
   4deb0:	e037883a 	mov	sp,fp
   4deb4:	df000017 	ldw	fp,0(sp)
   4deb8:	dec00104 	addi	sp,sp,4
   4debc:	f800283a 	ret

0004dec0 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   4dec0:	defffa04 	addi	sp,sp,-24
   4dec4:	df000515 	stw	fp,20(sp)
   4dec8:	df000504 	addi	fp,sp,20
   4decc:	e13ffd15 	stw	r4,-12(fp)
   4ded0:	e17ffe15 	stw	r5,-8(fp)
   4ded4:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   4ded8:	00bff9c4 	movi	r2,-25
   4dedc:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   4dee0:	e0bffe17 	ldw	r2,-8(fp)
   4dee4:	10da8060 	cmpeqi	r3,r2,27137
   4dee8:	1800031e 	bne	r3,zero,4def8 <altera_avalon_jtag_uart_ioctl+0x38>
   4deec:	109a80a0 	cmpeqi	r2,r2,27138
   4def0:	1000181e 	bne	r2,zero,4df54 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
   4def4:	00002906 	br	4df9c <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   4def8:	e0bffd17 	ldw	r2,-12(fp)
   4defc:	10c00117 	ldw	r3,4(r2)
   4df00:	00a00034 	movhi	r2,32768
   4df04:	10bfffc4 	addi	r2,r2,-1
   4df08:	18802126 	beq	r3,r2,4df90 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
   4df0c:	e0bfff17 	ldw	r2,-4(fp)
   4df10:	10800017 	ldw	r2,0(r2)
   4df14:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   4df18:	e0bffc17 	ldw	r2,-16(fp)
   4df1c:	10800090 	cmplti	r2,r2,2
   4df20:	1000061e 	bne	r2,zero,4df3c <altera_avalon_jtag_uart_ioctl+0x7c>
   4df24:	e0fffc17 	ldw	r3,-16(fp)
   4df28:	00a00034 	movhi	r2,32768
   4df2c:	10bfffc4 	addi	r2,r2,-1
   4df30:	18800226 	beq	r3,r2,4df3c <altera_avalon_jtag_uart_ioctl+0x7c>
   4df34:	e0bffc17 	ldw	r2,-16(fp)
   4df38:	00000206 	br	4df44 <altera_avalon_jtag_uart_ioctl+0x84>
   4df3c:	00a00034 	movhi	r2,32768
   4df40:	10bfff84 	addi	r2,r2,-2
   4df44:	e0fffd17 	ldw	r3,-12(fp)
   4df48:	18800115 	stw	r2,4(r3)
      rc = 0;
   4df4c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   4df50:	00000f06 	br	4df90 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   4df54:	e0bffd17 	ldw	r2,-12(fp)
   4df58:	10c00117 	ldw	r3,4(r2)
   4df5c:	00a00034 	movhi	r2,32768
   4df60:	10bfffc4 	addi	r2,r2,-1
   4df64:	18800c26 	beq	r3,r2,4df98 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   4df68:	e0bffd17 	ldw	r2,-12(fp)
   4df6c:	10c00917 	ldw	r3,36(r2)
   4df70:	e0bffd17 	ldw	r2,-12(fp)
   4df74:	10800117 	ldw	r2,4(r2)
   4df78:	1885803a 	cmpltu	r2,r3,r2
   4df7c:	10c03fcc 	andi	r3,r2,255
   4df80:	e0bfff17 	ldw	r2,-4(fp)
   4df84:	10c00015 	stw	r3,0(r2)
      rc = 0;
   4df88:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   4df8c:	00000206 	br	4df98 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
   4df90:	0001883a 	nop
   4df94:	00000106 	br	4df9c <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
   4df98:	0001883a 	nop

  default:
    break;
  }

  return rc;
   4df9c:	e0bffb17 	ldw	r2,-20(fp)
}
   4dfa0:	e037883a 	mov	sp,fp
   4dfa4:	df000017 	ldw	fp,0(sp)
   4dfa8:	dec00104 	addi	sp,sp,4
   4dfac:	f800283a 	ret

0004dfb0 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   4dfb0:	defff304 	addi	sp,sp,-52
   4dfb4:	dfc00c15 	stw	ra,48(sp)
   4dfb8:	df000b15 	stw	fp,44(sp)
   4dfbc:	df000b04 	addi	fp,sp,44
   4dfc0:	e13ffc15 	stw	r4,-16(fp)
   4dfc4:	e17ffd15 	stw	r5,-12(fp)
   4dfc8:	e1bffe15 	stw	r6,-8(fp)
   4dfcc:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   4dfd0:	e0bffd17 	ldw	r2,-12(fp)
   4dfd4:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   4dfd8:	00004706 	br	4e0f8 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   4dfdc:	e0bffc17 	ldw	r2,-16(fp)
   4dfe0:	10800a17 	ldw	r2,40(r2)
   4dfe4:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   4dfe8:	e0bffc17 	ldw	r2,-16(fp)
   4dfec:	10800b17 	ldw	r2,44(r2)
   4dff0:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   4dff4:	e0fff717 	ldw	r3,-36(fp)
   4dff8:	e0bff817 	ldw	r2,-32(fp)
   4dffc:	18800536 	bltu	r3,r2,4e014 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   4e000:	e0fff717 	ldw	r3,-36(fp)
   4e004:	e0bff817 	ldw	r2,-32(fp)
   4e008:	1885c83a 	sub	r2,r3,r2
   4e00c:	e0bff615 	stw	r2,-40(fp)
   4e010:	00000406 	br	4e024 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   4e014:	00c20004 	movi	r3,2048
   4e018:	e0bff817 	ldw	r2,-32(fp)
   4e01c:	1885c83a 	sub	r2,r3,r2
   4e020:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   4e024:	e0bff617 	ldw	r2,-40(fp)
   4e028:	10001e26 	beq	r2,zero,4e0a4 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   4e02c:	e0fffe17 	ldw	r3,-8(fp)
   4e030:	e0bff617 	ldw	r2,-40(fp)
   4e034:	1880022e 	bgeu	r3,r2,4e040 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   4e038:	e0bffe17 	ldw	r2,-8(fp)
   4e03c:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   4e040:	e0bffc17 	ldw	r2,-16(fp)
   4e044:	10c00e04 	addi	r3,r2,56
   4e048:	e0bff817 	ldw	r2,-32(fp)
   4e04c:	1885883a 	add	r2,r3,r2
   4e050:	e1bff617 	ldw	r6,-40(fp)
   4e054:	100b883a 	mov	r5,r2
   4e058:	e13ff517 	ldw	r4,-44(fp)
   4e05c:	0046c080 	call	46c08 <memcpy>
      ptr   += n;
   4e060:	e0fff517 	ldw	r3,-44(fp)
   4e064:	e0bff617 	ldw	r2,-40(fp)
   4e068:	1885883a 	add	r2,r3,r2
   4e06c:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   4e070:	e0fffe17 	ldw	r3,-8(fp)
   4e074:	e0bff617 	ldw	r2,-40(fp)
   4e078:	1885c83a 	sub	r2,r3,r2
   4e07c:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4e080:	e0fff817 	ldw	r3,-32(fp)
   4e084:	e0bff617 	ldw	r2,-40(fp)
   4e088:	1885883a 	add	r2,r3,r2
   4e08c:	10c1ffcc 	andi	r3,r2,2047
   4e090:	e0bffc17 	ldw	r2,-16(fp)
   4e094:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   4e098:	e0bffe17 	ldw	r2,-8(fp)
   4e09c:	00bfcf16 	blt	zero,r2,4dfdc <__alt_data_end+0xfffe6edc>
   4e0a0:	00000106 	br	4e0a8 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
   4e0a4:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
   4e0a8:	e0fff517 	ldw	r3,-44(fp)
   4e0ac:	e0bffd17 	ldw	r2,-12(fp)
   4e0b0:	1880141e 	bne	r3,r2,4e104 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   4e0b4:	e0bfff17 	ldw	r2,-4(fp)
   4e0b8:	1090000c 	andi	r2,r2,16384
   4e0bc:	1000131e 	bne	r2,zero,4e10c <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   4e0c0:	0001883a 	nop
   4e0c4:	e0bffc17 	ldw	r2,-16(fp)
   4e0c8:	10c00a17 	ldw	r3,40(r2)
   4e0cc:	e0bff717 	ldw	r2,-36(fp)
   4e0d0:	1880051e 	bne	r3,r2,4e0e8 <altera_avalon_jtag_uart_read+0x138>
   4e0d4:	e0bffc17 	ldw	r2,-16(fp)
   4e0d8:	10c00917 	ldw	r3,36(r2)
   4e0dc:	e0bffc17 	ldw	r2,-16(fp)
   4e0e0:	10800117 	ldw	r2,4(r2)
   4e0e4:	18bff736 	bltu	r3,r2,4e0c4 <__alt_data_end+0xfffe6fc4>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   4e0e8:	e0bffc17 	ldw	r2,-16(fp)
   4e0ec:	10c00a17 	ldw	r3,40(r2)
   4e0f0:	e0bff717 	ldw	r2,-36(fp)
   4e0f4:	18800726 	beq	r3,r2,4e114 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   4e0f8:	e0bffe17 	ldw	r2,-8(fp)
   4e0fc:	00bfb716 	blt	zero,r2,4dfdc <__alt_data_end+0xfffe6edc>
   4e100:	00000506 	br	4e118 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
   4e104:	0001883a 	nop
   4e108:	00000306 	br	4e118 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
   4e10c:	0001883a 	nop
   4e110:	00000106 	br	4e118 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
   4e114:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   4e118:	e0fff517 	ldw	r3,-44(fp)
   4e11c:	e0bffd17 	ldw	r2,-12(fp)
   4e120:	18801826 	beq	r3,r2,4e184 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4e124:	0005303a 	rdctl	r2,status
   4e128:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4e12c:	e0fffb17 	ldw	r3,-20(fp)
   4e130:	00bfff84 	movi	r2,-2
   4e134:	1884703a 	and	r2,r3,r2
   4e138:	1001703a 	wrctl	status,r2
  
  return context;
   4e13c:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   4e140:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4e144:	e0bffc17 	ldw	r2,-16(fp)
   4e148:	10800817 	ldw	r2,32(r2)
   4e14c:	10c00054 	ori	r3,r2,1
   4e150:	e0bffc17 	ldw	r2,-16(fp)
   4e154:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4e158:	e0bffc17 	ldw	r2,-16(fp)
   4e15c:	10800017 	ldw	r2,0(r2)
   4e160:	10800104 	addi	r2,r2,4
   4e164:	1007883a 	mov	r3,r2
   4e168:	e0bffc17 	ldw	r2,-16(fp)
   4e16c:	10800817 	ldw	r2,32(r2)
   4e170:	18800035 	stwio	r2,0(r3)
   4e174:	e0bffa17 	ldw	r2,-24(fp)
   4e178:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4e17c:	e0bff917 	ldw	r2,-28(fp)
   4e180:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   4e184:	e0fff517 	ldw	r3,-44(fp)
   4e188:	e0bffd17 	ldw	r2,-12(fp)
   4e18c:	18800426 	beq	r3,r2,4e1a0 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
   4e190:	e0fff517 	ldw	r3,-44(fp)
   4e194:	e0bffd17 	ldw	r2,-12(fp)
   4e198:	1885c83a 	sub	r2,r3,r2
   4e19c:	00000606 	br	4e1b8 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
   4e1a0:	e0bfff17 	ldw	r2,-4(fp)
   4e1a4:	1090000c 	andi	r2,r2,16384
   4e1a8:	10000226 	beq	r2,zero,4e1b4 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   4e1ac:	00bffd44 	movi	r2,-11
   4e1b0:	00000106 	br	4e1b8 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
   4e1b4:	00bffec4 	movi	r2,-5
}
   4e1b8:	e037883a 	mov	sp,fp
   4e1bc:	dfc00117 	ldw	ra,4(sp)
   4e1c0:	df000017 	ldw	fp,0(sp)
   4e1c4:	dec00204 	addi	sp,sp,8
   4e1c8:	f800283a 	ret

0004e1cc <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   4e1cc:	defff304 	addi	sp,sp,-52
   4e1d0:	dfc00c15 	stw	ra,48(sp)
   4e1d4:	df000b15 	stw	fp,44(sp)
   4e1d8:	df000b04 	addi	fp,sp,44
   4e1dc:	e13ffc15 	stw	r4,-16(fp)
   4e1e0:	e17ffd15 	stw	r5,-12(fp)
   4e1e4:	e1bffe15 	stw	r6,-8(fp)
   4e1e8:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   4e1ec:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   4e1f0:	e0bffd17 	ldw	r2,-12(fp)
   4e1f4:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   4e1f8:	00003706 	br	4e2d8 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   4e1fc:	e0bffc17 	ldw	r2,-16(fp)
   4e200:	10800c17 	ldw	r2,48(r2)
   4e204:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
   4e208:	e0bffc17 	ldw	r2,-16(fp)
   4e20c:	10800d17 	ldw	r2,52(r2)
   4e210:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   4e214:	e0fff917 	ldw	r3,-28(fp)
   4e218:	e0bff517 	ldw	r2,-44(fp)
   4e21c:	1880062e 	bgeu	r3,r2,4e238 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   4e220:	e0fff517 	ldw	r3,-44(fp)
   4e224:	e0bff917 	ldw	r2,-28(fp)
   4e228:	1885c83a 	sub	r2,r3,r2
   4e22c:	10bfffc4 	addi	r2,r2,-1
   4e230:	e0bff615 	stw	r2,-40(fp)
   4e234:	00000b06 	br	4e264 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   4e238:	e0bff517 	ldw	r2,-44(fp)
   4e23c:	10000526 	beq	r2,zero,4e254 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   4e240:	00c20004 	movi	r3,2048
   4e244:	e0bff917 	ldw	r2,-28(fp)
   4e248:	1885c83a 	sub	r2,r3,r2
   4e24c:	e0bff615 	stw	r2,-40(fp)
   4e250:	00000406 	br	4e264 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   4e254:	00c1ffc4 	movi	r3,2047
   4e258:	e0bff917 	ldw	r2,-28(fp)
   4e25c:	1885c83a 	sub	r2,r3,r2
   4e260:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   4e264:	e0bff617 	ldw	r2,-40(fp)
   4e268:	10001e26 	beq	r2,zero,4e2e4 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   4e26c:	e0fffe17 	ldw	r3,-8(fp)
   4e270:	e0bff617 	ldw	r2,-40(fp)
   4e274:	1880022e 	bgeu	r3,r2,4e280 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   4e278:	e0bffe17 	ldw	r2,-8(fp)
   4e27c:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   4e280:	e0bffc17 	ldw	r2,-16(fp)
   4e284:	10c20e04 	addi	r3,r2,2104
   4e288:	e0bff917 	ldw	r2,-28(fp)
   4e28c:	1885883a 	add	r2,r3,r2
   4e290:	e1bff617 	ldw	r6,-40(fp)
   4e294:	e17ffd17 	ldw	r5,-12(fp)
   4e298:	1009883a 	mov	r4,r2
   4e29c:	0046c080 	call	46c08 <memcpy>
      ptr   += n;
   4e2a0:	e0fffd17 	ldw	r3,-12(fp)
   4e2a4:	e0bff617 	ldw	r2,-40(fp)
   4e2a8:	1885883a 	add	r2,r3,r2
   4e2ac:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   4e2b0:	e0fffe17 	ldw	r3,-8(fp)
   4e2b4:	e0bff617 	ldw	r2,-40(fp)
   4e2b8:	1885c83a 	sub	r2,r3,r2
   4e2bc:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4e2c0:	e0fff917 	ldw	r3,-28(fp)
   4e2c4:	e0bff617 	ldw	r2,-40(fp)
   4e2c8:	1885883a 	add	r2,r3,r2
   4e2cc:	10c1ffcc 	andi	r3,r2,2047
   4e2d0:	e0bffc17 	ldw	r2,-16(fp)
   4e2d4:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   4e2d8:	e0bffe17 	ldw	r2,-8(fp)
   4e2dc:	00bfc716 	blt	zero,r2,4e1fc <__alt_data_end+0xfffe70fc>
   4e2e0:	00000106 	br	4e2e8 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
   4e2e4:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4e2e8:	0005303a 	rdctl	r2,status
   4e2ec:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4e2f0:	e0fffb17 	ldw	r3,-20(fp)
   4e2f4:	00bfff84 	movi	r2,-2
   4e2f8:	1884703a 	and	r2,r3,r2
   4e2fc:	1001703a 	wrctl	status,r2
  
  return context;
   4e300:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   4e304:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   4e308:	e0bffc17 	ldw	r2,-16(fp)
   4e30c:	10800817 	ldw	r2,32(r2)
   4e310:	10c00094 	ori	r3,r2,2
   4e314:	e0bffc17 	ldw	r2,-16(fp)
   4e318:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4e31c:	e0bffc17 	ldw	r2,-16(fp)
   4e320:	10800017 	ldw	r2,0(r2)
   4e324:	10800104 	addi	r2,r2,4
   4e328:	1007883a 	mov	r3,r2
   4e32c:	e0bffc17 	ldw	r2,-16(fp)
   4e330:	10800817 	ldw	r2,32(r2)
   4e334:	18800035 	stwio	r2,0(r3)
   4e338:	e0bffa17 	ldw	r2,-24(fp)
   4e33c:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4e340:	e0bff817 	ldw	r2,-32(fp)
   4e344:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   4e348:	e0bffe17 	ldw	r2,-8(fp)
   4e34c:	0080100e 	bge	zero,r2,4e390 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
   4e350:	e0bfff17 	ldw	r2,-4(fp)
   4e354:	1090000c 	andi	r2,r2,16384
   4e358:	1000101e 	bne	r2,zero,4e39c <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   4e35c:	0001883a 	nop
   4e360:	e0bffc17 	ldw	r2,-16(fp)
   4e364:	10c00d17 	ldw	r3,52(r2)
   4e368:	e0bff517 	ldw	r2,-44(fp)
   4e36c:	1880051e 	bne	r3,r2,4e384 <altera_avalon_jtag_uart_write+0x1b8>
   4e370:	e0bffc17 	ldw	r2,-16(fp)
   4e374:	10c00917 	ldw	r3,36(r2)
   4e378:	e0bffc17 	ldw	r2,-16(fp)
   4e37c:	10800117 	ldw	r2,4(r2)
   4e380:	18bff736 	bltu	r3,r2,4e360 <__alt_data_end+0xfffe7260>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   4e384:	e0bffc17 	ldw	r2,-16(fp)
   4e388:	10800917 	ldw	r2,36(r2)
   4e38c:	1000051e 	bne	r2,zero,4e3a4 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
   4e390:	e0bffe17 	ldw	r2,-8(fp)
   4e394:	00bfd016 	blt	zero,r2,4e2d8 <__alt_data_end+0xfffe71d8>
   4e398:	00000306 	br	4e3a8 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
   4e39c:	0001883a 	nop
   4e3a0:	00000106 	br	4e3a8 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
   4e3a4:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   4e3a8:	e0fffd17 	ldw	r3,-12(fp)
   4e3ac:	e0bff717 	ldw	r2,-36(fp)
   4e3b0:	18800426 	beq	r3,r2,4e3c4 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
   4e3b4:	e0fffd17 	ldw	r3,-12(fp)
   4e3b8:	e0bff717 	ldw	r2,-36(fp)
   4e3bc:	1885c83a 	sub	r2,r3,r2
   4e3c0:	00000606 	br	4e3dc <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
   4e3c4:	e0bfff17 	ldw	r2,-4(fp)
   4e3c8:	1090000c 	andi	r2,r2,16384
   4e3cc:	10000226 	beq	r2,zero,4e3d8 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
   4e3d0:	00bffd44 	movi	r2,-11
   4e3d4:	00000106 	br	4e3dc <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   4e3d8:	00bffec4 	movi	r2,-5
}
   4e3dc:	e037883a 	mov	sp,fp
   4e3e0:	dfc00117 	ldw	ra,4(sp)
   4e3e4:	df000017 	ldw	fp,0(sp)
   4e3e8:	dec00204 	addi	sp,sp,8
   4e3ec:	f800283a 	ret

0004e3f0 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   4e3f0:	defff504 	addi	sp,sp,-44
   4e3f4:	df000a15 	stw	fp,40(sp)
   4e3f8:	df000a04 	addi	fp,sp,40
   4e3fc:	e13ffc15 	stw	r4,-16(fp)
   4e400:	e17ffd15 	stw	r5,-12(fp)
   4e404:	e1bffe15 	stw	r6,-8(fp)
   4e408:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   4e40c:	e03ff615 	stw	zero,-40(fp)
   4e410:	d0a6d617 	ldw	r2,-25768(gp)
  
  if (alt_ticks_per_second ())
   4e414:	10003c26 	beq	r2,zero,4e508 <alt_alarm_start+0x118>
  {
    if (alarm)
   4e418:	e0bffc17 	ldw	r2,-16(fp)
   4e41c:	10003826 	beq	r2,zero,4e500 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
   4e420:	e0bffc17 	ldw	r2,-16(fp)
   4e424:	e0fffe17 	ldw	r3,-8(fp)
   4e428:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   4e42c:	e0bffc17 	ldw	r2,-16(fp)
   4e430:	e0ffff17 	ldw	r3,-4(fp)
   4e434:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4e438:	0005303a 	rdctl	r2,status
   4e43c:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4e440:	e0fff917 	ldw	r3,-28(fp)
   4e444:	00bfff84 	movi	r2,-2
   4e448:	1884703a 	and	r2,r3,r2
   4e44c:	1001703a 	wrctl	status,r2
  
  return context;
   4e450:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   4e454:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   4e458:	d0a6d717 	ldw	r2,-25764(gp)
      
      current_nticks = alt_nticks();
   4e45c:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   4e460:	e0fffd17 	ldw	r3,-12(fp)
   4e464:	e0bff617 	ldw	r2,-40(fp)
   4e468:	1885883a 	add	r2,r3,r2
   4e46c:	10c00044 	addi	r3,r2,1
   4e470:	e0bffc17 	ldw	r2,-16(fp)
   4e474:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   4e478:	e0bffc17 	ldw	r2,-16(fp)
   4e47c:	10c00217 	ldw	r3,8(r2)
   4e480:	e0bff617 	ldw	r2,-40(fp)
   4e484:	1880042e 	bgeu	r3,r2,4e498 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   4e488:	e0bffc17 	ldw	r2,-16(fp)
   4e48c:	00c00044 	movi	r3,1
   4e490:	10c00405 	stb	r3,16(r2)
   4e494:	00000206 	br	4e4a0 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   4e498:	e0bffc17 	ldw	r2,-16(fp)
   4e49c:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   4e4a0:	e0bffc17 	ldw	r2,-16(fp)
   4e4a4:	d0e00e04 	addi	r3,gp,-32712
   4e4a8:	e0fffa15 	stw	r3,-24(fp)
   4e4ac:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   4e4b0:	e0bffb17 	ldw	r2,-20(fp)
   4e4b4:	e0fffa17 	ldw	r3,-24(fp)
   4e4b8:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   4e4bc:	e0bffa17 	ldw	r2,-24(fp)
   4e4c0:	10c00017 	ldw	r3,0(r2)
   4e4c4:	e0bffb17 	ldw	r2,-20(fp)
   4e4c8:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   4e4cc:	e0bffa17 	ldw	r2,-24(fp)
   4e4d0:	10800017 	ldw	r2,0(r2)
   4e4d4:	e0fffb17 	ldw	r3,-20(fp)
   4e4d8:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   4e4dc:	e0bffa17 	ldw	r2,-24(fp)
   4e4e0:	e0fffb17 	ldw	r3,-20(fp)
   4e4e4:	10c00015 	stw	r3,0(r2)
   4e4e8:	e0bff817 	ldw	r2,-32(fp)
   4e4ec:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4e4f0:	e0bff717 	ldw	r2,-36(fp)
   4e4f4:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   4e4f8:	0005883a 	mov	r2,zero
   4e4fc:	00000306 	br	4e50c <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
   4e500:	00bffa84 	movi	r2,-22
   4e504:	00000106 	br	4e50c <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
   4e508:	00bfde84 	movi	r2,-134
  }
}
   4e50c:	e037883a 	mov	sp,fp
   4e510:	df000017 	ldw	fp,0(sp)
   4e514:	dec00104 	addi	sp,sp,4
   4e518:	f800283a 	ret

0004e51c <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
   4e51c:	defffa04 	addi	sp,sp,-24
   4e520:	dfc00515 	stw	ra,20(sp)
   4e524:	df000415 	stw	fp,16(sp)
   4e528:	df000404 	addi	fp,sp,16
   4e52c:	e13fff15 	stw	r4,-4(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
   4e530:	008000c4 	movi	r2,3
   4e534:	e0bffd15 	stw	r2,-12(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
   4e538:	e0fffd17 	ldw	r3,-12(fp)
   4e53c:	008003f4 	movhi	r2,15
   4e540:	10909004 	addi	r2,r2,16960
   4e544:	1885383a 	mul	r2,r3,r2
   4e548:	100b883a 	mov	r5,r2
   4e54c:	01017db4 	movhi	r4,1526
   4e550:	21384004 	addi	r4,r4,-7936
   4e554:	00410800 	call	41080 <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
   4e558:	100b883a 	mov	r5,r2
   4e55c:	01200034 	movhi	r4,32768
   4e560:	213fffc4 	addi	r4,r4,-1
   4e564:	00410800 	call	41080 <__udivsi3>
   4e568:	100b883a 	mov	r5,r2
   4e56c:	e13fff17 	ldw	r4,-4(fp)
   4e570:	00410800 	call	41080 <__udivsi3>
   4e574:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
   4e578:	e0bffe17 	ldw	r2,-8(fp)
   4e57c:	10002a26 	beq	r2,zero,4e628 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
   4e580:	e03ffc15 	stw	zero,-16(fp)
   4e584:	00001706 	br	4e5e4 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
   4e588:	00a00034 	movhi	r2,32768
   4e58c:	10bfffc4 	addi	r2,r2,-1
   4e590:	10bfffc4 	addi	r2,r2,-1
   4e594:	103ffe1e 	bne	r2,zero,4e590 <__alt_data_end+0xfffe7490>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
   4e598:	e0fffd17 	ldw	r3,-12(fp)
   4e59c:	008003f4 	movhi	r2,15
   4e5a0:	10909004 	addi	r2,r2,16960
   4e5a4:	1885383a 	mul	r2,r3,r2
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
   4e5a8:	100b883a 	mov	r5,r2
   4e5ac:	01017db4 	movhi	r4,1526
   4e5b0:	21384004 	addi	r4,r4,-7936
   4e5b4:	00410800 	call	41080 <__udivsi3>
   4e5b8:	100b883a 	mov	r5,r2
   4e5bc:	01200034 	movhi	r4,32768
   4e5c0:	213fffc4 	addi	r4,r4,-1
   4e5c4:	00410800 	call	41080 <__udivsi3>
   4e5c8:	1007883a 	mov	r3,r2
   4e5cc:	e0bfff17 	ldw	r2,-4(fp)
   4e5d0:	10c5c83a 	sub	r2,r2,r3
   4e5d4:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
   4e5d8:	e0bffc17 	ldw	r2,-16(fp)
   4e5dc:	10800044 	addi	r2,r2,1
   4e5e0:	e0bffc15 	stw	r2,-16(fp)
   4e5e4:	e0fffc17 	ldw	r3,-16(fp)
   4e5e8:	e0bffe17 	ldw	r2,-8(fp)
   4e5ec:	18bfe616 	blt	r3,r2,4e588 <__alt_data_end+0xfffe7488>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   4e5f0:	e0fffd17 	ldw	r3,-12(fp)
   4e5f4:	008003f4 	movhi	r2,15
   4e5f8:	10909004 	addi	r2,r2,16960
   4e5fc:	1885383a 	mul	r2,r3,r2
   4e600:	100b883a 	mov	r5,r2
   4e604:	01017db4 	movhi	r4,1526
   4e608:	21384004 	addi	r4,r4,-7936
   4e60c:	00410800 	call	41080 <__udivsi3>
   4e610:	1007883a 	mov	r3,r2
   4e614:	e0bfff17 	ldw	r2,-4(fp)
   4e618:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   4e61c:	10bfffc4 	addi	r2,r2,-1
   4e620:	103ffe1e 	bne	r2,zero,4e61c <__alt_data_end+0xfffe751c>
   4e624:	00000d06 	br	4e65c <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   4e628:	e0fffd17 	ldw	r3,-12(fp)
   4e62c:	008003f4 	movhi	r2,15
   4e630:	10909004 	addi	r2,r2,16960
   4e634:	1885383a 	mul	r2,r3,r2
   4e638:	100b883a 	mov	r5,r2
   4e63c:	01017db4 	movhi	r4,1526
   4e640:	21384004 	addi	r4,r4,-7936
   4e644:	00410800 	call	41080 <__udivsi3>
   4e648:	1007883a 	mov	r3,r2
   4e64c:	e0bfff17 	ldw	r2,-4(fp)
   4e650:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   4e654:	10bfffc4 	addi	r2,r2,-1
   4e658:	00bffe16 	blt	zero,r2,4e654 <__alt_data_end+0xfffe7554>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
   4e65c:	0005883a 	mov	r2,zero
}
   4e660:	e037883a 	mov	sp,fp
   4e664:	dfc00117 	ldw	ra,4(sp)
   4e668:	df000017 	ldw	fp,0(sp)
   4e66c:	dec00204 	addi	sp,sp,8
   4e670:	f800283a 	ret

0004e674 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   4e674:	defffe04 	addi	sp,sp,-8
   4e678:	df000115 	stw	fp,4(sp)
   4e67c:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   4e680:	e03fff15 	stw	zero,-4(fp)
   4e684:	00000506 	br	4e69c <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
   4e688:	e0bfff17 	ldw	r2,-4(fp)
   4e68c:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   4e690:	e0bfff17 	ldw	r2,-4(fp)
   4e694:	10800804 	addi	r2,r2,32
   4e698:	e0bfff15 	stw	r2,-4(fp)
   4e69c:	e0bfff17 	ldw	r2,-4(fp)
   4e6a0:	10820030 	cmpltui	r2,r2,2048
   4e6a4:	103ff81e 	bne	r2,zero,4e688 <__alt_data_end+0xfffe7588>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   4e6a8:	0001883a 	nop
   4e6ac:	e037883a 	mov	sp,fp
   4e6b0:	df000017 	ldw	fp,0(sp)
   4e6b4:	dec00104 	addi	sp,sp,4
   4e6b8:	f800283a 	ret

0004e6bc <alt_get_errno>:
   4e6bc:	defffe04 	addi	sp,sp,-8
   4e6c0:	dfc00115 	stw	ra,4(sp)
   4e6c4:	df000015 	stw	fp,0(sp)
   4e6c8:	d839883a 	mov	fp,sp
   4e6cc:	d0a00b17 	ldw	r2,-32724(gp)
   4e6d0:	10000326 	beq	r2,zero,4e6e0 <alt_get_errno+0x24>
   4e6d4:	d0a00b17 	ldw	r2,-32724(gp)
   4e6d8:	103ee83a 	callr	r2
   4e6dc:	00000106 	br	4e6e4 <alt_get_errno+0x28>
   4e6e0:	d0a6d104 	addi	r2,gp,-25788
   4e6e4:	e037883a 	mov	sp,fp
   4e6e8:	dfc00117 	ldw	ra,4(sp)
   4e6ec:	df000017 	ldw	fp,0(sp)
   4e6f0:	dec00204 	addi	sp,sp,8
   4e6f4:	f800283a 	ret

0004e6f8 <alt_dev_llist_insert>:
   4e6f8:	defffa04 	addi	sp,sp,-24
   4e6fc:	dfc00515 	stw	ra,20(sp)
   4e700:	df000415 	stw	fp,16(sp)
   4e704:	df000404 	addi	fp,sp,16
   4e708:	e13ffe15 	stw	r4,-8(fp)
   4e70c:	e17fff15 	stw	r5,-4(fp)
   4e710:	e0bffe17 	ldw	r2,-8(fp)
   4e714:	10000326 	beq	r2,zero,4e724 <alt_dev_llist_insert+0x2c>
   4e718:	e0bffe17 	ldw	r2,-8(fp)
   4e71c:	10800217 	ldw	r2,8(r2)
   4e720:	1000061e 	bne	r2,zero,4e73c <alt_dev_llist_insert+0x44>
   4e724:	004e6bc0 	call	4e6bc <alt_get_errno>
   4e728:	1007883a 	mov	r3,r2
   4e72c:	00800584 	movi	r2,22
   4e730:	18800015 	stw	r2,0(r3)
   4e734:	00bffa84 	movi	r2,-22
   4e738:	00001306 	br	4e788 <alt_dev_llist_insert+0x90>
   4e73c:	e0bffe17 	ldw	r2,-8(fp)
   4e740:	e0ffff17 	ldw	r3,-4(fp)
   4e744:	e0fffc15 	stw	r3,-16(fp)
   4e748:	e0bffd15 	stw	r2,-12(fp)
   4e74c:	e0bffd17 	ldw	r2,-12(fp)
   4e750:	e0fffc17 	ldw	r3,-16(fp)
   4e754:	10c00115 	stw	r3,4(r2)
   4e758:	e0bffc17 	ldw	r2,-16(fp)
   4e75c:	10c00017 	ldw	r3,0(r2)
   4e760:	e0bffd17 	ldw	r2,-12(fp)
   4e764:	10c00015 	stw	r3,0(r2)
   4e768:	e0bffc17 	ldw	r2,-16(fp)
   4e76c:	10800017 	ldw	r2,0(r2)
   4e770:	e0fffd17 	ldw	r3,-12(fp)
   4e774:	10c00115 	stw	r3,4(r2)
   4e778:	e0bffc17 	ldw	r2,-16(fp)
   4e77c:	e0fffd17 	ldw	r3,-12(fp)
   4e780:	10c00015 	stw	r3,0(r2)
   4e784:	0005883a 	mov	r2,zero
   4e788:	e037883a 	mov	sp,fp
   4e78c:	dfc00117 	ldw	ra,4(sp)
   4e790:	df000017 	ldw	fp,0(sp)
   4e794:	dec00204 	addi	sp,sp,8
   4e798:	f800283a 	ret

0004e79c <_do_ctors>:
   4e79c:	defffd04 	addi	sp,sp,-12
   4e7a0:	dfc00215 	stw	ra,8(sp)
   4e7a4:	df000115 	stw	fp,4(sp)
   4e7a8:	df000104 	addi	fp,sp,4
   4e7ac:	00800174 	movhi	r2,5
   4e7b0:	10bde104 	addi	r2,r2,-2172
   4e7b4:	e0bfff15 	stw	r2,-4(fp)
   4e7b8:	00000606 	br	4e7d4 <_do_ctors+0x38>
   4e7bc:	e0bfff17 	ldw	r2,-4(fp)
   4e7c0:	10800017 	ldw	r2,0(r2)
   4e7c4:	103ee83a 	callr	r2
   4e7c8:	e0bfff17 	ldw	r2,-4(fp)
   4e7cc:	10bfff04 	addi	r2,r2,-4
   4e7d0:	e0bfff15 	stw	r2,-4(fp)
   4e7d4:	e0ffff17 	ldw	r3,-4(fp)
   4e7d8:	00800174 	movhi	r2,5
   4e7dc:	10bde204 	addi	r2,r2,-2168
   4e7e0:	18bff62e 	bgeu	r3,r2,4e7bc <__alt_data_end+0xfffe76bc>
   4e7e4:	0001883a 	nop
   4e7e8:	e037883a 	mov	sp,fp
   4e7ec:	dfc00117 	ldw	ra,4(sp)
   4e7f0:	df000017 	ldw	fp,0(sp)
   4e7f4:	dec00204 	addi	sp,sp,8
   4e7f8:	f800283a 	ret

0004e7fc <_do_dtors>:
   4e7fc:	defffd04 	addi	sp,sp,-12
   4e800:	dfc00215 	stw	ra,8(sp)
   4e804:	df000115 	stw	fp,4(sp)
   4e808:	df000104 	addi	fp,sp,4
   4e80c:	00800174 	movhi	r2,5
   4e810:	10bde104 	addi	r2,r2,-2172
   4e814:	e0bfff15 	stw	r2,-4(fp)
   4e818:	00000606 	br	4e834 <_do_dtors+0x38>
   4e81c:	e0bfff17 	ldw	r2,-4(fp)
   4e820:	10800017 	ldw	r2,0(r2)
   4e824:	103ee83a 	callr	r2
   4e828:	e0bfff17 	ldw	r2,-4(fp)
   4e82c:	10bfff04 	addi	r2,r2,-4
   4e830:	e0bfff15 	stw	r2,-4(fp)
   4e834:	e0ffff17 	ldw	r3,-4(fp)
   4e838:	00800174 	movhi	r2,5
   4e83c:	10bde204 	addi	r2,r2,-2168
   4e840:	18bff62e 	bgeu	r3,r2,4e81c <__alt_data_end+0xfffe771c>
   4e844:	0001883a 	nop
   4e848:	e037883a 	mov	sp,fp
   4e84c:	dfc00117 	ldw	ra,4(sp)
   4e850:	df000017 	ldw	fp,0(sp)
   4e854:	dec00204 	addi	sp,sp,8
   4e858:	f800283a 	ret

0004e85c <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   4e85c:	defffe04 	addi	sp,sp,-8
   4e860:	dfc00115 	stw	ra,4(sp)
   4e864:	df000015 	stw	fp,0(sp)
   4e868:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   4e86c:	01440004 	movi	r5,4096
   4e870:	0009883a 	mov	r4,zero
   4e874:	004f2c80 	call	4f2c8 <alt_icache_flush>
#endif
}
   4e878:	0001883a 	nop
   4e87c:	e037883a 	mov	sp,fp
   4e880:	dfc00117 	ldw	ra,4(sp)
   4e884:	df000017 	ldw	fp,0(sp)
   4e888:	dec00204 	addi	sp,sp,8
   4e88c:	f800283a 	ret

0004e890 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   4e890:	defff904 	addi	sp,sp,-28
   4e894:	dfc00615 	stw	ra,24(sp)
   4e898:	df000515 	stw	fp,20(sp)
   4e89c:	df000504 	addi	fp,sp,20
   4e8a0:	e13ffc15 	stw	r4,-16(fp)
   4e8a4:	e17ffd15 	stw	r5,-12(fp)
   4e8a8:	e1bffe15 	stw	r6,-8(fp)
   4e8ac:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   4e8b0:	e0800217 	ldw	r2,8(fp)
   4e8b4:	d8800015 	stw	r2,0(sp)
   4e8b8:	e1ffff17 	ldw	r7,-4(fp)
   4e8bc:	e1bffe17 	ldw	r6,-8(fp)
   4e8c0:	e17ffd17 	ldw	r5,-12(fp)
   4e8c4:	e13ffc17 	ldw	r4,-16(fp)
   4e8c8:	004ea400 	call	4ea40 <alt_iic_isr_register>
}  
   4e8cc:	e037883a 	mov	sp,fp
   4e8d0:	dfc00117 	ldw	ra,4(sp)
   4e8d4:	df000017 	ldw	fp,0(sp)
   4e8d8:	dec00204 	addi	sp,sp,8
   4e8dc:	f800283a 	ret

0004e8e0 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   4e8e0:	defff904 	addi	sp,sp,-28
   4e8e4:	df000615 	stw	fp,24(sp)
   4e8e8:	df000604 	addi	fp,sp,24
   4e8ec:	e13ffe15 	stw	r4,-8(fp)
   4e8f0:	e17fff15 	stw	r5,-4(fp)
   4e8f4:	e0bfff17 	ldw	r2,-4(fp)
   4e8f8:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4e8fc:	0005303a 	rdctl	r2,status
   4e900:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4e904:	e0fffb17 	ldw	r3,-20(fp)
   4e908:	00bfff84 	movi	r2,-2
   4e90c:	1884703a 	and	r2,r3,r2
   4e910:	1001703a 	wrctl	status,r2
  
  return context;
   4e914:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   4e918:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
   4e91c:	00c00044 	movi	r3,1
   4e920:	e0bffa17 	ldw	r2,-24(fp)
   4e924:	1884983a 	sll	r2,r3,r2
   4e928:	1007883a 	mov	r3,r2
   4e92c:	d0a6d517 	ldw	r2,-25772(gp)
   4e930:	1884b03a 	or	r2,r3,r2
   4e934:	d0a6d515 	stw	r2,-25772(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   4e938:	d0a6d517 	ldw	r2,-25772(gp)
   4e93c:	100170fa 	wrctl	ienable,r2
   4e940:	e0bffc17 	ldw	r2,-16(fp)
   4e944:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4e948:	e0bffd17 	ldw	r2,-12(fp)
   4e94c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   4e950:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
   4e954:	0001883a 	nop
}
   4e958:	e037883a 	mov	sp,fp
   4e95c:	df000017 	ldw	fp,0(sp)
   4e960:	dec00104 	addi	sp,sp,4
   4e964:	f800283a 	ret

0004e968 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   4e968:	defff904 	addi	sp,sp,-28
   4e96c:	df000615 	stw	fp,24(sp)
   4e970:	df000604 	addi	fp,sp,24
   4e974:	e13ffe15 	stw	r4,-8(fp)
   4e978:	e17fff15 	stw	r5,-4(fp)
   4e97c:	e0bfff17 	ldw	r2,-4(fp)
   4e980:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4e984:	0005303a 	rdctl	r2,status
   4e988:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4e98c:	e0fffb17 	ldw	r3,-20(fp)
   4e990:	00bfff84 	movi	r2,-2
   4e994:	1884703a 	and	r2,r3,r2
   4e998:	1001703a 	wrctl	status,r2
  
  return context;
   4e99c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   4e9a0:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
   4e9a4:	00c00044 	movi	r3,1
   4e9a8:	e0bffa17 	ldw	r2,-24(fp)
   4e9ac:	1884983a 	sll	r2,r3,r2
   4e9b0:	0084303a 	nor	r2,zero,r2
   4e9b4:	1007883a 	mov	r3,r2
   4e9b8:	d0a6d517 	ldw	r2,-25772(gp)
   4e9bc:	1884703a 	and	r2,r3,r2
   4e9c0:	d0a6d515 	stw	r2,-25772(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   4e9c4:	d0a6d517 	ldw	r2,-25772(gp)
   4e9c8:	100170fa 	wrctl	ienable,r2
   4e9cc:	e0bffc17 	ldw	r2,-16(fp)
   4e9d0:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4e9d4:	e0bffd17 	ldw	r2,-12(fp)
   4e9d8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   4e9dc:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
   4e9e0:	0001883a 	nop
}
   4e9e4:	e037883a 	mov	sp,fp
   4e9e8:	df000017 	ldw	fp,0(sp)
   4e9ec:	dec00104 	addi	sp,sp,4
   4e9f0:	f800283a 	ret

0004e9f4 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   4e9f4:	defffc04 	addi	sp,sp,-16
   4e9f8:	df000315 	stw	fp,12(sp)
   4e9fc:	df000304 	addi	fp,sp,12
   4ea00:	e13ffe15 	stw	r4,-8(fp)
   4ea04:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   4ea08:	000530fa 	rdctl	r2,ienable
   4ea0c:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   4ea10:	00c00044 	movi	r3,1
   4ea14:	e0bfff17 	ldw	r2,-4(fp)
   4ea18:	1884983a 	sll	r2,r3,r2
   4ea1c:	1007883a 	mov	r3,r2
   4ea20:	e0bffd17 	ldw	r2,-12(fp)
   4ea24:	1884703a 	and	r2,r3,r2
   4ea28:	1004c03a 	cmpne	r2,r2,zero
   4ea2c:	10803fcc 	andi	r2,r2,255
}
   4ea30:	e037883a 	mov	sp,fp
   4ea34:	df000017 	ldw	fp,0(sp)
   4ea38:	dec00104 	addi	sp,sp,4
   4ea3c:	f800283a 	ret

0004ea40 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   4ea40:	defff504 	addi	sp,sp,-44
   4ea44:	dfc00a15 	stw	ra,40(sp)
   4ea48:	df000915 	stw	fp,36(sp)
   4ea4c:	df000904 	addi	fp,sp,36
   4ea50:	e13ffc15 	stw	r4,-16(fp)
   4ea54:	e17ffd15 	stw	r5,-12(fp)
   4ea58:	e1bffe15 	stw	r6,-8(fp)
   4ea5c:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
   4ea60:	00bffa84 	movi	r2,-22
   4ea64:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   4ea68:	e0bffd17 	ldw	r2,-12(fp)
   4ea6c:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   4ea70:	e0bff817 	ldw	r2,-32(fp)
   4ea74:	10800808 	cmpgei	r2,r2,32
   4ea78:	1000271e 	bne	r2,zero,4eb18 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4ea7c:	0005303a 	rdctl	r2,status
   4ea80:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4ea84:	e0fffb17 	ldw	r3,-20(fp)
   4ea88:	00bfff84 	movi	r2,-2
   4ea8c:	1884703a 	and	r2,r3,r2
   4ea90:	1001703a 	wrctl	status,r2
  
  return context;
   4ea94:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   4ea98:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
   4ea9c:	00800174 	movhi	r2,5
   4eaa0:	108c4004 	addi	r2,r2,12544
   4eaa4:	e0fff817 	ldw	r3,-32(fp)
   4eaa8:	180690fa 	slli	r3,r3,3
   4eaac:	10c5883a 	add	r2,r2,r3
   4eab0:	e0fffe17 	ldw	r3,-8(fp)
   4eab4:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
   4eab8:	00800174 	movhi	r2,5
   4eabc:	108c4004 	addi	r2,r2,12544
   4eac0:	e0fff817 	ldw	r3,-32(fp)
   4eac4:	180690fa 	slli	r3,r3,3
   4eac8:	10c5883a 	add	r2,r2,r3
   4eacc:	10800104 	addi	r2,r2,4
   4ead0:	e0ffff17 	ldw	r3,-4(fp)
   4ead4:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   4ead8:	e0bffe17 	ldw	r2,-8(fp)
   4eadc:	10000526 	beq	r2,zero,4eaf4 <alt_iic_isr_register+0xb4>
   4eae0:	e0bff817 	ldw	r2,-32(fp)
   4eae4:	100b883a 	mov	r5,r2
   4eae8:	e13ffc17 	ldw	r4,-16(fp)
   4eaec:	004e8e00 	call	4e8e0 <alt_ic_irq_enable>
   4eaf0:	00000406 	br	4eb04 <alt_iic_isr_register+0xc4>
   4eaf4:	e0bff817 	ldw	r2,-32(fp)
   4eaf8:	100b883a 	mov	r5,r2
   4eafc:	e13ffc17 	ldw	r4,-16(fp)
   4eb00:	004e9680 	call	4e968 <alt_ic_irq_disable>
   4eb04:	e0bff715 	stw	r2,-36(fp)
   4eb08:	e0bffa17 	ldw	r2,-24(fp)
   4eb0c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4eb10:	e0bff917 	ldw	r2,-28(fp)
   4eb14:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   4eb18:	e0bff717 	ldw	r2,-36(fp)
}
   4eb1c:	e037883a 	mov	sp,fp
   4eb20:	dfc00117 	ldw	ra,4(sp)
   4eb24:	df000017 	ldw	fp,0(sp)
   4eb28:	dec00204 	addi	sp,sp,8
   4eb2c:	f800283a 	ret

0004eb30 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   4eb30:	defff904 	addi	sp,sp,-28
   4eb34:	dfc00615 	stw	ra,24(sp)
   4eb38:	df000515 	stw	fp,20(sp)
   4eb3c:	df000504 	addi	fp,sp,20
   4eb40:	e13ffc15 	stw	r4,-16(fp)
   4eb44:	e17ffd15 	stw	r5,-12(fp)
   4eb48:	e1bffe15 	stw	r6,-8(fp)
   4eb4c:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
   4eb50:	e1bfff17 	ldw	r6,-4(fp)
   4eb54:	e17ffe17 	ldw	r5,-8(fp)
   4eb58:	e13ffd17 	ldw	r4,-12(fp)
   4eb5c:	004ed700 	call	4ed70 <open>
   4eb60:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
   4eb64:	e0bffb17 	ldw	r2,-20(fp)
   4eb68:	10001c16 	blt	r2,zero,4ebdc <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
   4eb6c:	00800174 	movhi	r2,5
   4eb70:	1080e504 	addi	r2,r2,916
   4eb74:	e0fffb17 	ldw	r3,-20(fp)
   4eb78:	18c00324 	muli	r3,r3,12
   4eb7c:	10c5883a 	add	r2,r2,r3
   4eb80:	10c00017 	ldw	r3,0(r2)
   4eb84:	e0bffc17 	ldw	r2,-16(fp)
   4eb88:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   4eb8c:	00800174 	movhi	r2,5
   4eb90:	1080e504 	addi	r2,r2,916
   4eb94:	e0fffb17 	ldw	r3,-20(fp)
   4eb98:	18c00324 	muli	r3,r3,12
   4eb9c:	10c5883a 	add	r2,r2,r3
   4eba0:	10800104 	addi	r2,r2,4
   4eba4:	10c00017 	ldw	r3,0(r2)
   4eba8:	e0bffc17 	ldw	r2,-16(fp)
   4ebac:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   4ebb0:	00800174 	movhi	r2,5
   4ebb4:	1080e504 	addi	r2,r2,916
   4ebb8:	e0fffb17 	ldw	r3,-20(fp)
   4ebbc:	18c00324 	muli	r3,r3,12
   4ebc0:	10c5883a 	add	r2,r2,r3
   4ebc4:	10800204 	addi	r2,r2,8
   4ebc8:	10c00017 	ldw	r3,0(r2)
   4ebcc:	e0bffc17 	ldw	r2,-16(fp)
   4ebd0:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   4ebd4:	e13ffb17 	ldw	r4,-20(fp)
   4ebd8:	004d6580 	call	4d658 <alt_release_fd>
  }
} 
   4ebdc:	0001883a 	nop
   4ebe0:	e037883a 	mov	sp,fp
   4ebe4:	dfc00117 	ldw	ra,4(sp)
   4ebe8:	df000017 	ldw	fp,0(sp)
   4ebec:	dec00204 	addi	sp,sp,8
   4ebf0:	f800283a 	ret

0004ebf4 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   4ebf4:	defffb04 	addi	sp,sp,-20
   4ebf8:	dfc00415 	stw	ra,16(sp)
   4ebfc:	df000315 	stw	fp,12(sp)
   4ec00:	df000304 	addi	fp,sp,12
   4ec04:	e13ffd15 	stw	r4,-12(fp)
   4ec08:	e17ffe15 	stw	r5,-8(fp)
   4ec0c:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   4ec10:	01c07fc4 	movi	r7,511
   4ec14:	01800044 	movi	r6,1
   4ec18:	e17ffd17 	ldw	r5,-12(fp)
   4ec1c:	01000174 	movhi	r4,5
   4ec20:	2100e804 	addi	r4,r4,928
   4ec24:	004eb300 	call	4eb30 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   4ec28:	01c07fc4 	movi	r7,511
   4ec2c:	000d883a 	mov	r6,zero
   4ec30:	e17ffe17 	ldw	r5,-8(fp)
   4ec34:	01000174 	movhi	r4,5
   4ec38:	2100e504 	addi	r4,r4,916
   4ec3c:	004eb300 	call	4eb30 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   4ec40:	01c07fc4 	movi	r7,511
   4ec44:	01800044 	movi	r6,1
   4ec48:	e17fff17 	ldw	r5,-4(fp)
   4ec4c:	01000174 	movhi	r4,5
   4ec50:	2100eb04 	addi	r4,r4,940
   4ec54:	004eb300 	call	4eb30 <alt_open_fd>
}  
   4ec58:	0001883a 	nop
   4ec5c:	e037883a 	mov	sp,fp
   4ec60:	dfc00117 	ldw	ra,4(sp)
   4ec64:	df000017 	ldw	fp,0(sp)
   4ec68:	dec00204 	addi	sp,sp,8
   4ec6c:	f800283a 	ret

0004ec70 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4ec70:	defffe04 	addi	sp,sp,-8
   4ec74:	dfc00115 	stw	ra,4(sp)
   4ec78:	df000015 	stw	fp,0(sp)
   4ec7c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4ec80:	d0a00b17 	ldw	r2,-32724(gp)
   4ec84:	10000326 	beq	r2,zero,4ec94 <alt_get_errno+0x24>
   4ec88:	d0a00b17 	ldw	r2,-32724(gp)
   4ec8c:	103ee83a 	callr	r2
   4ec90:	00000106 	br	4ec98 <alt_get_errno+0x28>
   4ec94:	d0a6d104 	addi	r2,gp,-25788
}
   4ec98:	e037883a 	mov	sp,fp
   4ec9c:	dfc00117 	ldw	ra,4(sp)
   4eca0:	df000017 	ldw	fp,0(sp)
   4eca4:	dec00204 	addi	sp,sp,8
   4eca8:	f800283a 	ret

0004ecac <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   4ecac:	defffd04 	addi	sp,sp,-12
   4ecb0:	df000215 	stw	fp,8(sp)
   4ecb4:	df000204 	addi	fp,sp,8
   4ecb8:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   4ecbc:	e0bfff17 	ldw	r2,-4(fp)
   4ecc0:	10800217 	ldw	r2,8(r2)
   4ecc4:	10d00034 	orhi	r3,r2,16384
   4ecc8:	e0bfff17 	ldw	r2,-4(fp)
   4eccc:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   4ecd0:	e03ffe15 	stw	zero,-8(fp)
   4ecd4:	00001d06 	br	4ed4c <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   4ecd8:	00800174 	movhi	r2,5
   4ecdc:	1080e504 	addi	r2,r2,916
   4ece0:	e0fffe17 	ldw	r3,-8(fp)
   4ece4:	18c00324 	muli	r3,r3,12
   4ece8:	10c5883a 	add	r2,r2,r3
   4ecec:	10c00017 	ldw	r3,0(r2)
   4ecf0:	e0bfff17 	ldw	r2,-4(fp)
   4ecf4:	10800017 	ldw	r2,0(r2)
   4ecf8:	1880111e 	bne	r3,r2,4ed40 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   4ecfc:	00800174 	movhi	r2,5
   4ed00:	1080e504 	addi	r2,r2,916
   4ed04:	e0fffe17 	ldw	r3,-8(fp)
   4ed08:	18c00324 	muli	r3,r3,12
   4ed0c:	10c5883a 	add	r2,r2,r3
   4ed10:	10800204 	addi	r2,r2,8
   4ed14:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   4ed18:	1000090e 	bge	r2,zero,4ed40 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   4ed1c:	e0bffe17 	ldw	r2,-8(fp)
   4ed20:	10c00324 	muli	r3,r2,12
   4ed24:	00800174 	movhi	r2,5
   4ed28:	1080e504 	addi	r2,r2,916
   4ed2c:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   4ed30:	e0bfff17 	ldw	r2,-4(fp)
   4ed34:	18800226 	beq	r3,r2,4ed40 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   4ed38:	00bffcc4 	movi	r2,-13
   4ed3c:	00000806 	br	4ed60 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   4ed40:	e0bffe17 	ldw	r2,-8(fp)
   4ed44:	10800044 	addi	r2,r2,1
   4ed48:	e0bffe15 	stw	r2,-8(fp)
   4ed4c:	d0a00a17 	ldw	r2,-32728(gp)
   4ed50:	1007883a 	mov	r3,r2
   4ed54:	e0bffe17 	ldw	r2,-8(fp)
   4ed58:	18bfdf2e 	bgeu	r3,r2,4ecd8 <__alt_data_end+0xfffe7bd8>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   4ed5c:	0005883a 	mov	r2,zero
}
   4ed60:	e037883a 	mov	sp,fp
   4ed64:	df000017 	ldw	fp,0(sp)
   4ed68:	dec00104 	addi	sp,sp,4
   4ed6c:	f800283a 	ret

0004ed70 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   4ed70:	defff604 	addi	sp,sp,-40
   4ed74:	dfc00915 	stw	ra,36(sp)
   4ed78:	df000815 	stw	fp,32(sp)
   4ed7c:	df000804 	addi	fp,sp,32
   4ed80:	e13ffd15 	stw	r4,-12(fp)
   4ed84:	e17ffe15 	stw	r5,-8(fp)
   4ed88:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   4ed8c:	00bfffc4 	movi	r2,-1
   4ed90:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   4ed94:	00bffb44 	movi	r2,-19
   4ed98:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   4ed9c:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   4eda0:	d1600804 	addi	r5,gp,-32736
   4eda4:	e13ffd17 	ldw	r4,-12(fp)
   4eda8:	004f08c0 	call	4f08c <alt_find_dev>
   4edac:	e0bff815 	stw	r2,-32(fp)
   4edb0:	e0bff817 	ldw	r2,-32(fp)
   4edb4:	1000051e 	bne	r2,zero,4edcc <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   4edb8:	e13ffd17 	ldw	r4,-12(fp)
   4edbc:	004f11c0 	call	4f11c <alt_find_file>
   4edc0:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   4edc4:	00800044 	movi	r2,1
   4edc8:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   4edcc:	e0bff817 	ldw	r2,-32(fp)
   4edd0:	10002926 	beq	r2,zero,4ee78 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
   4edd4:	e13ff817 	ldw	r4,-32(fp)
   4edd8:	004f2240 	call	4f224 <alt_get_fd>
   4eddc:	e0bff915 	stw	r2,-28(fp)
   4ede0:	e0bff917 	ldw	r2,-28(fp)
   4ede4:	1000030e 	bge	r2,zero,4edf4 <open+0x84>
    {
      status = index;
   4ede8:	e0bff917 	ldw	r2,-28(fp)
   4edec:	e0bffa15 	stw	r2,-24(fp)
   4edf0:	00002306 	br	4ee80 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
   4edf4:	e0bff917 	ldw	r2,-28(fp)
   4edf8:	10c00324 	muli	r3,r2,12
   4edfc:	00800174 	movhi	r2,5
   4ee00:	1080e504 	addi	r2,r2,916
   4ee04:	1885883a 	add	r2,r3,r2
   4ee08:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   4ee0c:	e0fffe17 	ldw	r3,-8(fp)
   4ee10:	00900034 	movhi	r2,16384
   4ee14:	10bfffc4 	addi	r2,r2,-1
   4ee18:	1886703a 	and	r3,r3,r2
   4ee1c:	e0bffc17 	ldw	r2,-16(fp)
   4ee20:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   4ee24:	e0bffb17 	ldw	r2,-20(fp)
   4ee28:	1000051e 	bne	r2,zero,4ee40 <open+0xd0>
   4ee2c:	e13ffc17 	ldw	r4,-16(fp)
   4ee30:	004ecac0 	call	4ecac <alt_file_locked>
   4ee34:	e0bffa15 	stw	r2,-24(fp)
   4ee38:	e0bffa17 	ldw	r2,-24(fp)
   4ee3c:	10001016 	blt	r2,zero,4ee80 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   4ee40:	e0bff817 	ldw	r2,-32(fp)
   4ee44:	10800317 	ldw	r2,12(r2)
   4ee48:	10000826 	beq	r2,zero,4ee6c <open+0xfc>
   4ee4c:	e0bff817 	ldw	r2,-32(fp)
   4ee50:	10800317 	ldw	r2,12(r2)
   4ee54:	e1ffff17 	ldw	r7,-4(fp)
   4ee58:	e1bffe17 	ldw	r6,-8(fp)
   4ee5c:	e17ffd17 	ldw	r5,-12(fp)
   4ee60:	e13ffc17 	ldw	r4,-16(fp)
   4ee64:	103ee83a 	callr	r2
   4ee68:	00000106 	br	4ee70 <open+0x100>
   4ee6c:	0005883a 	mov	r2,zero
   4ee70:	e0bffa15 	stw	r2,-24(fp)
   4ee74:	00000206 	br	4ee80 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
   4ee78:	00bffb44 	movi	r2,-19
   4ee7c:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   4ee80:	e0bffa17 	ldw	r2,-24(fp)
   4ee84:	1000090e 	bge	r2,zero,4eeac <open+0x13c>
  {
    alt_release_fd (index);  
   4ee88:	e13ff917 	ldw	r4,-28(fp)
   4ee8c:	004d6580 	call	4d658 <alt_release_fd>
    ALT_ERRNO = -status;
   4ee90:	004ec700 	call	4ec70 <alt_get_errno>
   4ee94:	1007883a 	mov	r3,r2
   4ee98:	e0bffa17 	ldw	r2,-24(fp)
   4ee9c:	0085c83a 	sub	r2,zero,r2
   4eea0:	18800015 	stw	r2,0(r3)
    return -1;
   4eea4:	00bfffc4 	movi	r2,-1
   4eea8:	00000106 	br	4eeb0 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
   4eeac:	e0bff917 	ldw	r2,-28(fp)
}
   4eeb0:	e037883a 	mov	sp,fp
   4eeb4:	dfc00117 	ldw	ra,4(sp)
   4eeb8:	df000017 	ldw	fp,0(sp)
   4eebc:	dec00204 	addi	sp,sp,8
   4eec0:	f800283a 	ret

0004eec4 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   4eec4:	defffa04 	addi	sp,sp,-24
   4eec8:	df000515 	stw	fp,20(sp)
   4eecc:	df000504 	addi	fp,sp,20
   4eed0:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4eed4:	0005303a 	rdctl	r2,status
   4eed8:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4eedc:	e0fffc17 	ldw	r3,-16(fp)
   4eee0:	00bfff84 	movi	r2,-2
   4eee4:	1884703a 	and	r2,r3,r2
   4eee8:	1001703a 	wrctl	status,r2
  
  return context;
   4eeec:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   4eef0:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   4eef4:	e0bfff17 	ldw	r2,-4(fp)
   4eef8:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   4eefc:	e0bffd17 	ldw	r2,-12(fp)
   4ef00:	10800017 	ldw	r2,0(r2)
   4ef04:	e0fffd17 	ldw	r3,-12(fp)
   4ef08:	18c00117 	ldw	r3,4(r3)
   4ef0c:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   4ef10:	e0bffd17 	ldw	r2,-12(fp)
   4ef14:	10800117 	ldw	r2,4(r2)
   4ef18:	e0fffd17 	ldw	r3,-12(fp)
   4ef1c:	18c00017 	ldw	r3,0(r3)
   4ef20:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   4ef24:	e0bffd17 	ldw	r2,-12(fp)
   4ef28:	e0fffd17 	ldw	r3,-12(fp)
   4ef2c:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   4ef30:	e0bffd17 	ldw	r2,-12(fp)
   4ef34:	e0fffd17 	ldw	r3,-12(fp)
   4ef38:	10c00015 	stw	r3,0(r2)
   4ef3c:	e0bffb17 	ldw	r2,-20(fp)
   4ef40:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4ef44:	e0bffe17 	ldw	r2,-8(fp)
   4ef48:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   4ef4c:	0001883a 	nop
   4ef50:	e037883a 	mov	sp,fp
   4ef54:	df000017 	ldw	fp,0(sp)
   4ef58:	dec00104 	addi	sp,sp,4
   4ef5c:	f800283a 	ret

0004ef60 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   4ef60:	defffb04 	addi	sp,sp,-20
   4ef64:	dfc00415 	stw	ra,16(sp)
   4ef68:	df000315 	stw	fp,12(sp)
   4ef6c:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   4ef70:	d0a00e17 	ldw	r2,-32712(gp)
   4ef74:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   4ef78:	d0a6d717 	ldw	r2,-25764(gp)
   4ef7c:	10800044 	addi	r2,r2,1
   4ef80:	d0a6d715 	stw	r2,-25764(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   4ef84:	00002e06 	br	4f040 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   4ef88:	e0bffd17 	ldw	r2,-12(fp)
   4ef8c:	10800017 	ldw	r2,0(r2)
   4ef90:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   4ef94:	e0bffd17 	ldw	r2,-12(fp)
   4ef98:	10800403 	ldbu	r2,16(r2)
   4ef9c:	10803fcc 	andi	r2,r2,255
   4efa0:	10000426 	beq	r2,zero,4efb4 <alt_tick+0x54>
   4efa4:	d0a6d717 	ldw	r2,-25764(gp)
   4efa8:	1000021e 	bne	r2,zero,4efb4 <alt_tick+0x54>
    {
      alarm->rollover = 0;
   4efac:	e0bffd17 	ldw	r2,-12(fp)
   4efb0:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   4efb4:	e0bffd17 	ldw	r2,-12(fp)
   4efb8:	10800217 	ldw	r2,8(r2)
   4efbc:	d0e6d717 	ldw	r3,-25764(gp)
   4efc0:	18801d36 	bltu	r3,r2,4f038 <alt_tick+0xd8>
   4efc4:	e0bffd17 	ldw	r2,-12(fp)
   4efc8:	10800403 	ldbu	r2,16(r2)
   4efcc:	10803fcc 	andi	r2,r2,255
   4efd0:	1000191e 	bne	r2,zero,4f038 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   4efd4:	e0bffd17 	ldw	r2,-12(fp)
   4efd8:	10800317 	ldw	r2,12(r2)
   4efdc:	e0fffd17 	ldw	r3,-12(fp)
   4efe0:	18c00517 	ldw	r3,20(r3)
   4efe4:	1809883a 	mov	r4,r3
   4efe8:	103ee83a 	callr	r2
   4efec:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   4eff0:	e0bfff17 	ldw	r2,-4(fp)
   4eff4:	1000031e 	bne	r2,zero,4f004 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   4eff8:	e13ffd17 	ldw	r4,-12(fp)
   4effc:	004eec40 	call	4eec4 <alt_alarm_stop>
   4f000:	00000d06 	br	4f038 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   4f004:	e0bffd17 	ldw	r2,-12(fp)
   4f008:	10c00217 	ldw	r3,8(r2)
   4f00c:	e0bfff17 	ldw	r2,-4(fp)
   4f010:	1887883a 	add	r3,r3,r2
   4f014:	e0bffd17 	ldw	r2,-12(fp)
   4f018:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   4f01c:	e0bffd17 	ldw	r2,-12(fp)
   4f020:	10c00217 	ldw	r3,8(r2)
   4f024:	d0a6d717 	ldw	r2,-25764(gp)
   4f028:	1880032e 	bgeu	r3,r2,4f038 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   4f02c:	e0bffd17 	ldw	r2,-12(fp)
   4f030:	00c00044 	movi	r3,1
   4f034:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   4f038:	e0bffe17 	ldw	r2,-8(fp)
   4f03c:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   4f040:	e0fffd17 	ldw	r3,-12(fp)
   4f044:	d0a00e04 	addi	r2,gp,-32712
   4f048:	18bfcf1e 	bne	r3,r2,4ef88 <__alt_data_end+0xfffe7e88>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   4f04c:	0001883a 	nop
}
   4f050:	0001883a 	nop
   4f054:	e037883a 	mov	sp,fp
   4f058:	dfc00117 	ldw	ra,4(sp)
   4f05c:	df000017 	ldw	fp,0(sp)
   4f060:	dec00204 	addi	sp,sp,8
   4f064:	f800283a 	ret

0004f068 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   4f068:	deffff04 	addi	sp,sp,-4
   4f06c:	df000015 	stw	fp,0(sp)
   4f070:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   4f074:	000170fa 	wrctl	ienable,zero
}
   4f078:	0001883a 	nop
   4f07c:	e037883a 	mov	sp,fp
   4f080:	df000017 	ldw	fp,0(sp)
   4f084:	dec00104 	addi	sp,sp,4
   4f088:	f800283a 	ret

0004f08c <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   4f08c:	defffa04 	addi	sp,sp,-24
   4f090:	dfc00515 	stw	ra,20(sp)
   4f094:	df000415 	stw	fp,16(sp)
   4f098:	df000404 	addi	fp,sp,16
   4f09c:	e13ffe15 	stw	r4,-8(fp)
   4f0a0:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   4f0a4:	e0bfff17 	ldw	r2,-4(fp)
   4f0a8:	10800017 	ldw	r2,0(r2)
   4f0ac:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   4f0b0:	e13ffe17 	ldw	r4,-8(fp)
   4f0b4:	004127c0 	call	4127c <strlen>
   4f0b8:	10800044 	addi	r2,r2,1
   4f0bc:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   4f0c0:	00000d06 	br	4f0f8 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   4f0c4:	e0bffc17 	ldw	r2,-16(fp)
   4f0c8:	10800217 	ldw	r2,8(r2)
   4f0cc:	e0fffd17 	ldw	r3,-12(fp)
   4f0d0:	180d883a 	mov	r6,r3
   4f0d4:	e17ffe17 	ldw	r5,-8(fp)
   4f0d8:	1009883a 	mov	r4,r2
   4f0dc:	004f4400 	call	4f440 <memcmp>
   4f0e0:	1000021e 	bne	r2,zero,4f0ec <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   4f0e4:	e0bffc17 	ldw	r2,-16(fp)
   4f0e8:	00000706 	br	4f108 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   4f0ec:	e0bffc17 	ldw	r2,-16(fp)
   4f0f0:	10800017 	ldw	r2,0(r2)
   4f0f4:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   4f0f8:	e0fffc17 	ldw	r3,-16(fp)
   4f0fc:	e0bfff17 	ldw	r2,-4(fp)
   4f100:	18bff01e 	bne	r3,r2,4f0c4 <__alt_data_end+0xfffe7fc4>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   4f104:	0005883a 	mov	r2,zero
}
   4f108:	e037883a 	mov	sp,fp
   4f10c:	dfc00117 	ldw	ra,4(sp)
   4f110:	df000017 	ldw	fp,0(sp)
   4f114:	dec00204 	addi	sp,sp,8
   4f118:	f800283a 	ret

0004f11c <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   4f11c:	defffb04 	addi	sp,sp,-20
   4f120:	dfc00415 	stw	ra,16(sp)
   4f124:	df000315 	stw	fp,12(sp)
   4f128:	df000304 	addi	fp,sp,12
   4f12c:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   4f130:	d0a00617 	ldw	r2,-32744(gp)
   4f134:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   4f138:	00003106 	br	4f200 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   4f13c:	e0bffd17 	ldw	r2,-12(fp)
   4f140:	10800217 	ldw	r2,8(r2)
   4f144:	1009883a 	mov	r4,r2
   4f148:	004127c0 	call	4127c <strlen>
   4f14c:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   4f150:	e0bffd17 	ldw	r2,-12(fp)
   4f154:	10c00217 	ldw	r3,8(r2)
   4f158:	e0bffe17 	ldw	r2,-8(fp)
   4f15c:	10bfffc4 	addi	r2,r2,-1
   4f160:	1885883a 	add	r2,r3,r2
   4f164:	10800003 	ldbu	r2,0(r2)
   4f168:	10803fcc 	andi	r2,r2,255
   4f16c:	1080201c 	xori	r2,r2,128
   4f170:	10bfe004 	addi	r2,r2,-128
   4f174:	10800bd8 	cmpnei	r2,r2,47
   4f178:	1000031e 	bne	r2,zero,4f188 <alt_find_file+0x6c>
    {
      len -= 1;
   4f17c:	e0bffe17 	ldw	r2,-8(fp)
   4f180:	10bfffc4 	addi	r2,r2,-1
   4f184:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   4f188:	e0bffe17 	ldw	r2,-8(fp)
   4f18c:	e0ffff17 	ldw	r3,-4(fp)
   4f190:	1885883a 	add	r2,r3,r2
   4f194:	10800003 	ldbu	r2,0(r2)
   4f198:	10803fcc 	andi	r2,r2,255
   4f19c:	1080201c 	xori	r2,r2,128
   4f1a0:	10bfe004 	addi	r2,r2,-128
   4f1a4:	10800be0 	cmpeqi	r2,r2,47
   4f1a8:	1000081e 	bne	r2,zero,4f1cc <alt_find_file+0xb0>
   4f1ac:	e0bffe17 	ldw	r2,-8(fp)
   4f1b0:	e0ffff17 	ldw	r3,-4(fp)
   4f1b4:	1885883a 	add	r2,r3,r2
   4f1b8:	10800003 	ldbu	r2,0(r2)
   4f1bc:	10803fcc 	andi	r2,r2,255
   4f1c0:	1080201c 	xori	r2,r2,128
   4f1c4:	10bfe004 	addi	r2,r2,-128
   4f1c8:	10000a1e 	bne	r2,zero,4f1f4 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   4f1cc:	e0bffd17 	ldw	r2,-12(fp)
   4f1d0:	10800217 	ldw	r2,8(r2)
   4f1d4:	e0fffe17 	ldw	r3,-8(fp)
   4f1d8:	180d883a 	mov	r6,r3
   4f1dc:	e17fff17 	ldw	r5,-4(fp)
   4f1e0:	1009883a 	mov	r4,r2
   4f1e4:	004f4400 	call	4f440 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   4f1e8:	1000021e 	bne	r2,zero,4f1f4 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   4f1ec:	e0bffd17 	ldw	r2,-12(fp)
   4f1f0:	00000706 	br	4f210 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   4f1f4:	e0bffd17 	ldw	r2,-12(fp)
   4f1f8:	10800017 	ldw	r2,0(r2)
   4f1fc:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   4f200:	e0fffd17 	ldw	r3,-12(fp)
   4f204:	d0a00604 	addi	r2,gp,-32744
   4f208:	18bfcc1e 	bne	r3,r2,4f13c <__alt_data_end+0xfffe803c>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   4f20c:	0005883a 	mov	r2,zero
}
   4f210:	e037883a 	mov	sp,fp
   4f214:	dfc00117 	ldw	ra,4(sp)
   4f218:	df000017 	ldw	fp,0(sp)
   4f21c:	dec00204 	addi	sp,sp,8
   4f220:	f800283a 	ret

0004f224 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   4f224:	defffc04 	addi	sp,sp,-16
   4f228:	df000315 	stw	fp,12(sp)
   4f22c:	df000304 	addi	fp,sp,12
   4f230:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   4f234:	00bffa04 	movi	r2,-24
   4f238:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   4f23c:	e03ffd15 	stw	zero,-12(fp)
   4f240:	00001906 	br	4f2a8 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
   4f244:	00800174 	movhi	r2,5
   4f248:	1080e504 	addi	r2,r2,916
   4f24c:	e0fffd17 	ldw	r3,-12(fp)
   4f250:	18c00324 	muli	r3,r3,12
   4f254:	10c5883a 	add	r2,r2,r3
   4f258:	10800017 	ldw	r2,0(r2)
   4f25c:	10000f1e 	bne	r2,zero,4f29c <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
   4f260:	00800174 	movhi	r2,5
   4f264:	1080e504 	addi	r2,r2,916
   4f268:	e0fffd17 	ldw	r3,-12(fp)
   4f26c:	18c00324 	muli	r3,r3,12
   4f270:	10c5883a 	add	r2,r2,r3
   4f274:	e0ffff17 	ldw	r3,-4(fp)
   4f278:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   4f27c:	d0e00a17 	ldw	r3,-32728(gp)
   4f280:	e0bffd17 	ldw	r2,-12(fp)
   4f284:	1880020e 	bge	r3,r2,4f290 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
   4f288:	e0bffd17 	ldw	r2,-12(fp)
   4f28c:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
   4f290:	e0bffd17 	ldw	r2,-12(fp)
   4f294:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   4f298:	00000606 	br	4f2b4 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   4f29c:	e0bffd17 	ldw	r2,-12(fp)
   4f2a0:	10800044 	addi	r2,r2,1
   4f2a4:	e0bffd15 	stw	r2,-12(fp)
   4f2a8:	e0bffd17 	ldw	r2,-12(fp)
   4f2ac:	10800810 	cmplti	r2,r2,32
   4f2b0:	103fe41e 	bne	r2,zero,4f244 <__alt_data_end+0xfffe8144>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   4f2b4:	e0bffe17 	ldw	r2,-8(fp)
}
   4f2b8:	e037883a 	mov	sp,fp
   4f2bc:	df000017 	ldw	fp,0(sp)
   4f2c0:	dec00104 	addi	sp,sp,4
   4f2c4:	f800283a 	ret

0004f2c8 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   4f2c8:	defffb04 	addi	sp,sp,-20
   4f2cc:	df000415 	stw	fp,16(sp)
   4f2d0:	df000404 	addi	fp,sp,16
   4f2d4:	e13ffe15 	stw	r4,-8(fp)
   4f2d8:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   4f2dc:	e0bfff17 	ldw	r2,-4(fp)
   4f2e0:	10840070 	cmpltui	r2,r2,4097
   4f2e4:	1000021e 	bne	r2,zero,4f2f0 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   4f2e8:	00840004 	movi	r2,4096
   4f2ec:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
   4f2f0:	e0fffe17 	ldw	r3,-8(fp)
   4f2f4:	e0bfff17 	ldw	r2,-4(fp)
   4f2f8:	1885883a 	add	r2,r3,r2
   4f2fc:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   4f300:	e0bffe17 	ldw	r2,-8(fp)
   4f304:	e0bffc15 	stw	r2,-16(fp)
   4f308:	00000506 	br	4f320 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   4f30c:	e0bffc17 	ldw	r2,-16(fp)
   4f310:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   4f314:	e0bffc17 	ldw	r2,-16(fp)
   4f318:	10800804 	addi	r2,r2,32
   4f31c:	e0bffc15 	stw	r2,-16(fp)
   4f320:	e0fffc17 	ldw	r3,-16(fp)
   4f324:	e0bffd17 	ldw	r2,-12(fp)
   4f328:	18bff836 	bltu	r3,r2,4f30c <__alt_data_end+0xfffe820c>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   4f32c:	e0bffe17 	ldw	r2,-8(fp)
   4f330:	108007cc 	andi	r2,r2,31
   4f334:	10000226 	beq	r2,zero,4f340 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   4f338:	e0bffc17 	ldw	r2,-16(fp)
   4f33c:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   4f340:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   4f344:	0001883a 	nop
   4f348:	e037883a 	mov	sp,fp
   4f34c:	df000017 	ldw	fp,0(sp)
   4f350:	dec00104 	addi	sp,sp,4
   4f354:	f800283a 	ret

0004f358 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   4f358:	defffe04 	addi	sp,sp,-8
   4f35c:	df000115 	stw	fp,4(sp)
   4f360:	df000104 	addi	fp,sp,4
   4f364:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   4f368:	e0bfff17 	ldw	r2,-4(fp)
   4f36c:	10bffe84 	addi	r2,r2,-6
   4f370:	10c00428 	cmpgeui	r3,r2,16
   4f374:	18001a1e 	bne	r3,zero,4f3e0 <alt_exception_cause_generated_bad_addr+0x88>
   4f378:	100690ba 	slli	r3,r2,2
   4f37c:	00800174 	movhi	r2,5
   4f380:	10bce404 	addi	r2,r2,-3184
   4f384:	1885883a 	add	r2,r3,r2
   4f388:	10800017 	ldw	r2,0(r2)
   4f38c:	1000683a 	jmp	r2
   4f390:	0004f3d0 	cmplti	zero,zero,5071
   4f394:	0004f3d0 	cmplti	zero,zero,5071
   4f398:	0004f3e0 	cmpeqi	zero,zero,5071
   4f39c:	0004f3e0 	cmpeqi	zero,zero,5071
   4f3a0:	0004f3e0 	cmpeqi	zero,zero,5071
   4f3a4:	0004f3d0 	cmplti	zero,zero,5071
   4f3a8:	0004f3d8 	cmpnei	zero,zero,5071
   4f3ac:	0004f3e0 	cmpeqi	zero,zero,5071
   4f3b0:	0004f3d0 	cmplti	zero,zero,5071
   4f3b4:	0004f3d0 	cmplti	zero,zero,5071
   4f3b8:	0004f3e0 	cmpeqi	zero,zero,5071
   4f3bc:	0004f3d0 	cmplti	zero,zero,5071
   4f3c0:	0004f3d8 	cmpnei	zero,zero,5071
   4f3c4:	0004f3e0 	cmpeqi	zero,zero,5071
   4f3c8:	0004f3e0 	cmpeqi	zero,zero,5071
   4f3cc:	0004f3d0 	cmplti	zero,zero,5071
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   4f3d0:	00800044 	movi	r2,1
   4f3d4:	00000306 	br	4f3e4 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   4f3d8:	0005883a 	mov	r2,zero
   4f3dc:	00000106 	br	4f3e4 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
   4f3e0:	0005883a 	mov	r2,zero
  }
}
   4f3e4:	e037883a 	mov	sp,fp
   4f3e8:	df000017 	ldw	fp,0(sp)
   4f3ec:	dec00104 	addi	sp,sp,4
   4f3f0:	f800283a 	ret

0004f3f4 <atexit>:
   4f3f4:	200b883a 	mov	r5,r4
   4f3f8:	000f883a 	mov	r7,zero
   4f3fc:	000d883a 	mov	r6,zero
   4f400:	0009883a 	mov	r4,zero
   4f404:	004f4bc1 	jmpi	4f4bc <__register_exitproc>

0004f408 <exit>:
   4f408:	defffe04 	addi	sp,sp,-8
   4f40c:	000b883a 	mov	r5,zero
   4f410:	dc000015 	stw	r16,0(sp)
   4f414:	dfc00115 	stw	ra,4(sp)
   4f418:	2021883a 	mov	r16,r4
   4f41c:	004f5d40 	call	4f5d4 <__call_exitprocs>
   4f420:	00800174 	movhi	r2,5
   4f424:	10855d04 	addi	r2,r2,5492
   4f428:	11000017 	ldw	r4,0(r2)
   4f42c:	20800f17 	ldw	r2,60(r4)
   4f430:	10000126 	beq	r2,zero,4f438 <exit+0x30>
   4f434:	103ee83a 	callr	r2
   4f438:	8009883a 	mov	r4,r16
   4f43c:	004f7540 	call	4f754 <_exit>

0004f440 <memcmp>:
   4f440:	01c000c4 	movi	r7,3
   4f444:	3980192e 	bgeu	r7,r6,4f4ac <memcmp+0x6c>
   4f448:	2144b03a 	or	r2,r4,r5
   4f44c:	11c4703a 	and	r2,r2,r7
   4f450:	10000f26 	beq	r2,zero,4f490 <memcmp+0x50>
   4f454:	20800003 	ldbu	r2,0(r4)
   4f458:	28c00003 	ldbu	r3,0(r5)
   4f45c:	10c0151e 	bne	r2,r3,4f4b4 <memcmp+0x74>
   4f460:	31bfff84 	addi	r6,r6,-2
   4f464:	01ffffc4 	movi	r7,-1
   4f468:	00000406 	br	4f47c <memcmp+0x3c>
   4f46c:	20800003 	ldbu	r2,0(r4)
   4f470:	28c00003 	ldbu	r3,0(r5)
   4f474:	31bfffc4 	addi	r6,r6,-1
   4f478:	10c00e1e 	bne	r2,r3,4f4b4 <memcmp+0x74>
   4f47c:	21000044 	addi	r4,r4,1
   4f480:	29400044 	addi	r5,r5,1
   4f484:	31fff91e 	bne	r6,r7,4f46c <__alt_data_end+0xfffe836c>
   4f488:	0005883a 	mov	r2,zero
   4f48c:	f800283a 	ret
   4f490:	20c00017 	ldw	r3,0(r4)
   4f494:	28800017 	ldw	r2,0(r5)
   4f498:	18bfee1e 	bne	r3,r2,4f454 <__alt_data_end+0xfffe8354>
   4f49c:	31bfff04 	addi	r6,r6,-4
   4f4a0:	21000104 	addi	r4,r4,4
   4f4a4:	29400104 	addi	r5,r5,4
   4f4a8:	39bff936 	bltu	r7,r6,4f490 <__alt_data_end+0xfffe8390>
   4f4ac:	303fe91e 	bne	r6,zero,4f454 <__alt_data_end+0xfffe8354>
   4f4b0:	003ff506 	br	4f488 <__alt_data_end+0xfffe8388>
   4f4b4:	10c5c83a 	sub	r2,r2,r3
   4f4b8:	f800283a 	ret

0004f4bc <__register_exitproc>:
   4f4bc:	defffa04 	addi	sp,sp,-24
   4f4c0:	dc000315 	stw	r16,12(sp)
   4f4c4:	04000174 	movhi	r16,5
   4f4c8:	84055d04 	addi	r16,r16,5492
   4f4cc:	80c00017 	ldw	r3,0(r16)
   4f4d0:	dc400415 	stw	r17,16(sp)
   4f4d4:	dfc00515 	stw	ra,20(sp)
   4f4d8:	18805217 	ldw	r2,328(r3)
   4f4dc:	2023883a 	mov	r17,r4
   4f4e0:	10003726 	beq	r2,zero,4f5c0 <__register_exitproc+0x104>
   4f4e4:	10c00117 	ldw	r3,4(r2)
   4f4e8:	010007c4 	movi	r4,31
   4f4ec:	20c00e16 	blt	r4,r3,4f528 <__register_exitproc+0x6c>
   4f4f0:	1a000044 	addi	r8,r3,1
   4f4f4:	8800221e 	bne	r17,zero,4f580 <__register_exitproc+0xc4>
   4f4f8:	18c00084 	addi	r3,r3,2
   4f4fc:	18c7883a 	add	r3,r3,r3
   4f500:	18c7883a 	add	r3,r3,r3
   4f504:	12000115 	stw	r8,4(r2)
   4f508:	10c7883a 	add	r3,r2,r3
   4f50c:	19400015 	stw	r5,0(r3)
   4f510:	0005883a 	mov	r2,zero
   4f514:	dfc00517 	ldw	ra,20(sp)
   4f518:	dc400417 	ldw	r17,16(sp)
   4f51c:	dc000317 	ldw	r16,12(sp)
   4f520:	dec00604 	addi	sp,sp,24
   4f524:	f800283a 	ret
   4f528:	00800034 	movhi	r2,0
   4f52c:	10800004 	addi	r2,r2,0
   4f530:	10002626 	beq	r2,zero,4f5cc <__register_exitproc+0x110>
   4f534:	01006404 	movi	r4,400
   4f538:	d9400015 	stw	r5,0(sp)
   4f53c:	d9800115 	stw	r6,4(sp)
   4f540:	d9c00215 	stw	r7,8(sp)
   4f544:	00000000 	call	0 <__alt_mem_onchip_memory2-0x40000>
   4f548:	d9400017 	ldw	r5,0(sp)
   4f54c:	d9800117 	ldw	r6,4(sp)
   4f550:	d9c00217 	ldw	r7,8(sp)
   4f554:	10001d26 	beq	r2,zero,4f5cc <__register_exitproc+0x110>
   4f558:	81000017 	ldw	r4,0(r16)
   4f55c:	10000115 	stw	zero,4(r2)
   4f560:	02000044 	movi	r8,1
   4f564:	22405217 	ldw	r9,328(r4)
   4f568:	0007883a 	mov	r3,zero
   4f56c:	12400015 	stw	r9,0(r2)
   4f570:	20805215 	stw	r2,328(r4)
   4f574:	10006215 	stw	zero,392(r2)
   4f578:	10006315 	stw	zero,396(r2)
   4f57c:	883fde26 	beq	r17,zero,4f4f8 <__alt_data_end+0xfffe83f8>
   4f580:	18c9883a 	add	r4,r3,r3
   4f584:	2109883a 	add	r4,r4,r4
   4f588:	1109883a 	add	r4,r2,r4
   4f58c:	21802215 	stw	r6,136(r4)
   4f590:	01800044 	movi	r6,1
   4f594:	12406217 	ldw	r9,392(r2)
   4f598:	30cc983a 	sll	r6,r6,r3
   4f59c:	4992b03a 	or	r9,r9,r6
   4f5a0:	12406215 	stw	r9,392(r2)
   4f5a4:	21c04215 	stw	r7,264(r4)
   4f5a8:	01000084 	movi	r4,2
   4f5ac:	893fd21e 	bne	r17,r4,4f4f8 <__alt_data_end+0xfffe83f8>
   4f5b0:	11006317 	ldw	r4,396(r2)
   4f5b4:	218cb03a 	or	r6,r4,r6
   4f5b8:	11806315 	stw	r6,396(r2)
   4f5bc:	003fce06 	br	4f4f8 <__alt_data_end+0xfffe83f8>
   4f5c0:	18805304 	addi	r2,r3,332
   4f5c4:	18805215 	stw	r2,328(r3)
   4f5c8:	003fc606 	br	4f4e4 <__alt_data_end+0xfffe83e4>
   4f5cc:	00bfffc4 	movi	r2,-1
   4f5d0:	003fd006 	br	4f514 <__alt_data_end+0xfffe8414>

0004f5d4 <__call_exitprocs>:
   4f5d4:	defff504 	addi	sp,sp,-44
   4f5d8:	df000915 	stw	fp,36(sp)
   4f5dc:	dd400615 	stw	r21,24(sp)
   4f5e0:	dc800315 	stw	r18,12(sp)
   4f5e4:	dfc00a15 	stw	ra,40(sp)
   4f5e8:	ddc00815 	stw	r23,32(sp)
   4f5ec:	dd800715 	stw	r22,28(sp)
   4f5f0:	dd000515 	stw	r20,20(sp)
   4f5f4:	dcc00415 	stw	r19,16(sp)
   4f5f8:	dc400215 	stw	r17,8(sp)
   4f5fc:	dc000115 	stw	r16,4(sp)
   4f600:	d9000015 	stw	r4,0(sp)
   4f604:	2839883a 	mov	fp,r5
   4f608:	04800044 	movi	r18,1
   4f60c:	057fffc4 	movi	r21,-1
   4f610:	00800174 	movhi	r2,5
   4f614:	10855d04 	addi	r2,r2,5492
   4f618:	12000017 	ldw	r8,0(r2)
   4f61c:	45005217 	ldw	r20,328(r8)
   4f620:	44c05204 	addi	r19,r8,328
   4f624:	a0001c26 	beq	r20,zero,4f698 <__call_exitprocs+0xc4>
   4f628:	a0800117 	ldw	r2,4(r20)
   4f62c:	15ffffc4 	addi	r23,r2,-1
   4f630:	b8000d16 	blt	r23,zero,4f668 <__call_exitprocs+0x94>
   4f634:	14000044 	addi	r16,r2,1
   4f638:	8421883a 	add	r16,r16,r16
   4f63c:	8421883a 	add	r16,r16,r16
   4f640:	84402004 	addi	r17,r16,128
   4f644:	a463883a 	add	r17,r20,r17
   4f648:	a421883a 	add	r16,r20,r16
   4f64c:	e0001e26 	beq	fp,zero,4f6c8 <__call_exitprocs+0xf4>
   4f650:	80804017 	ldw	r2,256(r16)
   4f654:	e0801c26 	beq	fp,r2,4f6c8 <__call_exitprocs+0xf4>
   4f658:	bdffffc4 	addi	r23,r23,-1
   4f65c:	843fff04 	addi	r16,r16,-4
   4f660:	8c7fff04 	addi	r17,r17,-4
   4f664:	bd7ff91e 	bne	r23,r21,4f64c <__alt_data_end+0xfffe854c>
   4f668:	00800034 	movhi	r2,0
   4f66c:	10800004 	addi	r2,r2,0
   4f670:	10000926 	beq	r2,zero,4f698 <__call_exitprocs+0xc4>
   4f674:	a0800117 	ldw	r2,4(r20)
   4f678:	1000301e 	bne	r2,zero,4f73c <__call_exitprocs+0x168>
   4f67c:	a0800017 	ldw	r2,0(r20)
   4f680:	10003226 	beq	r2,zero,4f74c <__call_exitprocs+0x178>
   4f684:	a009883a 	mov	r4,r20
   4f688:	98800015 	stw	r2,0(r19)
   4f68c:	00000000 	call	0 <__alt_mem_onchip_memory2-0x40000>
   4f690:	9d000017 	ldw	r20,0(r19)
   4f694:	a03fe41e 	bne	r20,zero,4f628 <__alt_data_end+0xfffe8528>
   4f698:	dfc00a17 	ldw	ra,40(sp)
   4f69c:	df000917 	ldw	fp,36(sp)
   4f6a0:	ddc00817 	ldw	r23,32(sp)
   4f6a4:	dd800717 	ldw	r22,28(sp)
   4f6a8:	dd400617 	ldw	r21,24(sp)
   4f6ac:	dd000517 	ldw	r20,20(sp)
   4f6b0:	dcc00417 	ldw	r19,16(sp)
   4f6b4:	dc800317 	ldw	r18,12(sp)
   4f6b8:	dc400217 	ldw	r17,8(sp)
   4f6bc:	dc000117 	ldw	r16,4(sp)
   4f6c0:	dec00b04 	addi	sp,sp,44
   4f6c4:	f800283a 	ret
   4f6c8:	a0800117 	ldw	r2,4(r20)
   4f6cc:	80c00017 	ldw	r3,0(r16)
   4f6d0:	10bfffc4 	addi	r2,r2,-1
   4f6d4:	15c01426 	beq	r2,r23,4f728 <__call_exitprocs+0x154>
   4f6d8:	80000015 	stw	zero,0(r16)
   4f6dc:	183fde26 	beq	r3,zero,4f658 <__alt_data_end+0xfffe8558>
   4f6e0:	95c8983a 	sll	r4,r18,r23
   4f6e4:	a0806217 	ldw	r2,392(r20)
   4f6e8:	a5800117 	ldw	r22,4(r20)
   4f6ec:	2084703a 	and	r2,r4,r2
   4f6f0:	10000b26 	beq	r2,zero,4f720 <__call_exitprocs+0x14c>
   4f6f4:	a0806317 	ldw	r2,396(r20)
   4f6f8:	2088703a 	and	r4,r4,r2
   4f6fc:	20000c1e 	bne	r4,zero,4f730 <__call_exitprocs+0x15c>
   4f700:	89400017 	ldw	r5,0(r17)
   4f704:	d9000017 	ldw	r4,0(sp)
   4f708:	183ee83a 	callr	r3
   4f70c:	a0800117 	ldw	r2,4(r20)
   4f710:	15bfbf1e 	bne	r2,r22,4f610 <__alt_data_end+0xfffe8510>
   4f714:	98800017 	ldw	r2,0(r19)
   4f718:	153fcf26 	beq	r2,r20,4f658 <__alt_data_end+0xfffe8558>
   4f71c:	003fbc06 	br	4f610 <__alt_data_end+0xfffe8510>
   4f720:	183ee83a 	callr	r3
   4f724:	003ff906 	br	4f70c <__alt_data_end+0xfffe860c>
   4f728:	a5c00115 	stw	r23,4(r20)
   4f72c:	003feb06 	br	4f6dc <__alt_data_end+0xfffe85dc>
   4f730:	89000017 	ldw	r4,0(r17)
   4f734:	183ee83a 	callr	r3
   4f738:	003ff406 	br	4f70c <__alt_data_end+0xfffe860c>
   4f73c:	a0800017 	ldw	r2,0(r20)
   4f740:	a027883a 	mov	r19,r20
   4f744:	1029883a 	mov	r20,r2
   4f748:	003fb606 	br	4f624 <__alt_data_end+0xfffe8524>
   4f74c:	0005883a 	mov	r2,zero
   4f750:	003ffb06 	br	4f740 <__alt_data_end+0xfffe8640>

0004f754 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   4f754:	defffd04 	addi	sp,sp,-12
   4f758:	df000215 	stw	fp,8(sp)
   4f75c:	df000204 	addi	fp,sp,8
   4f760:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   4f764:	0001883a 	nop
   4f768:	e0bfff17 	ldw	r2,-4(fp)
   4f76c:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   4f770:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   4f774:	10000226 	beq	r2,zero,4f780 <_exit+0x2c>
    ALT_SIM_FAIL();
   4f778:	002af070 	cmpltui	zero,zero,43969
   4f77c:	00000106 	br	4f784 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   4f780:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   4f784:	003fff06 	br	4f784 <__alt_data_end+0xfffe8684>
